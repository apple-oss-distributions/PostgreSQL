diff -Naur postgresql-9.2.13/contrib/cube/cubeparse.c postgresql/contrib/cube/cubeparse.c
--- postgresql-9.2.13/contrib/cube/cubeparse.c	2015-06-09 12:48:20.000000000 -0700
+++ postgresql/contrib/cube/cubeparse.c	2015-07-01 18:01:11.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,45 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         cube_yyparse
-#define yylex           cube_yylex
-#define yyerror         cube_yyerror
-#define yylval          cube_yylval
-#define yychar          cube_yychar
-#define yydebug         cube_yydebug
-#define yynerrs         cube_yynerrs
+#define yyparse cube_yyparse
+#define yylex   cube_yylex
+#define yyerror cube_yyerror
+#define yylval  cube_yylval
+#define yychar  cube_yychar
+#define yydebug cube_yydebug
+#define yynerrs cube_yynerrs
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     CUBEFLOAT = 258,
+     O_PAREN = 259,
+     C_PAREN = 260,
+     O_BRACKET = 261,
+     C_BRACKET = 262,
+     COMMA = 263
+   };
+#endif
+/* Tokens.  */
+#define CUBEFLOAT 258
+#define O_PAREN 259
+#define C_PAREN 260
+#define O_BRACKET 261
+#define C_BRACKET 262
+#define COMMA 263
 
 
-/* Copy the first part of user declarations.  */
 
-/* Line 268 of yacc.c  */
+
+/* Copy the first part of user declarations.  */
 #line 1 "cubeparse.y"
 
 /* contrib/cube/cubeparse.y */
@@ -113,9 +133,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 118 "cubeparse.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -134,37 +151,20 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     CUBEFLOAT = 258,
-     O_PAREN = 259,
-     C_PAREN = 260,
-     O_BRACKET = 261,
-     C_BRACKET = 262,
-     COMMA = 263
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef int YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 168 "cubeparse.c"
+/* Line 216 of yacc.c.  */
+#line 168 "cubeparse.tab.c"
 
 #ifdef short
 # undef short
@@ -239,14 +239,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -267,11 +267,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -294,24 +294,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -327,9 +327,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -340,27 +340,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -378,7 +357,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  9
@@ -488,8 +484,8 @@
        0,     2,     5,     3,     1,     1,     3,     1,     3
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -520,7 +516,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -528,12 +525,6 @@
       16,    15,    10,    11,    13,     7,     0,    17
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-4))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        3,     3,     4,     4,     6,     5,     3,    10,     8,     0,
@@ -560,18 +551,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -581,6 +563,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -622,10 +605,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -732,20 +724,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -780,11 +769,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       , result);
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -821,6 +810,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -923,142 +913,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1092,9 +1055,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1110,16 +1074,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1146,37 +1112,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1184,28 +1127,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1235,6 +1201,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1242,6 +1209,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1264,8 +1232,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1276,6 +1245,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1285,9 +1255,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1296,16 +1263,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1331,22 +1298,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1386,8 +1357,6 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 51 "cubeparse.y"
     {
 		int dim;
@@ -1413,12 +1382,10 @@
 
 		*result = write_box( dim, (yyvsp[(2) - (5)]), (yyvsp[(4) - (5)]) );
 
-	}
+	;}
     break;
 
   case 3:
-
-/* Line 1806 of yacc.c  */
 #line 78 "cubeparse.y"
     {
 		int dim;
@@ -1443,12 +1410,10 @@
 		}
 
 		*result = write_box( dim, (yyvsp[(1) - (3)]), (yyvsp[(3) - (3)]) );
-	}
+	;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 104 "cubeparse.y"
     {
 		int dim;
@@ -1464,12 +1429,10 @@
 		}
 
 		*result = write_point_as_box((yyvsp[(1) - (1)]), dim);
-	}
+	;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 121 "cubeparse.y"
     {
 		int dim;
@@ -1484,57 +1447,39 @@
 			YYABORT;
 		}
 		*result = write_point_as_box((yyvsp[(1) - (1)]), dim);
-	}
+	;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 138 "cubeparse.y"
     {
 		(yyval) = (yyvsp[(2) - (3)]);
-	}
+	;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 144 "cubeparse.y"
     {
 		/* alloc enough space to be sure whole list will fit */
 		(yyval) = palloc(scanbuflen + 1);
 		strcpy((yyval), (yyvsp[(1) - (1)]));
-	}
+	;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 150 "cubeparse.y"
     {
 		(yyval) = (yyvsp[(1) - (3)]);
 		strcat((yyval), ",");
 		strcat((yyval), (yyvsp[(3) - (3)]));
-	}
+	;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1525 "cubeparse.c"
+/* Line 1267 of yacc.c.  */
+#line 1481 "cubeparse.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1543,6 +1488,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -1562,10 +1508,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -1573,36 +1515,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (result, YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (result, yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (result, yymsg);
+	  }
+	else
+	  {
+	    yyerror (result, YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -1610,7 +1553,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -1627,7 +1570,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -1661,7 +1604,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -1684,6 +1627,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -1708,7 +1654,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -1719,14 +1665,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, result);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, result);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -1750,8 +1691,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 157 "cubeparse.y"
 
 
diff -Naur postgresql-9.2.13/contrib/seg/segparse.c postgresql/contrib/seg/segparse.c
--- postgresql-9.2.13/contrib/seg/segparse.c	2015-06-09 12:48:21.000000000 -0700
+++ postgresql/contrib/seg/segparse.c	2015-07-01 18:02:32.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,41 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         seg_yyparse
-#define yylex           seg_yylex
-#define yyerror         seg_yyerror
-#define yylval          seg_yylval
-#define yychar          seg_yychar
-#define yydebug         seg_yydebug
-#define yynerrs         seg_yynerrs
+#define yyparse seg_yyparse
+#define yylex   seg_yylex
+#define yyerror seg_yyerror
+#define yylval  seg_yylval
+#define yychar  seg_yychar
+#define yydebug seg_yydebug
+#define yynerrs seg_yynerrs
 
 
-/* Copy the first part of user declarations.  */
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     SEGFLOAT = 258,
+     RANGE = 259,
+     PLUMIN = 260,
+     EXTENSION = 261
+   };
+#endif
+/* Tokens.  */
+#define SEGFLOAT 258
+#define RANGE 259
+#define PLUMIN 260
+#define EXTENSION 261
+
 
-/* Line 268 of yacc.c  */
+
+
+/* Copy the first part of user declarations.  */
 #line 1 "segparse.y"
 
 /* contrib/seg/segparse.y */
@@ -116,9 +132,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 121 "segparse.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -137,52 +150,32 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     SEGFLOAT = 258,
-     RANGE = 259,
-     PLUMIN = 260,
-     EXTENSION = 261
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 47 "segparse.y"
-
+{
 	struct BND {
 		float val;
 		char  ext;
 		char  sigd;
 	} bnd;
 	char * text;
-
-
-
-/* Line 293 of yacc.c  */
-#line 174 "segparse.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 166 "segparse.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 186 "segparse.c"
+/* Line 216 of yacc.c.  */
+#line 179 "segparse.tab.c"
 
 #ifdef short
 # undef short
@@ -257,14 +250,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -285,11 +278,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -312,24 +305,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -345,9 +338,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -358,27 +351,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -396,7 +368,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  8
@@ -505,8 +494,8 @@
        0,     2,     3,     3,     2,     2,     1,     1,     2,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -537,7 +526,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -545,12 +535,6 @@
        9,    10,    12
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-3))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        2,    -1,     3,     4,     3,     6,     3,     9,     0,     6,
@@ -577,18 +561,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -598,6 +573,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -639,10 +615,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -749,20 +734,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -797,11 +779,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       , result);
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -838,6 +820,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -940,142 +923,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1109,9 +1065,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1127,16 +1084,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1163,37 +1122,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1201,28 +1137,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1252,6 +1211,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1259,6 +1219,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1281,8 +1242,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1293,6 +1255,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1302,9 +1265,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1313,16 +1273,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1348,22 +1308,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1403,8 +1367,6 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 68 "segparse.y"
     {
 		result->lower = (yyvsp[(1) - (3)].bnd).val - (yyvsp[(3) - (3)].bnd).val;
@@ -1415,12 +1377,10 @@
 		result->u_sigd = Max(Min(6, significant_digits(strbuf)), Max((yyvsp[(1) - (3)].bnd).sigd, (yyvsp[(3) - (3)].bnd).sigd));
 		result->l_ext = '\0';
 		result->u_ext = '\0';
-	}
+	;}
     break;
 
   case 3:
-
-/* Line 1806 of yacc.c  */
 #line 80 "segparse.y"
     {
 		result->lower = (yyvsp[(1) - (3)].bnd).val;
@@ -1437,12 +1397,10 @@
 		result->u_sigd = (yyvsp[(3) - (3)].bnd).sigd;
 		result->l_ext = ( (yyvsp[(1) - (3)].bnd).ext ? (yyvsp[(1) - (3)].bnd).ext : '\0' );
 		result->u_ext = ( (yyvsp[(3) - (3)].bnd).ext ? (yyvsp[(3) - (3)].bnd).ext : '\0' );
-	}
+	;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 98 "segparse.y"
     {
 		result->lower = (yyvsp[(1) - (2)].bnd).val;
@@ -1451,12 +1409,10 @@
 		result->u_sigd = 0;
 		result->l_ext = ( (yyvsp[(1) - (2)].bnd).ext ? (yyvsp[(1) - (2)].bnd).ext : '\0' );
 		result->u_ext = '-';
-	}
+	;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 108 "segparse.y"
     {
 		result->lower = -HUGE_VAL;
@@ -1465,23 +1421,19 @@
 		result->u_sigd = (yyvsp[(2) - (2)].bnd).sigd;
 		result->l_ext = '-';
 		result->u_ext = ( (yyvsp[(2) - (2)].bnd).ext ? (yyvsp[(2) - (2)].bnd).ext : '\0' );
-	}
+	;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 118 "segparse.y"
     {
 		result->lower = result->upper = (yyvsp[(1) - (1)].bnd).val;
 		result->l_sigd = result->u_sigd = (yyvsp[(1) - (1)].bnd).sigd;
 		result->l_ext = result->u_ext = ( (yyvsp[(1) - (1)].bnd).ext ? (yyvsp[(1) - (1)].bnd).ext : '\0' );
-	}
+	;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 126 "segparse.y"
     {
 		/* temp variable avoids a gcc 3.3.x bug on Sparc64 */
@@ -1490,12 +1442,10 @@
 		(yyval.bnd).ext = '\0';
 		(yyval.bnd).sigd = significant_digits((yyvsp[(1) - (1)].text));
 		(yyval.bnd).val = val;
-	}
+	;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 135 "segparse.y"
     {
 		/* temp variable avoids a gcc 3.3.x bug on Sparc64 */
@@ -1504,12 +1454,10 @@
 		(yyval.bnd).ext = (yyvsp[(1) - (2)].text)[0];
 		(yyval.bnd).sigd = significant_digits((yyvsp[(2) - (2)].text));
 		(yyval.bnd).val = val;
-	}
+	;}
     break;
 
   case 9:
-
-/* Line 1806 of yacc.c  */
 #line 146 "segparse.y"
     {
 		/* temp variable avoids a gcc 3.3.x bug on Sparc64 */
@@ -1518,26 +1466,14 @@
 		(yyval.bnd).ext = '\0';
 		(yyval.bnd).sigd = significant_digits((yyvsp[(1) - (1)].text));
 		(yyval.bnd).val = val;
-	}
+	;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1528 "segparse.c"
+/* Line 1267 of yacc.c.  */
+#line 1475 "segparse.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1546,6 +1482,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -1565,10 +1502,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -1576,36 +1509,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (result, YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (result, yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (result, yymsg);
+	  }
+	else
+	  {
+	    yyerror (result, YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -1613,7 +1547,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -1630,7 +1564,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -1664,7 +1598,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -1687,6 +1621,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -1711,7 +1648,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -1722,14 +1659,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, result);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, result);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -1753,8 +1685,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 156 "segparse.y"
 
 
diff -Naur postgresql-9.2.13/src/backend/bootstrap/bootparse.c postgresql/src/backend/bootstrap/bootparse.c
--- postgresql-9.2.13/src/backend/bootstrap/bootparse.c	2015-06-09 12:48:18.000000000 -0700
+++ postgresql/src/backend/bootstrap/bootparse.c	2015-07-01 18:03:09.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,85 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         boot_yyparse
-#define yylex           boot_yylex
-#define yyerror         boot_yyerror
-#define yylval          boot_yylval
-#define yychar          boot_yychar
-#define yydebug         boot_yydebug
-#define yynerrs         boot_yynerrs
+#define yyparse boot_yyparse
+#define yylex   boot_yylex
+#define yyerror boot_yyerror
+#define yylval  boot_yylval
+#define yychar  boot_yychar
+#define yydebug boot_yydebug
+#define yynerrs boot_yynerrs
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     CONST_P = 258,
+     ID = 259,
+     OPEN = 260,
+     XCLOSE = 261,
+     XCREATE = 262,
+     INSERT_TUPLE = 263,
+     XDECLARE = 264,
+     INDEX = 265,
+     ON = 266,
+     USING = 267,
+     XBUILD = 268,
+     INDICES = 269,
+     UNIQUE = 270,
+     XTOAST = 271,
+     COMMA = 272,
+     EQUALS = 273,
+     LPAREN = 274,
+     RPAREN = 275,
+     OBJ_ID = 276,
+     XBOOTSTRAP = 277,
+     XSHARED_RELATION = 278,
+     XWITHOUT_OIDS = 279,
+     XROWTYPE_OID = 280,
+     NULLVAL = 281,
+     low = 282,
+     high = 283
+   };
+#endif
+/* Tokens.  */
+#define CONST_P 258
+#define ID 259
+#define OPEN 260
+#define XCLOSE 261
+#define XCREATE 262
+#define INSERT_TUPLE 263
+#define XDECLARE 264
+#define INDEX 265
+#define ON 266
+#define USING 267
+#define XBUILD 268
+#define INDICES 269
+#define UNIQUE 270
+#define XTOAST 271
+#define COMMA 272
+#define EQUALS 273
+#define LPAREN 274
+#define RPAREN 275
+#define OBJ_ID 276
+#define XBOOTSTRAP 277
+#define XSHARED_RELATION 278
+#define XWITHOUT_OIDS 279
+#define XROWTYPE_OID 280
+#define NULLVAL 281
+#define low 282
+#define high 283
 
 
-/* Copy the first part of user declarations.  */
 
-/* Line 268 of yacc.c  */
+
+/* Copy the first part of user declarations.  */
 #line 1 "bootparse.y"
 
 /*-------------------------------------------------------------------------
@@ -169,9 +229,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 174 "bootparse.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -190,73 +247,31 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     CONST_P = 258,
-     ID = 259,
-     OPEN = 260,
-     XCLOSE = 261,
-     XCREATE = 262,
-     INSERT_TUPLE = 263,
-     XDECLARE = 264,
-     INDEX = 265,
-     ON = 266,
-     USING = 267,
-     XBUILD = 268,
-     INDICES = 269,
-     UNIQUE = 270,
-     XTOAST = 271,
-     COMMA = 272,
-     EQUALS = 273,
-     LPAREN = 274,
-     RPAREN = 275,
-     OBJ_ID = 276,
-     XBOOTSTRAP = 277,
-     XSHARED_RELATION = 278,
-     XWITHOUT_OIDS = 279,
-     XROWTYPE_OID = 280,
-     NULLVAL = 281,
-     low = 282,
-     high = 283
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 99 "bootparse.y"
-
+{
 	List		*list;
 	IndexElem	*ielem;
 	char		*str;
 	int			ival;
 	Oid			oidval;
-
-
-
-/* Line 293 of yacc.c  */
-#line 248 "bootparse.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 262 "bootparse.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 260 "bootparse.c"
+/* Line 216 of yacc.c.  */
+#line 275 "bootparse.tab.c"
 
 #ifdef short
 # undef short
@@ -331,14 +346,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -359,11 +374,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -386,24 +401,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -419,9 +434,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -432,27 +447,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -470,7 +464,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  28
@@ -584,7 +595,7 @@
   "OBJ_ID", "XBOOTSTRAP", "XSHARED_RELATION", "XWITHOUT_OIDS",
   "XROWTYPE_OID", "NULLVAL", "low", "high", "$accept", "TopLevel",
   "Boot_Queries", "Boot_Query", "Boot_OpenStmt", "Boot_CloseStmt",
-  "Boot_CreateStmt", "$@1", "$@2", "Boot_InsertStmt", "$@3",
+  "Boot_CreateStmt", "@1", "@2", "Boot_InsertStmt", "@3",
   "Boot_DeclareIndexStmt", "Boot_DeclareUniqueIndexStmt",
   "Boot_DeclareToastStmt", "Boot_BuildIndsStmt", "boot_index_params",
   "boot_index_param", "optbootstrap", "optsharedrelation",
@@ -627,8 +638,8 @@
        1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -679,7 +690,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -694,12 +706,6 @@
       80,    77,     0,    91,    80
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-41))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        1,     2,     3,    26,     3,     4,     3,     4,    48,    32,
@@ -741,18 +747,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -762,6 +759,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -803,10 +801,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -910,20 +917,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -957,11 +961,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -998,6 +1002,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -1100,142 +1105,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1267,9 +1245,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1285,16 +1264,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1321,37 +1302,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1359,28 +1317,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1410,6 +1391,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1417,6 +1399,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1439,8 +1422,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1451,6 +1435,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1460,9 +1445,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1471,16 +1453,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1506,22 +1488,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1561,41 +1547,33 @@
   switch (yyn)
     {
         case 14:
-
-/* Line 1806 of yacc.c  */
 #line 149 "bootparse.y"
     {
 					do_start();
 					boot_openrel((yyvsp[(2) - (2)].str));
 					do_end();
-				}
+				;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 158 "bootparse.y"
     {
 					do_start();
 					closerel((yyvsp[(2) - (2)].str));
 					do_end();
-				}
+				;}
     break;
 
   case 16:
-
-/* Line 1806 of yacc.c  */
 #line 164 "bootparse.y"
     {
 					do_start();
 					closerel(NULL);
 					do_end();
-				}
+				;}
     break;
 
   case 17:
-
-/* Line 1806 of yacc.c  */
 #line 173 "bootparse.y"
     {
 					do_start();
@@ -1605,21 +1583,17 @@
 						 (yyvsp[(5) - (8)].ival) ? " shared" : "",
 						 (yyvsp[(2) - (8)].str),
 						 (yyvsp[(3) - (8)].oidval));
-				}
+				;}
     break;
 
   case 18:
-
-/* Line 1806 of yacc.c  */
 #line 183 "bootparse.y"
     {
 					do_end();
-				}
+				;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 187 "bootparse.y"
     {
 					TupleDesc tupdesc;
@@ -1690,12 +1664,10 @@
 						elog(DEBUG4, "relation created with OID %u", id);
 					}
 					do_end();
-				}
+				;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 261 "bootparse.y"
     {
 					do_start();
@@ -1704,12 +1676,10 @@
 					else
 						elog(DEBUG4, "inserting row");
 					num_columns_read = 0;
-				}
+				;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 270 "bootparse.y"
     {
 					if (num_columns_read != numattr)
@@ -1719,12 +1689,10 @@
 						elog(FATAL, "relation not open");
 					InsertOneTuple((yyvsp[(2) - (6)].oidval));
 					do_end();
-				}
+				;}
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 283 "bootparse.y"
     {
 					IndexStmt *stmt = makeNode(IndexStmt);
@@ -1762,12 +1730,10 @@
 								true, /* skip_build */
 								false);
 					do_end();
-				}
+				;}
     break;
 
   case 23:
-
-/* Line 1806 of yacc.c  */
 #line 324 "bootparse.y"
     {
 					IndexStmt *stmt = makeNode(IndexStmt);
@@ -1805,49 +1771,39 @@
 								true, /* skip_build */
 								false);
 					do_end();
-				}
+				;}
     break;
 
   case 24:
-
-/* Line 1806 of yacc.c  */
 #line 365 "bootparse.y"
     {
 					do_start();
 
 					BootstrapToastTable((yyvsp[(6) - (6)].str), (yyvsp[(3) - (6)].oidval), (yyvsp[(4) - (6)].oidval));
 					do_end();
-				}
+				;}
     break;
 
   case 25:
-
-/* Line 1806 of yacc.c  */
 #line 375 "bootparse.y"
     {
 					do_start();
 					build_indices();
 					do_end();
-				}
+				;}
     break;
 
   case 26:
-
-/* Line 1806 of yacc.c  */
 #line 384 "bootparse.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
     break;
 
   case 27:
-
-/* Line 1806 of yacc.c  */
 #line 385 "bootparse.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
     break;
 
   case 28:
-
-/* Line 1806 of yacc.c  */
 #line 390 "bootparse.y"
     {
 					IndexElem *n = makeNode(IndexElem);
@@ -1859,149 +1815,103 @@
 					n->ordering = SORTBY_DEFAULT;
 					n->nulls_ordering = SORTBY_NULLS_DEFAULT;
 					(yyval.ielem) = n;
-				}
+				;}
     break;
 
   case 29:
-
-/* Line 1806 of yacc.c  */
 #line 404 "bootparse.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 30:
-
-/* Line 1806 of yacc.c  */
 #line 405 "bootparse.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 31:
-
-/* Line 1806 of yacc.c  */
 #line 409 "bootparse.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 32:
-
-/* Line 1806 of yacc.c  */
 #line 410 "bootparse.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 33:
-
-/* Line 1806 of yacc.c  */
 #line 414 "bootparse.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 34:
-
-/* Line 1806 of yacc.c  */
 #line 415 "bootparse.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 35:
-
-/* Line 1806 of yacc.c  */
 #line 419 "bootparse.y"
-    { (yyval.oidval) = (yyvsp[(2) - (2)].oidval); }
+    { (yyval.oidval) = (yyvsp[(2) - (2)].oidval); ;}
     break;
 
   case 36:
-
-/* Line 1806 of yacc.c  */
 #line 420 "bootparse.y"
-    { (yyval.oidval) = InvalidOid; }
+    { (yyval.oidval) = InvalidOid; ;}
     break;
 
   case 39:
-
-/* Line 1806 of yacc.c  */
 #line 430 "bootparse.y"
     {
 				   if (++numattr > MAXATTR)
 						elog(FATAL, "too many columns");
 				   DefineAttr((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), numattr-1);
-				}
+				;}
     break;
 
   case 40:
-
-/* Line 1806 of yacc.c  */
 #line 438 "bootparse.y"
-    { (yyval.oidval) = atooid((yyvsp[(1) - (1)].str)); }
+    { (yyval.oidval) = atooid((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 41:
-
-/* Line 1806 of yacc.c  */
 #line 442 "bootparse.y"
-    { (yyval.oidval) = (yyvsp[(3) - (3)].oidval); }
+    { (yyval.oidval) = (yyvsp[(3) - (3)].oidval); ;}
     break;
 
   case 42:
-
-/* Line 1806 of yacc.c  */
 #line 443 "bootparse.y"
-    { (yyval.oidval) = InvalidOid; }
+    { (yyval.oidval) = InvalidOid; ;}
     break;
 
   case 46:
-
-/* Line 1806 of yacc.c  */
 #line 454 "bootparse.y"
-    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); }
+    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); ;}
     break;
 
   case 47:
-
-/* Line 1806 of yacc.c  */
 #line 456 "bootparse.y"
-    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); }
+    { InsertOneValue((yyvsp[(1) - (1)].str), num_columns_read++); ;}
     break;
 
   case 48:
-
-/* Line 1806 of yacc.c  */
 #line 458 "bootparse.y"
-    { InsertOneNull(num_columns_read++); }
+    { InsertOneNull(num_columns_read++); ;}
     break;
 
   case 49:
-
-/* Line 1806 of yacc.c  */
 #line 462 "bootparse.y"
-    { (yyval.str) = yylval.str; }
+    { (yyval.str) = yylval.str; ;}
     break;
 
   case 50:
-
-/* Line 1806 of yacc.c  */
 #line 466 "bootparse.y"
-    { (yyval.str) = yylval.str; }
+    { (yyval.str) = yylval.str; ;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1992 "bootparse.c"
+/* Line 1267 of yacc.c.  */
+#line 1913 "bootparse.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -2010,6 +1920,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -2029,10 +1940,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -2040,36 +1947,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -2077,7 +1985,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -2094,7 +2002,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -2128,7 +2036,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -2151,6 +2059,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -2175,7 +2086,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -2186,14 +2097,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -2217,8 +2123,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 468 "bootparse.y"
 
 
diff -Naur postgresql-9.2.13/src/backend/parser/gram.c postgresql/src/backend/parser/gram.c
--- postgresql-9.2.13/src/backend/parser/gram.c	2015-06-09 12:48:18.000000000 -0700
+++ postgresql/src/backend/parser/gram.c	2015-07-01 18:06:54.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,198 +55,18 @@
 /* Pure parsers.  */
 #define YYPURE 1
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 1
 
 /* Substitute the variable and function names.  */
-#define yyparse         base_yyparse
-#define yylex           base_yylex
-#define yyerror         base_yyerror
-#define yylval          base_yylval
-#define yychar          base_yychar
-#define yydebug         base_yydebug
-#define yynerrs         base_yynerrs
-#define yylloc          base_yylloc
-
-/* Copy the first part of user declarations.  */
-
-/* Line 268 of yacc.c  */
-#line 1 "gram.y"
-
-
-/*#define YYDEBUG 1*/
-/*-------------------------------------------------------------------------
- *
- * gram.y
- *	  POSTGRESQL BISON rules/actions
- *
- * Portions Copyright (c) 1996-2012, PostgreSQL Global Development Group
- * Portions Copyright (c) 1994, Regents of the University of California
- *
- *
- * IDENTIFICATION
- *	  src/backend/parser/gram.y
- *
- * HISTORY
- *	  AUTHOR			DATE			MAJOR EVENT
- *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
- *	  Andrew Yu			Oct, 1994		lispy code conversion
- *
- * NOTES
- *	  CAPITALS are used to represent terminal symbols.
- *	  non-capitals are used to represent non-terminals.
- *	  SQL92-specific syntax is separated from plain SQL/Postgres syntax
- *	  to help isolate the non-extensible portions of the parser.
- *
- *	  In general, nothing in this file should initiate database accesses
- *	  nor depend on changeable state (such as SET variables).  If you do
- *	  database accesses, your code will fail when we have aborted the
- *	  current transaction and are just parsing commands to find the next
- *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
- *	  will do the wrong thing in multi-query strings like this:
- *			SET SQL_inheritance TO off; SELECT * FROM foo;
- *	  because the entire string is parsed by gram.y before the SET gets
- *	  executed.  Anything that depends on the database or changeable state
- *	  should be handled during parse analysis so that it happens at the
- *	  right time not the wrong time.  The handling of SQL_inheritance is
- *	  a good example.
- *
- * WARNINGS
- *	  If you use a list, make sure the datum is a node so that the printing
- *	  routines work.
- *
- *	  Sometimes we assign constants to makeStrings. Make sure we don't free
- *	  those.
- *
- *-------------------------------------------------------------------------
- */
-#include "postgres.h"
-
-#include <ctype.h>
-#include <limits.h>
-
-#include "catalog/index.h"
-#include "catalog/namespace.h"
-#include "catalog/pg_trigger.h"
-#include "commands/defrem.h"
-#include "nodes/makefuncs.h"
-#include "nodes/nodeFuncs.h"
-#include "parser/gramparse.h"
-#include "parser/parser.h"
-#include "storage/lmgr.h"
-#include "utils/date.h"
-#include "utils/datetime.h"
-#include "utils/numeric.h"
-#include "utils/xml.h"
-
-
-/* Location tracking support --- simpler than bison's default */
-#define YYLLOC_DEFAULT(Current, Rhs, N) \
-	do { \
-		if (N) \
-			(Current) = (Rhs)[1]; \
-		else \
-			(Current) = (Rhs)[0]; \
-	} while (0)
-
-/*
- * Bison doesn't allocate anything that needs to live across parser calls,
- * so we can easily have it use palloc instead of malloc.  This prevents
- * memory leaks if we error out during parsing.  Note this only works with
- * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
- * if possible, so there's not really much problem anyhow, at least if
- * you're building with gcc.
- */
-#define YYMALLOC palloc
-#define YYFREE   pfree
-
-/* Private struct for the result of privilege_target production */
-typedef struct PrivTarget
-{
-	GrantTargetType targtype;
-	GrantObjectType objtype;
-	List	   *objs;
-} PrivTarget;
-
-/* ConstraintAttributeSpec yields an integer bitmask of these flags: */
-#define CAS_NOT_DEFERRABLE			0x01
-#define CAS_DEFERRABLE				0x02
-#define CAS_INITIALLY_IMMEDIATE		0x04
-#define CAS_INITIALLY_DEFERRED		0x08
-#define CAS_NOT_VALID				0x10
-#define CAS_NO_INHERIT				0x20
-
-
-#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
-#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)
-
-static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
-						 const char *msg);
-static Node *makeColumnRef(char *colname, List *indirection,
-						   int location, core_yyscan_t yyscanner);
-static Node *makeTypeCast(Node *arg, TypeName *typename, int location);
-static Node *makeStringConst(char *str, int location);
-static Node *makeStringConstCast(char *str, int location, TypeName *typename);
-static Node *makeIntConst(int val, int location);
-static Node *makeFloatConst(char *str, int location);
-static Node *makeBitStringConst(char *str, int location);
-static Node *makeNullAConst(int location);
-static Node *makeAConst(Value *v, int location);
-static Node *makeBoolAConst(bool state, int location);
-static void check_qualified_name(List *names, core_yyscan_t yyscanner);
-static List *check_func_name(List *names, core_yyscan_t yyscanner);
-static List *check_indirection(List *indirection, core_yyscan_t yyscanner);
-static List *extractArgTypes(List *parameters);
-static void insertSelectOptions(SelectStmt *stmt,
-								List *sortClause, List *lockingClause,
-								Node *limitOffset, Node *limitCount,
-								WithClause *withClause,
-								core_yyscan_t yyscanner);
-static Node *makeSetOp(SetOperation op, bool all, Node *larg, Node *rarg);
-static Node *doNegate(Node *n, int location);
-static void doNegateFloat(Value *v);
-static Node *makeAArrayExpr(List *elements, int location);
-static Node *makeXmlExpr(XmlExprOp op, char *name, List *named_args,
-						 List *args, int location);
-static List *mergeTableFuncParameters(List *func_args, List *columns);
-static TypeName *TableFuncTypeName(List *columns);
-static RangeVar *makeRangeVarFromAnyName(List *names, int position, core_yyscan_t yyscanner);
-static void SplitColQualList(List *qualList,
-							 List **constraintList, CollateClause **collClause,
-							 core_yyscan_t yyscanner);
-static void processCASbits(int cas_bits, int location, const char *constrType,
-			   bool *deferrable, bool *initdeferred, bool *not_valid,
-			   bool *no_inherit, core_yyscan_t yyscanner);
-
-
-
-/* Line 268 of yacc.c  */
-#line 228 "gram.c"
-
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
-
-/* Enabling verbose error messages.  */
-#ifdef YYERROR_VERBOSE
-# undef YYERROR_VERBOSE
-# define YYERROR_VERBOSE 1
-#else
-# define YYERROR_VERBOSE 0
-#endif
-
-/* Enabling the token table.  */
-#ifndef YYTOKEN_TABLE
-# define YYTOKEN_TABLE 0
-#endif
-
+#define yyparse base_yyparse
+#define yylex   base_yylex
+#define yyerror base_yyerror
+#define yylval  base_yylval
+#define yychar  base_yychar
+#define yydebug base_yydebug
+#define yynerrs base_yynerrs
+#define yylloc base_yylloc
 
 /* Tokens.  */
 #ifndef YYTOKENTYPE
@@ -665,16 +488,595 @@
      UMINUS = 669
    };
 #endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define ABORT_P 269
+#define ABSOLUTE_P 270
+#define ACCESS 271
+#define ACTION 272
+#define ADD_P 273
+#define ADMIN 274
+#define AFTER 275
+#define AGGREGATE 276
+#define ALL 277
+#define ALSO 278
+#define ALTER 279
+#define ALWAYS 280
+#define ANALYSE 281
+#define ANALYZE 282
+#define AND 283
+#define ANY 284
+#define ARRAY 285
+#define AS 286
+#define ASC 287
+#define ASSERTION 288
+#define ASSIGNMENT 289
+#define ASYMMETRIC 290
+#define AT 291
+#define ATTRIBUTE 292
+#define AUTHORIZATION 293
+#define BACKWARD 294
+#define BEFORE 295
+#define BEGIN_P 296
+#define BETWEEN 297
+#define BIGINT 298
+#define BINARY 299
+#define BIT 300
+#define BOOLEAN_P 301
+#define BOTH 302
+#define BY 303
+#define CACHE 304
+#define CALLED 305
+#define CASCADE 306
+#define CASCADED 307
+#define CASE 308
+#define CAST 309
+#define CATALOG_P 310
+#define CHAIN 311
+#define CHAR_P 312
+#define CHARACTER 313
+#define CHARACTERISTICS 314
+#define CHECK 315
+#define CHECKPOINT 316
+#define CLASS 317
+#define CLOSE 318
+#define CLUSTER 319
+#define COALESCE 320
+#define COLLATE 321
+#define COLLATION 322
+#define COLUMN 323
+#define COMMENT 324
+#define COMMENTS 325
+#define COMMIT 326
+#define COMMITTED 327
+#define CONCURRENTLY 328
+#define CONFIGURATION 329
+#define CONNECTION 330
+#define CONSTRAINT 331
+#define CONSTRAINTS 332
+#define CONTENT_P 333
+#define CONTINUE_P 334
+#define CONVERSION_P 335
+#define COPY 336
+#define COST 337
+#define CREATE 338
+#define CROSS 339
+#define CSV 340
+#define CURRENT_P 341
+#define CURRENT_CATALOG 342
+#define CURRENT_DATE 343
+#define CURRENT_ROLE 344
+#define CURRENT_SCHEMA 345
+#define CURRENT_TIME 346
+#define CURRENT_TIMESTAMP 347
+#define CURRENT_USER 348
+#define CURSOR 349
+#define CYCLE 350
+#define DATA_P 351
+#define DATABASE 352
+#define DAY_P 353
+#define DEALLOCATE 354
+#define DEC 355
+#define DECIMAL_P 356
+#define DECLARE 357
+#define DEFAULT 358
+#define DEFAULTS 359
+#define DEFERRABLE 360
+#define DEFERRED 361
+#define DEFINER 362
+#define DELETE_P 363
+#define DELIMITER 364
+#define DELIMITERS 365
+#define DESC 366
+#define DICTIONARY 367
+#define DISABLE_P 368
+#define DISCARD 369
+#define DISTINCT 370
+#define DO 371
+#define DOCUMENT_P 372
+#define DOMAIN_P 373
+#define DOUBLE_P 374
+#define DROP 375
+#define EACH 376
+#define ELSE 377
+#define ENABLE_P 378
+#define ENCODING 379
+#define ENCRYPTED 380
+#define END_P 381
+#define ENUM_P 382
+#define ESCAPE 383
+#define EXCEPT 384
+#define EXCLUDE 385
+#define EXCLUDING 386
+#define EXCLUSIVE 387
+#define EXECUTE 388
+#define EXISTS 389
+#define EXPLAIN 390
+#define EXTENSION 391
+#define EXTERNAL 392
+#define EXTRACT 393
+#define FALSE_P 394
+#define FAMILY 395
+#define FETCH 396
+#define FIRST_P 397
+#define FLOAT_P 398
+#define FOLLOWING 399
+#define FOR 400
+#define FORCE 401
+#define FOREIGN 402
+#define FORWARD 403
+#define FREEZE 404
+#define FROM 405
+#define FULL 406
+#define FUNCTION 407
+#define FUNCTIONS 408
+#define GLOBAL 409
+#define GRANT 410
+#define GRANTED 411
+#define GREATEST 412
+#define GROUP_P 413
+#define HANDLER 414
+#define HAVING 415
+#define HEADER_P 416
+#define HOLD 417
+#define HOUR_P 418
+#define IDENTITY_P 419
+#define IF_P 420
+#define ILIKE 421
+#define IMMEDIATE 422
+#define IMMUTABLE 423
+#define IMPLICIT_P 424
+#define IN_P 425
+#define INCLUDING 426
+#define INCREMENT 427
+#define INDEX 428
+#define INDEXES 429
+#define INHERIT 430
+#define INHERITS 431
+#define INITIALLY 432
+#define INLINE_P 433
+#define INNER_P 434
+#define INOUT 435
+#define INPUT_P 436
+#define INSENSITIVE 437
+#define INSERT 438
+#define INSTEAD 439
+#define INT_P 440
+#define INTEGER 441
+#define INTERSECT 442
+#define INTERVAL 443
+#define INTO 444
+#define INVOKER 445
+#define IS 446
+#define ISNULL 447
+#define ISOLATION 448
+#define JOIN 449
+#define KEY 450
+#define LABEL 451
+#define LANGUAGE 452
+#define LARGE_P 453
+#define LAST_P 454
+#define LC_COLLATE_P 455
+#define LC_CTYPE_P 456
+#define LEADING 457
+#define LEAKPROOF 458
+#define LEAST 459
+#define LEFT 460
+#define LEVEL 461
+#define LIKE 462
+#define LIMIT 463
+#define LISTEN 464
+#define LOAD 465
+#define LOCAL 466
+#define LOCALTIME 467
+#define LOCALTIMESTAMP 468
+#define LOCATION 469
+#define LOCK_P 470
+#define MAPPING 471
+#define MATCH 472
+#define MAXVALUE 473
+#define MINUTE_P 474
+#define MINVALUE 475
+#define MODE 476
+#define MONTH_P 477
+#define MOVE 478
+#define NAME_P 479
+#define NAMES 480
+#define NATIONAL 481
+#define NATURAL 482
+#define NCHAR 483
+#define NEXT 484
+#define NO 485
+#define NONE 486
+#define NOT 487
+#define NOTHING 488
+#define NOTIFY 489
+#define NOTNULL 490
+#define NOWAIT 491
+#define NULL_P 492
+#define NULLIF 493
+#define NULLS_P 494
+#define NUMERIC 495
+#define OBJECT_P 496
+#define OF 497
+#define OFF 498
+#define OFFSET 499
+#define OIDS 500
+#define ON 501
+#define ONLY 502
+#define OPERATOR 503
+#define OPTION 504
+#define OPTIONS 505
+#define OR 506
+#define ORDER 507
+#define OUT_P 508
+#define OUTER_P 509
+#define OVER 510
+#define OVERLAPS 511
+#define OVERLAY 512
+#define OWNED 513
+#define OWNER 514
+#define PARSER 515
+#define PARTIAL 516
+#define PARTITION 517
+#define PASSING 518
+#define PASSWORD 519
+#define PLACING 520
+#define PLANS 521
+#define POSITION 522
+#define PRECEDING 523
+#define PRECISION 524
+#define PRESERVE 525
+#define PREPARE 526
+#define PREPARED 527
+#define PRIMARY 528
+#define PRIOR 529
+#define PRIVILEGES 530
+#define PROCEDURAL 531
+#define PROCEDURE 532
+#define QUOTE 533
+#define RANGE 534
+#define READ 535
+#define REAL 536
+#define REASSIGN 537
+#define RECHECK 538
+#define RECURSIVE 539
+#define REF 540
+#define REFERENCES 541
+#define REINDEX 542
+#define RELATIVE_P 543
+#define RELEASE 544
+#define RENAME 545
+#define REPEATABLE 546
+#define REPLACE 547
+#define REPLICA 548
+#define RESET 549
+#define RESTART 550
+#define RESTRICT 551
+#define RETURNING 552
+#define RETURNS 553
+#define REVOKE 554
+#define RIGHT 555
+#define ROLE 556
+#define ROLLBACK 557
+#define ROW 558
+#define ROWS 559
+#define RULE 560
+#define SAVEPOINT 561
+#define SCHEMA 562
+#define SCROLL 563
+#define SEARCH 564
+#define SECOND_P 565
+#define SECURITY 566
+#define SELECT 567
+#define SEQUENCE 568
+#define SEQUENCES 569
+#define SERIALIZABLE 570
+#define SERVER 571
+#define SESSION 572
+#define SESSION_USER 573
+#define SET 574
+#define SETOF 575
+#define SHARE 576
+#define SHOW 577
+#define SIMILAR 578
+#define SIMPLE 579
+#define SMALLINT 580
+#define SNAPSHOT 581
+#define SOME 582
+#define STABLE 583
+#define STANDALONE_P 584
+#define START 585
+#define STATEMENT 586
+#define STATISTICS 587
+#define STDIN 588
+#define STDOUT 589
+#define STORAGE 590
+#define STRICT_P 591
+#define STRIP_P 592
+#define SUBSTRING 593
+#define SYMMETRIC 594
+#define SYSID 595
+#define SYSTEM_P 596
+#define TABLE 597
+#define TABLES 598
+#define TABLESPACE 599
+#define TEMP 600
+#define TEMPLATE 601
+#define TEMPORARY 602
+#define TEXT_P 603
+#define THEN 604
+#define TIME 605
+#define TIMESTAMP 606
+#define TO 607
+#define TRAILING 608
+#define TRANSACTION 609
+#define TREAT 610
+#define TRIGGER 611
+#define TRIM 612
+#define TRUE_P 613
+#define TRUNCATE 614
+#define TRUSTED 615
+#define TYPE_P 616
+#define TYPES_P 617
+#define UNBOUNDED 618
+#define UNCOMMITTED 619
+#define UNENCRYPTED 620
+#define UNION 621
+#define UNIQUE 622
+#define UNKNOWN 623
+#define UNLISTEN 624
+#define UNLOGGED 625
+#define UNTIL 626
+#define UPDATE 627
+#define USER 628
+#define USING 629
+#define VACUUM 630
+#define VALID 631
+#define VALIDATE 632
+#define VALIDATOR 633
+#define VALUE_P 634
+#define VALUES 635
+#define VARCHAR 636
+#define VARIADIC 637
+#define VARYING 638
+#define VERBOSE 639
+#define VERSION_P 640
+#define VIEW 641
+#define VOLATILE 642
+#define WHEN 643
+#define WHERE 644
+#define WHITESPACE_P 645
+#define WINDOW 646
+#define WITH 647
+#define WITHOUT 648
+#define WORK 649
+#define WRAPPER 650
+#define WRITE 651
+#define XML_P 652
+#define XMLATTRIBUTES 653
+#define XMLCONCAT 654
+#define XMLELEMENT 655
+#define XMLEXISTS 656
+#define XMLFOREST 657
+#define XMLPARSE 658
+#define XMLPI 659
+#define XMLROOT 660
+#define XMLSERIALIZE 661
+#define YEAR_P 662
+#define YES_P 663
+#define ZONE 664
+#define NULLS_FIRST 665
+#define NULLS_LAST 666
+#define WITH_TIME 667
+#define POSTFIXOP 668
+#define UMINUS 669
 
 
 
-#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
-typedef union YYSTYPE
+
+/* Copy the first part of user declarations.  */
+#line 1 "gram.y"
+
+
+/*#define YYDEBUG 1*/
+/*-------------------------------------------------------------------------
+ *
+ * gram.y
+ *	  POSTGRESQL BISON rules/actions
+ *
+ * Portions Copyright (c) 1996-2012, PostgreSQL Global Development Group
+ * Portions Copyright (c) 1994, Regents of the University of California
+ *
+ *
+ * IDENTIFICATION
+ *	  src/backend/parser/gram.y
+ *
+ * HISTORY
+ *	  AUTHOR			DATE			MAJOR EVENT
+ *	  Andrew Yu			Sept, 1994		POSTQUEL to SQL conversion
+ *	  Andrew Yu			Oct, 1994		lispy code conversion
+ *
+ * NOTES
+ *	  CAPITALS are used to represent terminal symbols.
+ *	  non-capitals are used to represent non-terminals.
+ *	  SQL92-specific syntax is separated from plain SQL/Postgres syntax
+ *	  to help isolate the non-extensible portions of the parser.
+ *
+ *	  In general, nothing in this file should initiate database accesses
+ *	  nor depend on changeable state (such as SET variables).  If you do
+ *	  database accesses, your code will fail when we have aborted the
+ *	  current transaction and are just parsing commands to find the next
+ *	  ROLLBACK or COMMIT.  If you make use of SET variables, then you
+ *	  will do the wrong thing in multi-query strings like this:
+ *			SET SQL_inheritance TO off; SELECT * FROM foo;
+ *	  because the entire string is parsed by gram.y before the SET gets
+ *	  executed.  Anything that depends on the database or changeable state
+ *	  should be handled during parse analysis so that it happens at the
+ *	  right time not the wrong time.  The handling of SQL_inheritance is
+ *	  a good example.
+ *
+ * WARNINGS
+ *	  If you use a list, make sure the datum is a node so that the printing
+ *	  routines work.
+ *
+ *	  Sometimes we assign constants to makeStrings. Make sure we don't free
+ *	  those.
+ *
+ *-------------------------------------------------------------------------
+ */
+#include "postgres.h"
+
+#include <ctype.h>
+#include <limits.h>
+
+#include "catalog/index.h"
+#include "catalog/namespace.h"
+#include "catalog/pg_trigger.h"
+#include "commands/defrem.h"
+#include "nodes/makefuncs.h"
+#include "nodes/nodeFuncs.h"
+#include "parser/gramparse.h"
+#include "parser/parser.h"
+#include "storage/lmgr.h"
+#include "utils/date.h"
+#include "utils/datetime.h"
+#include "utils/numeric.h"
+#include "utils/xml.h"
+
+
+/* Location tracking support --- simpler than bison's default */
+#define YYLLOC_DEFAULT(Current, Rhs, N) \
+	do { \
+		if (N) \
+			(Current) = (Rhs)[1]; \
+		else \
+			(Current) = (Rhs)[0]; \
+	} while (0)
+
+/*
+ * Bison doesn't allocate anything that needs to live across parser calls,
+ * so we can easily have it use palloc instead of malloc.  This prevents
+ * memory leaks if we error out during parsing.  Note this only works with
+ * bison >= 2.0.  However, in bison 1.875 the default is to use alloca()
+ * if possible, so there's not really much problem anyhow, at least if
+ * you're building with gcc.
+ */
+#define YYMALLOC palloc
+#define YYFREE   pfree
+
+/* Private struct for the result of privilege_target production */
+typedef struct PrivTarget
 {
+	GrantTargetType targtype;
+	GrantObjectType objtype;
+	List	   *objs;
+} PrivTarget;
 
-/* Line 293 of yacc.c  */
-#line 158 "gram.y"
+/* ConstraintAttributeSpec yields an integer bitmask of these flags: */
+#define CAS_NOT_DEFERRABLE			0x01
+#define CAS_DEFERRABLE				0x02
+#define CAS_INITIALLY_IMMEDIATE		0x04
+#define CAS_INITIALLY_DEFERRED		0x08
+#define CAS_NOT_VALID				0x10
+#define CAS_NO_INHERIT				0x20
+
+
+#define parser_yyerror(msg)  scanner_yyerror(msg, yyscanner)
+#define parser_errposition(pos)  scanner_errposition(pos, yyscanner)
+
+static void base_yyerror(YYLTYPE *yylloc, core_yyscan_t yyscanner,
+						 const char *msg);
+static Node *makeColumnRef(char *colname, List *indirection,
+						   int location, core_yyscan_t yyscanner);
+static Node *makeTypeCast(Node *arg, TypeName *typename, int location);
+static Node *makeStringConst(char *str, int location);
+static Node *makeStringConstCast(char *str, int location, TypeName *typename);
+static Node *makeIntConst(int val, int location);
+static Node *makeFloatConst(char *str, int location);
+static Node *makeBitStringConst(char *str, int location);
+static Node *makeNullAConst(int location);
+static Node *makeAConst(Value *v, int location);
+static Node *makeBoolAConst(bool state, int location);
+static void check_qualified_name(List *names, core_yyscan_t yyscanner);
+static List *check_func_name(List *names, core_yyscan_t yyscanner);
+static List *check_indirection(List *indirection, core_yyscan_t yyscanner);
+static List *extractArgTypes(List *parameters);
+static void insertSelectOptions(SelectStmt *stmt,
+								List *sortClause, List *lockingClause,
+								Node *limitOffset, Node *limitCount,
+								WithClause *withClause,
+								core_yyscan_t yyscanner);
+static Node *makeSetOp(SetOperation op, bool all, Node *larg, Node *rarg);
+static Node *doNegate(Node *n, int location);
+static void doNegateFloat(Value *v);
+static Node *makeAArrayExpr(List *elements, int location);
+static Node *makeXmlExpr(XmlExprOp op, char *name, List *named_args,
+						 List *args, int location);
+static List *mergeTableFuncParameters(List *func_args, List *columns);
+static TypeName *TableFuncTypeName(List *columns);
+static RangeVar *makeRangeVarFromAnyName(List *names, int position, core_yyscan_t yyscanner);
+static void SplitColQualList(List *qualList,
+							 List **constraintList, CollateClause **collClause,
+							 core_yyscan_t yyscanner);
+static void processCASbits(int cas_bits, int location, const char *constrType,
+			   bool *deferrable, bool *initdeferred, bool *not_valid,
+			   bool *no_inherit, core_yyscan_t yyscanner);
+
+
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
+
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
+
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
 
+#if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
+typedef union YYSTYPE
+#line 158 "gram.y"
+{
 	core_YYSTYPE		core_yystype;
 	/* these fields must match core_YYSTYPE: */
 	int					ival;
@@ -709,15 +1111,13 @@
 	AccessPriv			*accesspriv;
 	InsertStmt			*istmt;
 	VariableSetStmt		*vsetstmt;
-
-
-
-/* Line 293 of yacc.c  */
-#line 717 "gram.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 1117 "gram.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 #if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
@@ -737,8 +1137,8 @@
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 742 "gram.c"
+/* Line 216 of yacc.c.  */
+#line 1142 "gram.tab.c"
 
 #ifdef short
 # undef short
@@ -813,14 +1213,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -841,11 +1241,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -868,24 +1268,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -902,9 +1302,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-  YYLTYPE yyls_alloc;
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+    YYLTYPE yyls;
 };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
@@ -916,27 +1316,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
       + 2 * YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -954,7 +1333,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  696
@@ -3056,8 +3452,8 @@
        1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint16 yydefact[] =
 {
@@ -4052,7 +4448,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -2168
 static const yytype_int16 yytable[] =
 {
@@ -11523,12 +11920,6 @@
      497
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-3887))
-
-#define yytable_value_is_error(yytable_value) \
-  ((yytable_value) == (-2168))
-
 static const yytype_int16 yycheck[] =
 {
        0,     0,     0,     0,     0,     0,    47,    16,   164,   184,
@@ -19446,18 +19837,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -19467,6 +19849,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -19632,20 +20015,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -19681,11 +20061,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       , &(yylsp[(yyi + 1) - (yynrhs)])		       , yyscanner);
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -19722,6 +20102,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -19824,142 +20205,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -19995,9 +20349,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -20013,6 +20368,10 @@
 #endif /* ! YYPARSE_PARAM */
 
 
+
+
+
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -20039,59 +20398,24 @@
 #endif
 #endif
 {
-/* The lookahead symbol.  */
+  /* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
-/* Location data for the lookahead symbol.  */
+/* Number of syntax errors so far.  */
+int yynerrs;
+/* Location data for the look-ahead symbol.  */
 YYLTYPE yylloc;
 
-    /* Number of syntax errors so far.  */
-    int yynerrs;
-
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-       `yyls': related to locations.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    /* The location stack.  */
-    YYLTYPE yylsa[YYINITDEPTH];
-    YYLTYPE *yyls;
-    YYLTYPE *yylsp;
-
-    /* The locations where the error started and ended.  */
-    YYLTYPE yyerror_range[3];
-
-    YYSIZE_T yystacksize;
-
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-  YYLTYPE yyloc;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -20099,37 +20423,63 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+  /* The location stack.  */
+  YYLTYPE yylsa[YYINITDEPTH];
+  YYLTYPE *yyls = yylsa;
+  YYLTYPE *yylsp;
+  /* The locations where the error started and ended.  */
+  YYLTYPE yyerror_range[2];
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+  YYLTYPE yyloc;
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yyls = yylsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
   yylsp = yyls;
-
 #if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
   /* Initialize the default location before parsing starts.  */
   yylloc.first_line   = yylloc.last_line   = 1;
-  yylloc.first_column = yylloc.last_column = 1;
+  yylloc.first_column = yylloc.last_column = 0;
 #endif
 
   goto yysetstate;
@@ -20168,7 +20518,6 @@
 		    &yyvs1, yysize * sizeof (*yyvsp),
 		    &yyls1, yysize * sizeof (*yylsp),
 		    &yystacksize);
-
 	yyls = yyls1;
 	yyss = yyss1;
 	yyvs = yyvs1;
@@ -20190,9 +20539,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
-	YYSTACK_RELOCATE (yyls_alloc, yyls);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+	YYSTACK_RELOCATE (yyls);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -20213,9 +20562,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -20224,16 +20570,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -20259,22 +20605,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -20315,48 +20665,38 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 654 "gram.y"
     {
 				pg_yyget_extra(yyscanner)->parsetree = (yyvsp[(1) - (1)].list);
-			}
+			;}
     break;
 
   case 3:
-
-/* Line 1806 of yacc.c  */
 #line 661 "gram.y"
     {
 					if ((yyvsp[(3) - (3)].node) != NULL)
 						(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
 					else
 						(yyval.list) = (yyvsp[(1) - (3)].list);
-				}
+				;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 668 "gram.y"
     {
 					if ((yyvsp[(1) - (1)].node) != NULL)
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
 					else
 						(yyval.list) = NIL;
-				}
+				;}
     break;
 
   case 115:
-
-/* Line 1806 of yacc.c  */
 #line 788 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 116:
-
-/* Line 1806 of yacc.c  */
 #line 799 "gram.y"
     {
 					CreateRoleStmt *n = makeNode(CreateRoleStmt);
@@ -20364,129 +20704,99 @@
 					n->role = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 117:
-
-/* Line 1806 of yacc.c  */
 #line 809 "gram.y"
-    {}
+    {;}
     break;
 
   case 118:
-
-/* Line 1806 of yacc.c  */
 #line 810 "gram.y"
-    {}
+    {;}
     break;
 
   case 119:
-
-/* Line 1806 of yacc.c  */
 #line 819 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 120:
-
-/* Line 1806 of yacc.c  */
 #line 820 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 121:
-
-/* Line 1806 of yacc.c  */
 #line 824 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 122:
-
-/* Line 1806 of yacc.c  */
 #line 825 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 123:
-
-/* Line 1806 of yacc.c  */
 #line 830 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("password",
 									 (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 124:
-
-/* Line 1806 of yacc.c  */
 #line 835 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("password", NULL);
-				}
+				;}
     break;
 
   case 125:
-
-/* Line 1806 of yacc.c  */
 #line 839 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encryptedPassword",
 									 (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 126:
-
-/* Line 1806 of yacc.c  */
 #line 844 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("unencryptedPassword",
 									 (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 127:
-
-/* Line 1806 of yacc.c  */
 #line 849 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("inherit", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 128:
-
-/* Line 1806 of yacc.c  */
 #line 853 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[(3) - (3)].ival)));
-				}
+				;}
     break;
 
   case 129:
-
-/* Line 1806 of yacc.c  */
 #line 857 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("validUntil", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 130:
-
-/* Line 1806 of yacc.c  */
 #line 862 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("rolemembers", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 131:
-
-/* Line 1806 of yacc.c  */
 #line 866 "gram.y"
     {
 					/*
@@ -20537,64 +20847,50 @@
 								(errcode(ERRCODE_SYNTAX_ERROR),
 								 errmsg("unrecognized role option \"%s\"", (yyvsp[(1) - (1)].str)),
 									 parser_errposition((yylsp[(1) - (1)]))));
-				}
+				;}
     break;
 
   case 132:
-
-/* Line 1806 of yacc.c  */
 #line 919 "gram.y"
-    { (yyval.defelt) = (yyvsp[(1) - (1)].defelt); }
+    { (yyval.defelt) = (yyvsp[(1) - (1)].defelt); ;}
     break;
 
   case 133:
-
-/* Line 1806 of yacc.c  */
 #line 922 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("sysid", (Node *)makeInteger((yyvsp[(2) - (2)].ival)));
-				}
+				;}
     break;
 
   case 134:
-
-/* Line 1806 of yacc.c  */
 #line 926 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("adminmembers", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 135:
-
-/* Line 1806 of yacc.c  */
 #line 930 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("rolemembers", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 136:
-
-/* Line 1806 of yacc.c  */
 #line 934 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("addroleto", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 137:
-
-/* Line 1806 of yacc.c  */
 #line 938 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("addroleto", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 138:
-
-/* Line 1806 of yacc.c  */
 #line 952 "gram.y"
     {
 					CreateRoleStmt *n = makeNode(CreateRoleStmt);
@@ -20602,12 +20898,10 @@
 					n->role = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 139:
-
-/* Line 1806 of yacc.c  */
 #line 970 "gram.y"
     {
 					AlterRoleStmt *n = makeNode(AlterRoleStmt);
@@ -20615,26 +20909,20 @@
 					n->action = +1;	/* add, if there are members */
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 140:
-
-/* Line 1806 of yacc.c  */
 #line 980 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 141:
-
-/* Line 1806 of yacc.c  */
 #line 981 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 142:
-
-/* Line 1806 of yacc.c  */
 #line 986 "gram.y"
     {
 					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
@@ -20642,12 +20930,10 @@
 					n->database = (yyvsp[(4) - (5)].str);
 					n->setstmt = (yyvsp[(5) - (5)].vsetstmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 143:
-
-/* Line 1806 of yacc.c  */
 #line 1004 "gram.y"
     {
 					AlterRoleStmt *n = makeNode(AlterRoleStmt);
@@ -20655,12 +20941,10 @@
 					n->action = +1;	/* add, if there are members */
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 144:
-
-/* Line 1806 of yacc.c  */
 #line 1016 "gram.y"
     {
 					AlterRoleSetStmt *n = makeNode(AlterRoleSetStmt);
@@ -20668,60 +20952,50 @@
 					n->database = NULL;
 					n->setstmt = (yyvsp[(4) - (4)].vsetstmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 145:
-
-/* Line 1806 of yacc.c  */
 #line 1037 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = FALSE;
 					n->roles = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 146:
-
-/* Line 1806 of yacc.c  */
 #line 1044 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = TRUE;
 					n->roles = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 147:
-
-/* Line 1806 of yacc.c  */
 #line 1063 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = FALSE;
 					n->roles = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 148:
-
-/* Line 1806 of yacc.c  */
 #line 1070 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->roles = (yyvsp[(5) - (5)].list);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 149:
-
-/* Line 1806 of yacc.c  */
 #line 1087 "gram.y"
     {
 					CreateRoleStmt *n = makeNode(CreateRoleStmt);
@@ -20729,12 +21003,10 @@
 					n->role = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 150:
-
-/* Line 1806 of yacc.c  */
 #line 1105 "gram.y"
     {
 					AlterRoleStmt *n = makeNode(AlterRoleStmt);
@@ -20743,50 +21015,40 @@
 					n->options = list_make1(makeDefElem("rolemembers",
 														(Node *)(yyvsp[(6) - (6)].list)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 151:
-
-/* Line 1806 of yacc.c  */
 #line 1115 "gram.y"
-    { (yyval.ival) = +1; }
+    { (yyval.ival) = +1; ;}
     break;
 
   case 152:
-
-/* Line 1806 of yacc.c  */
 #line 1116 "gram.y"
-    { (yyval.ival) = -1; }
+    { (yyval.ival) = -1; ;}
     break;
 
   case 153:
-
-/* Line 1806 of yacc.c  */
 #line 1129 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = FALSE;
 					n->roles = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 154:
-
-/* Line 1806 of yacc.c  */
 #line 1136 "gram.y"
     {
 					DropRoleStmt *n = makeNode(DropRoleStmt);
 					n->missing_ok = TRUE;
 					n->roles = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 155:
-
-/* Line 1806 of yacc.c  */
 #line 1153 "gram.y"
     {
 					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
@@ -20798,12 +21060,10 @@
 					n->authid = (yyvsp[(5) - (6)].str);
 					n->schemaElts = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 156:
-
-/* Line 1806 of yacc.c  */
 #line 1165 "gram.y"
     {
 					CreateSchemaStmt *n = makeNode(CreateSchemaStmt);
@@ -20812,73 +21072,57 @@
 					n->authid = NULL;
 					n->schemaElts = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 157:
-
-/* Line 1806 of yacc.c  */
 #line 1176 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 158:
-
-/* Line 1806 of yacc.c  */
 #line 1177 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 159:
-
-/* Line 1806 of yacc.c  */
 #line 1181 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 160:
-
-/* Line 1806 of yacc.c  */
 #line 1182 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 167:
-
-/* Line 1806 of yacc.c  */
 #line 1210 "gram.y"
     {
 					VariableSetStmt *n = (yyvsp[(2) - (2)].vsetstmt);
 					n->is_local = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 168:
-
-/* Line 1806 of yacc.c  */
 #line 1216 "gram.y"
     {
 					VariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
 					n->is_local = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 169:
-
-/* Line 1806 of yacc.c  */
 #line 1222 "gram.y"
     {
 					VariableSetStmt *n = (yyvsp[(3) - (3)].vsetstmt);
 					n->is_local = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 170:
-
-/* Line 1806 of yacc.c  */
 #line 1231 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -20886,12 +21130,10 @@
 					n->name = "TRANSACTION";
 					n->args = (yyvsp[(2) - (2)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 171:
-
-/* Line 1806 of yacc.c  */
 #line 1239 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -20899,12 +21141,10 @@
 					n->name = "SESSION CHARACTERISTICS";
 					n->args = (yyvsp[(5) - (5)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 173:
-
-/* Line 1806 of yacc.c  */
 #line 1251 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -20912,12 +21152,10 @@
 					n->name = (yyvsp[(1) - (3)].str);
 					n->args = (yyvsp[(3) - (3)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 174:
-
-/* Line 1806 of yacc.c  */
 #line 1259 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -20925,48 +21163,40 @@
 					n->name = (yyvsp[(1) - (3)].str);
 					n->args = (yyvsp[(3) - (3)].list);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 175:
-
-/* Line 1806 of yacc.c  */
 #line 1267 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_DEFAULT;
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 176:
-
-/* Line 1806 of yacc.c  */
 #line 1274 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_DEFAULT;
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 177:
-
-/* Line 1806 of yacc.c  */
 #line 1281 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_CURRENT;
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 178:
-
-/* Line 1806 of yacc.c  */
 #line 1289 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -20977,12 +21207,10 @@
 					else
 						n->kind = VAR_SET_DEFAULT;
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 179:
-
-/* Line 1806 of yacc.c  */
 #line 1300 "gram.y"
     {
 					ereport(ERROR,
@@ -20990,12 +21218,10 @@
 							 errmsg("current database cannot be changed"),
 							 parser_errposition((yylsp[(2) - (2)]))));
 					(yyval.vsetstmt) = NULL; /*not reached*/
-				}
+				;}
     break;
 
   case 180:
-
-/* Line 1806 of yacc.c  */
 #line 1308 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21003,12 +21229,10 @@
 					n->name = "search_path";
 					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 181:
-
-/* Line 1806 of yacc.c  */
 #line 1316 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21019,12 +21243,10 @@
 					else
 						n->kind = VAR_SET_DEFAULT;
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 182:
-
-/* Line 1806 of yacc.c  */
 #line 1327 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21032,12 +21254,10 @@
 					n->name = "role";
 					n->args = list_make1(makeStringConst((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 183:
-
-/* Line 1806 of yacc.c  */
 #line 1335 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21045,24 +21265,20 @@
 					n->name = "session_authorization";
 					n->args = list_make1(makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 184:
-
-/* Line 1806 of yacc.c  */
 #line 1343 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_SET_DEFAULT;
 					n->name = "session_authorization";
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 185:
-
-/* Line 1806 of yacc.c  */
 #line 1350 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21070,12 +21286,10 @@
 					n->name = "xmloption";
 					n->args = list_make1(makeStringConst((yyvsp[(3) - (3)].ival) == XMLOPTION_DOCUMENT ? "DOCUMENT" : "CONTENT", (yylsp[(3) - (3)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 186:
-
-/* Line 1806 of yacc.c  */
 #line 1359 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
@@ -21083,131 +21297,97 @@
 					n->name = "TRANSACTION SNAPSHOT";
 					n->args = list_make1(makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)])));
 					(yyval.vsetstmt) = n;
-				}
+				;}
     break;
 
   case 187:
-
-/* Line 1806 of yacc.c  */
 #line 1368 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 188:
-
-/* Line 1806 of yacc.c  */
 #line 1370 "gram.y"
     {
 					(yyval.str) = palloc(strlen((yyvsp[(1) - (3)].str)) + strlen((yyvsp[(3) - (3)].str)) + 2);
 					sprintf((yyval.str), "%s.%s", (yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str));
-				}
+				;}
     break;
 
   case 189:
-
-/* Line 1806 of yacc.c  */
 #line 1376 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 190:
-
-/* Line 1806 of yacc.c  */
 #line 1377 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 191:
-
-/* Line 1806 of yacc.c  */
 #line 1381 "gram.y"
-    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)])); ;}
     break;
 
   case 192:
-
-/* Line 1806 of yacc.c  */
 #line 1383 "gram.y"
-    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
     break;
 
   case 193:
-
-/* Line 1806 of yacc.c  */
 #line 1386 "gram.y"
-    { (yyval.str) = "read uncommitted"; }
+    { (yyval.str) = "read uncommitted"; ;}
     break;
 
   case 194:
-
-/* Line 1806 of yacc.c  */
 #line 1387 "gram.y"
-    { (yyval.str) = "read committed"; }
+    { (yyval.str) = "read committed"; ;}
     break;
 
   case 195:
-
-/* Line 1806 of yacc.c  */
 #line 1388 "gram.y"
-    { (yyval.str) = "repeatable read"; }
+    { (yyval.str) = "repeatable read"; ;}
     break;
 
   case 196:
-
-/* Line 1806 of yacc.c  */
 #line 1389 "gram.y"
-    { (yyval.str) = "serializable"; }
+    { (yyval.str) = "serializable"; ;}
     break;
 
   case 197:
-
-/* Line 1806 of yacc.c  */
 #line 1393 "gram.y"
-    { (yyval.str) = "true"; }
+    { (yyval.str) = "true"; ;}
     break;
 
   case 198:
-
-/* Line 1806 of yacc.c  */
 #line 1394 "gram.y"
-    { (yyval.str) = "false"; }
+    { (yyval.str) = "false"; ;}
     break;
 
   case 199:
-
-/* Line 1806 of yacc.c  */
 #line 1395 "gram.y"
-    { (yyval.str) = "on"; }
+    { (yyval.str) = "on"; ;}
     break;
 
   case 200:
-
-/* Line 1806 of yacc.c  */
 #line 1401 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 201:
-
-/* Line 1806 of yacc.c  */
 #line 1414 "gram.y"
     {
 					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 202:
-
-/* Line 1806 of yacc.c  */
 #line 1418 "gram.y"
     {
 					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 203:
-
-/* Line 1806 of yacc.c  */
 #line 1422 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (3)].typnam);
@@ -21222,12 +21402,10 @@
 					}
 					t->typmods = (yyvsp[(3) - (3)].list);
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
-				}
+				;}
     break;
 
   case 204:
-
-/* Line 1806 of yacc.c  */
 #line 1437 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (6)].typnam);
@@ -21250,304 +21428,238 @@
 						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
 												makeIntConst((yyvsp[(3) - (6)].ival), (yylsp[(3) - (6)])));
 					(yyval.node) = makeStringConstCast((yyvsp[(5) - (6)].str), (yylsp[(5) - (6)]), t);
-				}
+				;}
     break;
 
   case 205:
-
-/* Line 1806 of yacc.c  */
 #line 1459 "gram.y"
-    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeAConst((yyvsp[(1) - (1)].value), (yylsp[(1) - (1)])); ;}
     break;
 
   case 206:
-
-/* Line 1806 of yacc.c  */
 #line 1460 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 207:
-
-/* Line 1806 of yacc.c  */
 #line 1461 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 208:
-
-/* Line 1806 of yacc.c  */
 #line 1465 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 209:
-
-/* Line 1806 of yacc.c  */
 #line 1466 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 210:
-
-/* Line 1806 of yacc.c  */
 #line 1467 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 211:
-
-/* Line 1806 of yacc.c  */
 #line 1471 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 212:
-
-/* Line 1806 of yacc.c  */
 #line 1472 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 213:
-
-/* Line 1806 of yacc.c  */
 #line 1477 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 214:
-
-/* Line 1806 of yacc.c  */
 #line 1484 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = "timezone";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 215:
-
-/* Line 1806 of yacc.c  */
 #line 1491 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = "transaction_isolation";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 216:
-
-/* Line 1806 of yacc.c  */
 #line 1498 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET;
 					n->name = "session_authorization";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 217:
-
-/* Line 1806 of yacc.c  */
 #line 1505 "gram.y"
     {
 					VariableSetStmt *n = makeNode(VariableSetStmt);
 					n->kind = VAR_RESET_ALL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 218:
-
-/* Line 1806 of yacc.c  */
 #line 1514 "gram.y"
-    { (yyval.vsetstmt) = (yyvsp[(2) - (2)].vsetstmt); }
+    { (yyval.vsetstmt) = (yyvsp[(2) - (2)].vsetstmt); ;}
     break;
 
   case 219:
-
-/* Line 1806 of yacc.c  */
 #line 1515 "gram.y"
-    { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[(1) - (1)].node); }
+    { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 220:
-
-/* Line 1806 of yacc.c  */
 #line 1520 "gram.y"
-    { (yyval.vsetstmt) = (yyvsp[(2) - (2)].vsetstmt); }
+    { (yyval.vsetstmt) = (yyvsp[(2) - (2)].vsetstmt); ;}
     break;
 
   case 221:
-
-/* Line 1806 of yacc.c  */
 #line 1521 "gram.y"
-    { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[(1) - (1)].node); }
+    { (yyval.vsetstmt) = (VariableSetStmt *) (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 222:
-
-/* Line 1806 of yacc.c  */
 #line 1527 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 223:
-
-/* Line 1806 of yacc.c  */
 #line 1533 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "timezone";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 224:
-
-/* Line 1806 of yacc.c  */
 #line 1539 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "transaction_isolation";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 225:
-
-/* Line 1806 of yacc.c  */
 #line 1545 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "session_authorization";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 226:
-
-/* Line 1806 of yacc.c  */
 #line 1551 "gram.y"
     {
 					VariableShowStmt *n = makeNode(VariableShowStmt);
 					n->name = "all";
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 227:
-
-/* Line 1806 of yacc.c  */
 #line 1561 "gram.y"
     {
 					ConstraintsSetStmt *n = makeNode(ConstraintsSetStmt);
 					n->constraints = (yyvsp[(3) - (4)].list);
 					n->deferred = (yyvsp[(4) - (4)].boolean);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 228:
-
-/* Line 1806 of yacc.c  */
 #line 1570 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 229:
-
-/* Line 1806 of yacc.c  */
 #line 1571 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 230:
-
-/* Line 1806 of yacc.c  */
 #line 1575 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 231:
-
-/* Line 1806 of yacc.c  */
 #line 1576 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 232:
-
-/* Line 1806 of yacc.c  */
 #line 1585 "gram.y"
     {
 					CheckPointStmt *n = makeNode(CheckPointStmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 233:
-
-/* Line 1806 of yacc.c  */
 #line 1600 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_ALL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 234:
-
-/* Line 1806 of yacc.c  */
 #line 1606 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_TEMP;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 235:
-
-/* Line 1806 of yacc.c  */
 #line 1612 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_TEMP;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 236:
-
-/* Line 1806 of yacc.c  */
 #line 1618 "gram.y"
     {
 					DiscardStmt *n = makeNode(DiscardStmt);
 					n->target = DISCARD_PLANS;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 237:
-
-/* Line 1806 of yacc.c  */
 #line 1636 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -21556,12 +21668,10 @@
 					n->relkind = OBJECT_TABLE;
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 238:
-
-/* Line 1806 of yacc.c  */
 #line 1645 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -21570,12 +21680,10 @@
 					n->relkind = OBJECT_TABLE;
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 239:
-
-/* Line 1806 of yacc.c  */
 #line 1654 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -21584,12 +21692,10 @@
 					n->relkind = OBJECT_INDEX;
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 240:
-
-/* Line 1806 of yacc.c  */
 #line 1663 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -21598,12 +21704,10 @@
 					n->relkind = OBJECT_INDEX;
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 241:
-
-/* Line 1806 of yacc.c  */
 #line 1672 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -21612,12 +21716,10 @@
 					n->relkind = OBJECT_SEQUENCE;
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 242:
-
-/* Line 1806 of yacc.c  */
 #line 1681 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -21626,12 +21728,10 @@
 					n->relkind = OBJECT_SEQUENCE;
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 243:
-
-/* Line 1806 of yacc.c  */
 #line 1690 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -21640,12 +21740,10 @@
 					n->relkind = OBJECT_VIEW;
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 244:
-
-/* Line 1806 of yacc.c  */
 #line 1699 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -21654,50 +21752,40 @@
 					n->relkind = OBJECT_VIEW;
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 245:
-
-/* Line 1806 of yacc.c  */
 #line 1710 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 246:
-
-/* Line 1806 of yacc.c  */
 #line 1711 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 247:
-
-/* Line 1806 of yacc.c  */
 #line 1717 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddColumn;
 					n->def = (yyvsp[(2) - (2)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 248:
-
-/* Line 1806 of yacc.c  */
 #line 1725 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddColumn;
 					n->def = (yyvsp[(3) - (3)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 249:
-
-/* Line 1806 of yacc.c  */
 #line 1733 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -21705,36 +21793,30 @@
 					n->name = (yyvsp[(3) - (4)].str);
 					n->def = (yyvsp[(4) - (4)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 250:
-
-/* Line 1806 of yacc.c  */
 #line 1742 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropNotNull;
 					n->name = (yyvsp[(3) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 251:
-
-/* Line 1806 of yacc.c  */
 #line 1750 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_SetNotNull;
 					n->name = (yyvsp[(3) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 252:
-
-/* Line 1806 of yacc.c  */
 #line 1758 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -21742,12 +21824,10 @@
 					n->name = (yyvsp[(3) - (6)].str);
 					n->def = (Node *) makeInteger((yyvsp[(6) - (6)].ival));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 253:
-
-/* Line 1806 of yacc.c  */
 #line 1767 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -21755,12 +21835,10 @@
 					n->name = (yyvsp[(3) - (5)].str);
 					n->def = (Node *) (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 254:
-
-/* Line 1806 of yacc.c  */
 #line 1776 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -21768,12 +21846,10 @@
 					n->name = (yyvsp[(3) - (5)].str);
 					n->def = (Node *) (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 255:
-
-/* Line 1806 of yacc.c  */
 #line 1785 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -21781,12 +21857,10 @@
 					n->name = (yyvsp[(3) - (6)].str);
 					n->def = (Node *) makeString((yyvsp[(6) - (6)].str));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 256:
-
-/* Line 1806 of yacc.c  */
 #line 1794 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -21795,12 +21869,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 257:
-
-/* Line 1806 of yacc.c  */
 #line 1804 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -21809,12 +21881,10 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->missing_ok = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 258:
-
-/* Line 1806 of yacc.c  */
 #line 1817 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -21827,12 +21897,10 @@
 					def->collClause = (CollateClause *) (yyvsp[(7) - (8)].node);
 					def->raw_default = (yyvsp[(8) - (8)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 259:
-
-/* Line 1806 of yacc.c  */
 #line 1831 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -21840,36 +21908,30 @@
 					n->name = (yyvsp[(3) - (4)].str);
 					n->def = (Node *) (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 260:
-
-/* Line 1806 of yacc.c  */
 #line 1840 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddConstraint;
 					n->def = (yyvsp[(2) - (2)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 261:
-
-/* Line 1806 of yacc.c  */
 #line 1848 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_ValidateConstraint;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 262:
-
-/* Line 1806 of yacc.c  */
 #line 1856 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -21878,12 +21940,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 263:
-
-/* Line 1806 of yacc.c  */
 #line 1866 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -21892,222 +21952,184 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->missing_ok = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 264:
-
-/* Line 1806 of yacc.c  */
 #line 1876 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddOids;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 265:
-
-/* Line 1806 of yacc.c  */
 #line 1883 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropOids;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 266:
-
-/* Line 1806 of yacc.c  */
 #line 1890 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_ClusterOn;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 267:
-
-/* Line 1806 of yacc.c  */
 #line 1898 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropCluster;
 					n->name = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 268:
-
-/* Line 1806 of yacc.c  */
 #line 1906 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableTrig;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 269:
-
-/* Line 1806 of yacc.c  */
 #line 1914 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableAlwaysTrig;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 270:
-
-/* Line 1806 of yacc.c  */
 #line 1922 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableReplicaTrig;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 271:
-
-/* Line 1806 of yacc.c  */
 #line 1930 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableTrigAll;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 272:
-
-/* Line 1806 of yacc.c  */
 #line 1937 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableTrigUser;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 273:
-
-/* Line 1806 of yacc.c  */
 #line 1944 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableTrig;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 274:
-
-/* Line 1806 of yacc.c  */
 #line 1952 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableTrigAll;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 275:
-
-/* Line 1806 of yacc.c  */
 #line 1959 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableTrigUser;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 276:
-
-/* Line 1806 of yacc.c  */
 #line 1966 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableRule;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 277:
-
-/* Line 1806 of yacc.c  */
 #line 1974 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableAlwaysRule;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 278:
-
-/* Line 1806 of yacc.c  */
 #line 1982 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_EnableReplicaRule;
 					n->name = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 279:
-
-/* Line 1806 of yacc.c  */
 #line 1990 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DisableRule;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 280:
-
-/* Line 1806 of yacc.c  */
 #line 1998 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_AddInherit;
 					n->def = (Node *) (yyvsp[(2) - (2)].range);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 281:
-
-/* Line 1806 of yacc.c  */
 #line 2006 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropInherit;
 					n->def = (Node *) (yyvsp[(3) - (3)].range);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 282:
-
-/* Line 1806 of yacc.c  */
 #line 2014 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22116,118 +22138,94 @@
 					n->subtype = AT_AddOf;
 					n->def = (Node *) def;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 283:
-
-/* Line 1806 of yacc.c  */
 #line 2024 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_DropOf;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 284:
-
-/* Line 1806 of yacc.c  */
 #line 2031 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_ChangeOwner;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 285:
-
-/* Line 1806 of yacc.c  */
 #line 2039 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_SetTableSpace;
 					n->name = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 286:
-
-/* Line 1806 of yacc.c  */
 #line 2047 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_SetRelOptions;
 					n->def = (Node *)(yyvsp[(2) - (2)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 287:
-
-/* Line 1806 of yacc.c  */
 #line 2055 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_ResetRelOptions;
 					n->def = (Node *)(yyvsp[(2) - (2)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 288:
-
-/* Line 1806 of yacc.c  */
 #line 2062 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
 					n->subtype = AT_GenericOptions;
 					n->def = (Node *)(yyvsp[(1) - (1)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 289:
-
-/* Line 1806 of yacc.c  */
 #line 2071 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (3)].node); }
+    { (yyval.node) = (yyvsp[(3) - (3)].node); ;}
     break;
 
   case 290:
-
-/* Line 1806 of yacc.c  */
 #line 2072 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 291:
-
-/* Line 1806 of yacc.c  */
 #line 2076 "gram.y"
-    { (yyval.dbehavior) = DROP_CASCADE; }
+    { (yyval.dbehavior) = DROP_CASCADE; ;}
     break;
 
   case 292:
-
-/* Line 1806 of yacc.c  */
 #line 2077 "gram.y"
-    { (yyval.dbehavior) = DROP_RESTRICT; }
+    { (yyval.dbehavior) = DROP_RESTRICT; ;}
     break;
 
   case 293:
-
-/* Line 1806 of yacc.c  */
 #line 2078 "gram.y"
-    { (yyval.dbehavior) = DROP_RESTRICT; /* default */ }
+    { (yyval.dbehavior) = DROP_RESTRICT; /* default */ ;}
     break;
 
   case 294:
-
-/* Line 1806 of yacc.c  */
 #line 2083 "gram.y"
     {
 					CollateClause *n = makeNode(CollateClause);
@@ -22235,105 +22233,79 @@
 					n->collname = (yyvsp[(2) - (2)].list);
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 295:
-
-/* Line 1806 of yacc.c  */
 #line 2090 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 296:
-
-/* Line 1806 of yacc.c  */
 #line 2094 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 297:
-
-/* Line 1806 of yacc.c  */
 #line 2095 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 298:
-
-/* Line 1806 of yacc.c  */
 #line 2099 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 299:
-
-/* Line 1806 of yacc.c  */
 #line 2102 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 300:
-
-/* Line 1806 of yacc.c  */
 #line 2103 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 301:
-
-/* Line 1806 of yacc.c  */
 #line 2107 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 302:
-
-/* Line 1806 of yacc.c  */
 #line 2108 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 303:
-
-/* Line 1806 of yacc.c  */
 #line 2114 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (Node *) (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 304:
-
-/* Line 1806 of yacc.c  */
 #line 2118 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL);
-				}
+				;}
     break;
 
   case 305:
-
-/* Line 1806 of yacc.c  */
 #line 2122 "gram.y"
     {
 					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (5)].str), (yyvsp[(3) - (5)].str), (Node *) (yyvsp[(5) - (5)].node),
 											 DEFELEM_UNSPEC);
-				}
+				;}
     break;
 
   case 306:
-
-/* Line 1806 of yacc.c  */
 #line 2127 "gram.y"
     {
 					(yyval.defelt) = makeDefElemExtended((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].str), NULL, DEFELEM_UNSPEC);
-				}
+				;}
     break;
 
   case 307:
-
-/* Line 1806 of yacc.c  */
 #line 2142 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -22343,26 +22315,20 @@
 					n->cmds = (yyvsp[(4) - (4)].list);
 					n->relkind = OBJECT_TYPE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 308:
-
-/* Line 1806 of yacc.c  */
 #line 2154 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 309:
-
-/* Line 1806 of yacc.c  */
 #line 2155 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 310:
-
-/* Line 1806 of yacc.c  */
 #line 2161 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22370,12 +22336,10 @@
 					n->def = (yyvsp[(3) - (4)].node);
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 311:
-
-/* Line 1806 of yacc.c  */
 #line 2170 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22384,12 +22348,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 312:
-
-/* Line 1806 of yacc.c  */
 #line 2180 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22398,12 +22360,10 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->missing_ok = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 313:
-
-/* Line 1806 of yacc.c  */
 #line 2190 "gram.y"
     {
 					AlterTableCmd *n = makeNode(AlterTableCmd);
@@ -22417,34 +22377,28 @@
 					def->collClause = (CollateClause *) (yyvsp[(7) - (8)].node);
 					def->raw_default = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 314:
-
-/* Line 1806 of yacc.c  */
 #line 2215 "gram.y"
     {
 					ClosePortalStmt *n = makeNode(ClosePortalStmt);
 					n->portalname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 315:
-
-/* Line 1806 of yacc.c  */
 #line 2221 "gram.y"
     {
 					ClosePortalStmt *n = makeNode(ClosePortalStmt);
 					n->portalname = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 316:
-
-/* Line 1806 of yacc.c  */
 #line 2249 "gram.y"
     {
 					CopyStmt *n = makeNode(CopyStmt);
@@ -22465,12 +22419,10 @@
 					if ((yyvsp[(10) - (10)].list))
 						n->options = list_concat(n->options, (yyvsp[(10) - (10)].list));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 317:
-
-/* Line 1806 of yacc.c  */
 #line 2270 "gram.y"
     {
 					CopyStmt *n = makeNode(CopyStmt);
@@ -22481,332 +22433,250 @@
 					n->filename = (yyvsp[(4) - (6)].str);
 					n->options = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 318:
-
-/* Line 1806 of yacc.c  */
 #line 2283 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 319:
-
-/* Line 1806 of yacc.c  */
 #line 2284 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 320:
-
-/* Line 1806 of yacc.c  */
 #line 2293 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 321:
-
-/* Line 1806 of yacc.c  */
 #line 2294 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 322:
-
-/* Line 1806 of yacc.c  */
 #line 2295 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 323:
-
-/* Line 1806 of yacc.c  */
 #line 2298 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 324:
-
-/* Line 1806 of yacc.c  */
 #line 2299 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 325:
-
-/* Line 1806 of yacc.c  */
 #line 2304 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 326:
-
-/* Line 1806 of yacc.c  */
 #line 2305 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 327:
-
-/* Line 1806 of yacc.c  */
 #line 2310 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("format", (Node *)makeString("binary"));
-				}
+				;}
     break;
 
   case 328:
-
-/* Line 1806 of yacc.c  */
 #line 2314 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("oids", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 329:
-
-/* Line 1806 of yacc.c  */
 #line 2318 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 330:
-
-/* Line 1806 of yacc.c  */
 #line 2322 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("null", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 331:
-
-/* Line 1806 of yacc.c  */
 #line 2326 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("format", (Node *)makeString("csv"));
-				}
+				;}
     break;
 
   case 332:
-
-/* Line 1806 of yacc.c  */
 #line 2330 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("header", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 333:
-
-/* Line 1806 of yacc.c  */
 #line 2334 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("quote", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 334:
-
-/* Line 1806 of yacc.c  */
 #line 2338 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("escape", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 335:
-
-/* Line 1806 of yacc.c  */
 #line 2342 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("force_quote", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 336:
-
-/* Line 1806 of yacc.c  */
 #line 2346 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("force_quote", (Node *)makeNode(A_Star));
-				}
+				;}
     break;
 
   case 337:
-
-/* Line 1806 of yacc.c  */
 #line 2350 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("force_not_null", (Node *)(yyvsp[(4) - (4)].list));
-				}
+				;}
     break;
 
   case 338:
-
-/* Line 1806 of yacc.c  */
 #line 2354 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encoding", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 339:
-
-/* Line 1806 of yacc.c  */
 #line 2363 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("format", (Node *)makeString("binary"));
-				}
+				;}
     break;
 
   case 340:
-
-/* Line 1806 of yacc.c  */
 #line 2366 "gram.y"
-    { (yyval.defelt) = NULL; }
+    { (yyval.defelt) = NULL; ;}
     break;
 
   case 341:
-
-/* Line 1806 of yacc.c  */
 #line 2371 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("oids", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 342:
-
-/* Line 1806 of yacc.c  */
 #line 2374 "gram.y"
-    { (yyval.defelt) = NULL; }
+    { (yyval.defelt) = NULL; ;}
     break;
 
   case 343:
-
-/* Line 1806 of yacc.c  */
 #line 2379 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("delimiter", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 344:
-
-/* Line 1806 of yacc.c  */
 #line 2382 "gram.y"
-    { (yyval.defelt) = NULL; }
+    { (yyval.defelt) = NULL; ;}
     break;
 
   case 345:
-
-/* Line 1806 of yacc.c  */
 #line 2386 "gram.y"
-    {}
+    {;}
     break;
 
   case 346:
-
-/* Line 1806 of yacc.c  */
 #line 2387 "gram.y"
-    {}
+    {;}
     break;
 
   case 347:
-
-/* Line 1806 of yacc.c  */
 #line 2393 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 348:
-
-/* Line 1806 of yacc.c  */
 #line 2397 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 349:
-
-/* Line 1806 of yacc.c  */
 #line 2404 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 350:
-
-/* Line 1806 of yacc.c  */
 #line 2410 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 351:
-
-/* Line 1806 of yacc.c  */
 #line 2411 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); }
+    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); ;}
     break;
 
   case 352:
-
-/* Line 1806 of yacc.c  */
 #line 2412 "gram.y"
-    { (yyval.node) = (Node *) makeNode(A_Star); }
+    { (yyval.node) = (Node *) makeNode(A_Star); ;}
     break;
 
   case 353:
-
-/* Line 1806 of yacc.c  */
 #line 2413 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(2) - (3)].list); }
+    { (yyval.node) = (Node *) (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 354:
-
-/* Line 1806 of yacc.c  */
 #line 2414 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 355:
-
-/* Line 1806 of yacc.c  */
 #line 2419 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 356:
-
-/* Line 1806 of yacc.c  */
 #line 2423 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 357:
-
-/* Line 1806 of yacc.c  */
 #line 2430 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 358:
-
-/* Line 1806 of yacc.c  */
 #line 2443 "gram.y"
     {
 					CreateStmt *n = makeNode(CreateStmt);
@@ -22820,12 +22690,10 @@
 					n->tablespacename = (yyvsp[(11) - (11)].str);
 					n->if_not_exists = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 359:
-
-/* Line 1806 of yacc.c  */
 #line 2459 "gram.y"
     {
 					CreateStmt *n = makeNode(CreateStmt);
@@ -22839,12 +22707,10 @@
 					n->tablespacename = (yyvsp[(14) - (14)].str);
 					n->if_not_exists = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 360:
-
-/* Line 1806 of yacc.c  */
 #line 2474 "gram.y"
     {
 					CreateStmt *n = makeNode(CreateStmt);
@@ -22859,12 +22725,10 @@
 					n->tablespacename = (yyvsp[(10) - (10)].str);
 					n->if_not_exists = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 361:
-
-/* Line 1806 of yacc.c  */
 #line 2490 "gram.y"
     {
 					CreateStmt *n = makeNode(CreateStmt);
@@ -22879,177 +22743,133 @@
 					n->tablespacename = (yyvsp[(13) - (13)].str);
 					n->if_not_exists = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 362:
-
-/* Line 1806 of yacc.c  */
 #line 2517 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_TEMP; }
+    { (yyval.ival) = RELPERSISTENCE_TEMP; ;}
     break;
 
   case 363:
-
-/* Line 1806 of yacc.c  */
 #line 2518 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_TEMP; }
+    { (yyval.ival) = RELPERSISTENCE_TEMP; ;}
     break;
 
   case 364:
-
-/* Line 1806 of yacc.c  */
 #line 2519 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_TEMP; }
+    { (yyval.ival) = RELPERSISTENCE_TEMP; ;}
     break;
 
   case 365:
-
-/* Line 1806 of yacc.c  */
 #line 2520 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_TEMP; }
+    { (yyval.ival) = RELPERSISTENCE_TEMP; ;}
     break;
 
   case 366:
-
-/* Line 1806 of yacc.c  */
 #line 2522 "gram.y"
     {
 					ereport(WARNING,
 							(errmsg("GLOBAL is deprecated in temporary table creation"),
 							 parser_errposition((yylsp[(1) - (2)]))));
 					(yyval.ival) = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 367:
-
-/* Line 1806 of yacc.c  */
 #line 2529 "gram.y"
     {
 					ereport(WARNING,
 							(errmsg("GLOBAL is deprecated in temporary table creation"),
 							 parser_errposition((yylsp[(1) - (2)]))));
 					(yyval.ival) = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 368:
-
-/* Line 1806 of yacc.c  */
 #line 2535 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_UNLOGGED; }
+    { (yyval.ival) = RELPERSISTENCE_UNLOGGED; ;}
     break;
 
   case 369:
-
-/* Line 1806 of yacc.c  */
 #line 2536 "gram.y"
-    { (yyval.ival) = RELPERSISTENCE_PERMANENT; }
+    { (yyval.ival) = RELPERSISTENCE_PERMANENT; ;}
     break;
 
   case 370:
-
-/* Line 1806 of yacc.c  */
 #line 2540 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 371:
-
-/* Line 1806 of yacc.c  */
 #line 2541 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 372:
-
-/* Line 1806 of yacc.c  */
 #line 2545 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 373:
-
-/* Line 1806 of yacc.c  */
 #line 2546 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 374:
-
-/* Line 1806 of yacc.c  */
 #line 2551 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 375:
-
-/* Line 1806 of yacc.c  */
 #line 2555 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 376:
-
-/* Line 1806 of yacc.c  */
 #line 2562 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 377:
-
-/* Line 1806 of yacc.c  */
 #line 2566 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 378:
-
-/* Line 1806 of yacc.c  */
 #line 2572 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 379:
-
-/* Line 1806 of yacc.c  */
 #line 2573 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 380:
-
-/* Line 1806 of yacc.c  */
 #line 2574 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 381:
-
-/* Line 1806 of yacc.c  */
 #line 2578 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 382:
-
-/* Line 1806 of yacc.c  */
 #line 2579 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 383:
-
-/* Line 1806 of yacc.c  */
 #line 2583 "gram.y"
     {
 					ColumnDef *n = makeNode(ColumnDef);
@@ -23067,12 +22887,10 @@
 					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
 									 yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 384:
-
-/* Line 1806 of yacc.c  */
 #line 2603 "gram.y"
     {
 					ColumnDef *n = makeNode(ColumnDef);
@@ -23089,26 +22907,20 @@
 					SplitColQualList((yyvsp[(4) - (4)].list), &n->constraints, &n->collClause,
 									 yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 385:
-
-/* Line 1806 of yacc.c  */
 #line 2622 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 386:
-
-/* Line 1806 of yacc.c  */
 #line 2623 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 387:
-
-/* Line 1806 of yacc.c  */
 #line 2628 "gram.y"
     {
 					Constraint *n = (Constraint *) (yyvsp[(3) - (3)].node);
@@ -23116,26 +22928,20 @@
 					n->conname = (yyvsp[(2) - (3)].str);
 					n->location = (yylsp[(1) - (3)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 388:
-
-/* Line 1806 of yacc.c  */
 #line 2635 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 389:
-
-/* Line 1806 of yacc.c  */
 #line 2636 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 390:
-
-/* Line 1806 of yacc.c  */
 #line 2638 "gram.y"
     {
 					/*
@@ -23148,36 +22954,30 @@
 					n->collname = (yyvsp[(2) - (2)].list);
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 391:
-
-/* Line 1806 of yacc.c  */
 #line 2669 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_NOTNULL;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 392:
-
-/* Line 1806 of yacc.c  */
 #line 2676 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 393:
-
-/* Line 1806 of yacc.c  */
 #line 2683 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23188,12 +22988,10 @@
 					n->indexname = NULL;
 					n->indexspace = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 394:
-
-/* Line 1806 of yacc.c  */
 #line 2694 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23204,12 +23002,10 @@
 					n->indexname = NULL;
 					n->indexspace = (yyvsp[(4) - (4)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 395:
-
-/* Line 1806 of yacc.c  */
 #line 2705 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23219,12 +23015,10 @@
 					n->raw_expr = (yyvsp[(3) - (5)].node);
 					n->cooked_expr = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 396:
-
-/* Line 1806 of yacc.c  */
 #line 2715 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23233,12 +23027,10 @@
 					n->raw_expr = (yyvsp[(2) - (2)].node);
 					n->cooked_expr = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 397:
-
-/* Line 1806 of yacc.c  */
 #line 2724 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23253,135 +23045,105 @@
 					n->skip_validation  = false;
 					n->initially_valid  = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 398:
-
-/* Line 1806 of yacc.c  */
 #line 2757 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_DEFERRABLE;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 399:
-
-/* Line 1806 of yacc.c  */
 #line 2764 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_NOT_DEFERRABLE;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 400:
-
-/* Line 1806 of yacc.c  */
 #line 2771 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_DEFERRED;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 401:
-
-/* Line 1806 of yacc.c  */
 #line 2778 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
 					n->contype = CONSTR_ATTR_IMMEDIATE;
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 402:
-
-/* Line 1806 of yacc.c  */
 #line 2789 "gram.y"
     {
 					TableLikeClause *n = makeNode(TableLikeClause);
 					n->relation = (yyvsp[(2) - (3)].range);
 					n->options = (yyvsp[(3) - (3)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 403:
-
-/* Line 1806 of yacc.c  */
 #line 2798 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 404:
-
-/* Line 1806 of yacc.c  */
 #line 2799 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) & ~(yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 405:
-
-/* Line 1806 of yacc.c  */
 #line 2800 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 406:
-
-/* Line 1806 of yacc.c  */
 #line 2804 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_DEFAULTS; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_DEFAULTS; ;}
     break;
 
   case 407:
-
-/* Line 1806 of yacc.c  */
 #line 2805 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_CONSTRAINTS; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_CONSTRAINTS; ;}
     break;
 
   case 408:
-
-/* Line 1806 of yacc.c  */
 #line 2806 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_INDEXES; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_INDEXES; ;}
     break;
 
   case 409:
-
-/* Line 1806 of yacc.c  */
 #line 2807 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_STORAGE; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_STORAGE; ;}
     break;
 
   case 410:
-
-/* Line 1806 of yacc.c  */
 #line 2808 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_COMMENTS; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_COMMENTS; ;}
     break;
 
   case 411:
-
-/* Line 1806 of yacc.c  */
 #line 2809 "gram.y"
-    { (yyval.ival) = CREATE_TABLE_LIKE_ALL; }
+    { (yyval.ival) = CREATE_TABLE_LIKE_ALL; ;}
     break;
 
   case 412:
-
-/* Line 1806 of yacc.c  */
 #line 2819 "gram.y"
     {
 					Constraint *n = (Constraint *) (yyvsp[(3) - (3)].node);
@@ -23389,19 +23151,15 @@
 					n->conname = (yyvsp[(2) - (3)].str);
 					n->location = (yylsp[(1) - (3)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 413:
-
-/* Line 1806 of yacc.c  */
 #line 2826 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 414:
-
-/* Line 1806 of yacc.c  */
 #line 2831 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23414,12 +23172,10 @@
 								   &n->is_no_inherit, yyscanner);
 					n->initially_valid = !n->skip_validation;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 415:
-
-/* Line 1806 of yacc.c  */
 #line 2845 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23433,12 +23189,10 @@
 								   &n->deferrable, &n->initdeferred, NULL,
 								   NULL, yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 416:
-
-/* Line 1806 of yacc.c  */
 #line 2859 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23452,12 +23206,10 @@
 								   &n->deferrable, &n->initdeferred, NULL,
 								   NULL, yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 417:
-
-/* Line 1806 of yacc.c  */
 #line 2874 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23471,12 +23223,10 @@
 								   &n->deferrable, &n->initdeferred, NULL,
 								   NULL, yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 418:
-
-/* Line 1806 of yacc.c  */
 #line 2888 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23490,12 +23240,10 @@
 								   &n->deferrable, &n->initdeferred, NULL,
 								   NULL, yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 419:
-
-/* Line 1806 of yacc.c  */
 #line 2904 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23511,12 +23259,10 @@
 								   &n->deferrable, &n->initdeferred, NULL,
 								   NULL, yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 420:
-
-/* Line 1806 of yacc.c  */
 #line 2921 "gram.y"
     {
 					Constraint *n = makeNode(Constraint);
@@ -23534,72 +23280,54 @@
 								   yyscanner);
 					n->initially_valid = !n->skip_validation;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 421:
-
-/* Line 1806 of yacc.c  */
 #line 2940 "gram.y"
-    {  (yyval.boolean) = TRUE; }
+    {  (yyval.boolean) = TRUE; ;}
     break;
 
   case 422:
-
-/* Line 1806 of yacc.c  */
 #line 2941 "gram.y"
-    {  (yyval.boolean) = FALSE; }
+    {  (yyval.boolean) = FALSE; ;}
     break;
 
   case 423:
-
-/* Line 1806 of yacc.c  */
 #line 2945 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 424:
-
-/* Line 1806 of yacc.c  */
 #line 2946 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 425:
-
-/* Line 1806 of yacc.c  */
 #line 2950 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 426:
-
-/* Line 1806 of yacc.c  */
 #line 2951 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 427:
-
-/* Line 1806 of yacc.c  */
 #line 2955 "gram.y"
     {
 					(yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str));
-				}
+				;}
     break;
 
   case 428:
-
-/* Line 1806 of yacc.c  */
 #line 2961 "gram.y"
     {
 				(yyval.ival) = FKCONSTR_MATCH_FULL;
-			}
+			;}
     break;
 
   case 429:
-
-/* Line 1806 of yacc.c  */
 #line 2965 "gram.y"
     {
 				ereport(ERROR,
@@ -23607,265 +23335,193 @@
 						 errmsg("MATCH PARTIAL not yet implemented"),
 						 parser_errposition((yylsp[(1) - (2)]))));
 				(yyval.ival) = FKCONSTR_MATCH_PARTIAL;
-			}
+			;}
     break;
 
   case 430:
-
-/* Line 1806 of yacc.c  */
 #line 2973 "gram.y"
     {
 				(yyval.ival) = FKCONSTR_MATCH_UNSPECIFIED;
-			}
+			;}
     break;
 
   case 431:
-
-/* Line 1806 of yacc.c  */
 #line 2977 "gram.y"
     {
 				(yyval.ival) = FKCONSTR_MATCH_UNSPECIFIED;
-			}
+			;}
     break;
 
   case 432:
-
-/* Line 1806 of yacc.c  */
 #line 2983 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
     break;
 
   case 433:
-
-/* Line 1806 of yacc.c  */
 #line 2985 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 434:
-
-/* Line 1806 of yacc.c  */
 #line 2989 "gram.y"
     {
 				(yyval.list) = list_make2((yyvsp[(1) - (3)].ielem), (yyvsp[(3) - (3)].list));
-			}
+			;}
     break;
 
   case 435:
-
-/* Line 1806 of yacc.c  */
 #line 2994 "gram.y"
     {
 				(yyval.list) = list_make2((yyvsp[(1) - (6)].ielem), (yyvsp[(5) - (6)].list));
-			}
+			;}
     break;
 
   case 436:
-
-/* Line 1806 of yacc.c  */
 #line 3000 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (4)].node); }
+    { (yyval.node) = (yyvsp[(3) - (4)].node); ;}
     break;
 
   case 437:
-
-/* Line 1806 of yacc.c  */
 #line 3001 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 438:
-
-/* Line 1806 of yacc.c  */
 #line 3012 "gram.y"
-    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); }
+    { (yyval.ival) = ((yyvsp[(1) - (1)].ival) << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); ;}
     break;
 
   case 439:
-
-/* Line 1806 of yacc.c  */
 #line 3014 "gram.y"
-    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); }
+    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | ((yyvsp[(1) - (1)].ival) & 0xFF); ;}
     break;
 
   case 440:
-
-/* Line 1806 of yacc.c  */
 #line 3016 "gram.y"
-    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); }
+    { (yyval.ival) = ((yyvsp[(1) - (2)].ival) << 8) | ((yyvsp[(2) - (2)].ival) & 0xFF); ;}
     break;
 
   case 441:
-
-/* Line 1806 of yacc.c  */
 #line 3018 "gram.y"
-    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); }
+    { (yyval.ival) = ((yyvsp[(2) - (2)].ival) << 8) | ((yyvsp[(1) - (2)].ival) & 0xFF); ;}
     break;
 
   case 442:
-
-/* Line 1806 of yacc.c  */
 #line 3020 "gram.y"
-    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); }
+    { (yyval.ival) = (FKCONSTR_ACTION_NOACTION << 8) | (FKCONSTR_ACTION_NOACTION & 0xFF); ;}
     break;
 
   case 443:
-
-/* Line 1806 of yacc.c  */
 #line 3023 "gram.y"
-    { (yyval.ival) = (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 444:
-
-/* Line 1806 of yacc.c  */
 #line 3026 "gram.y"
-    { (yyval.ival) = (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 445:
-
-/* Line 1806 of yacc.c  */
 #line 3030 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_NOACTION; }
+    { (yyval.ival) = FKCONSTR_ACTION_NOACTION; ;}
     break;
 
   case 446:
-
-/* Line 1806 of yacc.c  */
 #line 3031 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_RESTRICT; }
+    { (yyval.ival) = FKCONSTR_ACTION_RESTRICT; ;}
     break;
 
   case 447:
-
-/* Line 1806 of yacc.c  */
 #line 3032 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_CASCADE; }
+    { (yyval.ival) = FKCONSTR_ACTION_CASCADE; ;}
     break;
 
   case 448:
-
-/* Line 1806 of yacc.c  */
 #line 3033 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_SETNULL; }
+    { (yyval.ival) = FKCONSTR_ACTION_SETNULL; ;}
     break;
 
   case 449:
-
-/* Line 1806 of yacc.c  */
 #line 3034 "gram.y"
-    { (yyval.ival) = FKCONSTR_ACTION_SETDEFAULT; }
+    { (yyval.ival) = FKCONSTR_ACTION_SETDEFAULT; ;}
     break;
 
   case 450:
-
-/* Line 1806 of yacc.c  */
 #line 3037 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 451:
-
-/* Line 1806 of yacc.c  */
 #line 3038 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 452:
-
-/* Line 1806 of yacc.c  */
 #line 3043 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 453:
-
-/* Line 1806 of yacc.c  */
 #line 3044 "gram.y"
-    { (yyval.list) = list_make1(defWithOids(true)); }
+    { (yyval.list) = list_make1(defWithOids(true)); ;}
     break;
 
   case 454:
-
-/* Line 1806 of yacc.c  */
 #line 3045 "gram.y"
-    { (yyval.list) = list_make1(defWithOids(false)); }
+    { (yyval.list) = list_make1(defWithOids(false)); ;}
     break;
 
   case 455:
-
-/* Line 1806 of yacc.c  */
 #line 3046 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 456:
-
-/* Line 1806 of yacc.c  */
 #line 3049 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_DROP; }
+    { (yyval.oncommit) = ONCOMMIT_DROP; ;}
     break;
 
   case 457:
-
-/* Line 1806 of yacc.c  */
 #line 3050 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_DELETE_ROWS; }
+    { (yyval.oncommit) = ONCOMMIT_DELETE_ROWS; ;}
     break;
 
   case 458:
-
-/* Line 1806 of yacc.c  */
 #line 3051 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_PRESERVE_ROWS; }
+    { (yyval.oncommit) = ONCOMMIT_PRESERVE_ROWS; ;}
     break;
 
   case 459:
-
-/* Line 1806 of yacc.c  */
 #line 3052 "gram.y"
-    { (yyval.oncommit) = ONCOMMIT_NOOP; }
+    { (yyval.oncommit) = ONCOMMIT_NOOP; ;}
     break;
 
   case 460:
-
-/* Line 1806 of yacc.c  */
 #line 3055 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 461:
-
-/* Line 1806 of yacc.c  */
 #line 3056 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 462:
-
-/* Line 1806 of yacc.c  */
 #line 3059 "gram.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 463:
-
-/* Line 1806 of yacc.c  */
 #line 3060 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 464:
-
-/* Line 1806 of yacc.c  */
 #line 3063 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 465:
-
-/* Line 1806 of yacc.c  */
 #line 3079 "gram.y"
     {
 					CreateTableAsStmt *ctas = makeNode(CreateTableAsStmt);
@@ -23876,12 +23532,10 @@
 					(yyvsp[(4) - (7)].into)->rel->relpersistence = (yyvsp[(2) - (7)].ival);
 					(yyvsp[(4) - (7)].into)->skipData = !((yyvsp[(7) - (7)].boolean));
 					(yyval.node) = (Node *) ctas;
-				}
+				;}
     break;
 
   case 466:
-
-/* Line 1806 of yacc.c  */
 #line 3093 "gram.y"
     {
 					(yyval.into) = makeNode(IntoClause);
@@ -23891,33 +23545,25 @@
 					(yyval.into)->onCommit = (yyvsp[(4) - (5)].oncommit);
 					(yyval.into)->tableSpaceName = (yyvsp[(5) - (5)].str);
 					(yyval.into)->skipData = false;		/* might get changed later */
-				}
+				;}
     break;
 
   case 467:
-
-/* Line 1806 of yacc.c  */
 #line 3105 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 468:
-
-/* Line 1806 of yacc.c  */
 #line 3106 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 469:
-
-/* Line 1806 of yacc.c  */
 #line 3107 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 470:
-
-/* Line 1806 of yacc.c  */
 #line 3121 "gram.y"
     {
 					CreateSeqStmt *n = makeNode(CreateSeqStmt);
@@ -23926,12 +23572,10 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->ownerId = InvalidOid;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 471:
-
-/* Line 1806 of yacc.c  */
 #line 3133 "gram.y"
     {
 					AlterSeqStmt *n = makeNode(AlterSeqStmt);
@@ -23939,12 +23583,10 @@
 					n->options = (yyvsp[(4) - (4)].list);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 472:
-
-/* Line 1806 of yacc.c  */
 #line 3141 "gram.y"
     {
 					AlterSeqStmt *n = makeNode(AlterSeqStmt);
@@ -23952,200 +23594,152 @@
 					n->options = (yyvsp[(6) - (6)].list);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 473:
-
-/* Line 1806 of yacc.c  */
 #line 3151 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 474:
-
-/* Line 1806 of yacc.c  */
 #line 3152 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 475:
-
-/* Line 1806 of yacc.c  */
 #line 3155 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 476:
-
-/* Line 1806 of yacc.c  */
 #line 3156 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 477:
-
-/* Line 1806 of yacc.c  */
 #line 3160 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cache", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 478:
-
-/* Line 1806 of yacc.c  */
 #line 3164 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cycle", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 479:
-
-/* Line 1806 of yacc.c  */
 #line 3168 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cycle", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 480:
-
-/* Line 1806 of yacc.c  */
 #line 3172 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("increment", (Node *)(yyvsp[(3) - (3)].value));
-				}
+				;}
     break;
 
   case 481:
-
-/* Line 1806 of yacc.c  */
 #line 3176 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("maxvalue", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 482:
-
-/* Line 1806 of yacc.c  */
 #line 3180 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("minvalue", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 483:
-
-/* Line 1806 of yacc.c  */
 #line 3184 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("maxvalue", NULL);
-				}
+				;}
     break;
 
   case 484:
-
-/* Line 1806 of yacc.c  */
 #line 3188 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("minvalue", NULL);
-				}
+				;}
     break;
 
   case 485:
-
-/* Line 1806 of yacc.c  */
 #line 3192 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("owned_by", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 486:
-
-/* Line 1806 of yacc.c  */
 #line 3196 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("start", (Node *)(yyvsp[(3) - (3)].value));
-				}
+				;}
     break;
 
   case 487:
-
-/* Line 1806 of yacc.c  */
 #line 3200 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("restart", NULL);
-				}
+				;}
     break;
 
   case 488:
-
-/* Line 1806 of yacc.c  */
 #line 3204 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("restart", (Node *)(yyvsp[(3) - (3)].value));
-				}
+				;}
     break;
 
   case 489:
-
-/* Line 1806 of yacc.c  */
 #line 3209 "gram.y"
-    {}
+    {;}
     break;
 
   case 490:
-
-/* Line 1806 of yacc.c  */
 #line 3210 "gram.y"
-    {}
+    {;}
     break;
 
   case 491:
-
-/* Line 1806 of yacc.c  */
 #line 3214 "gram.y"
-    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeFloat((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 492:
-
-/* Line 1806 of yacc.c  */
 #line 3216 "gram.y"
     {
 					(yyval.value) = makeFloat((yyvsp[(2) - (2)].str));
 					doNegateFloat((yyval.value));
-				}
+				;}
     break;
 
   case 493:
-
-/* Line 1806 of yacc.c  */
 #line 3220 "gram.y"
-    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); }
+    { (yyval.value) = makeInteger((yyvsp[(1) - (1)].ival)); ;}
     break;
 
   case 494:
-
-/* Line 1806 of yacc.c  */
 #line 3223 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); ;}
     break;
 
   case 495:
-
-/* Line 1806 of yacc.c  */
 #line 3224 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); ;}
     break;
 
   case 496:
-
-/* Line 1806 of yacc.c  */
 #line 3237 "gram.y"
     {
 				CreatePLangStmt *n = makeNode(CreatePLangStmt);
@@ -24157,12 +23751,10 @@
 				n->plvalidator = NIL;
 				n->pltrusted = false;
 				(yyval.node) = (Node *)n;
-			}
+			;}
     break;
 
   case 497:
-
-/* Line 1806 of yacc.c  */
 #line 3250 "gram.y"
     {
 				CreatePLangStmt *n = makeNode(CreatePLangStmt);
@@ -24173,82 +23765,60 @@
 				n->plvalidator = (yyvsp[(10) - (10)].list);
 				n->pltrusted = (yyvsp[(3) - (10)].boolean);
 				(yyval.node) = (Node *)n;
-			}
+			;}
     break;
 
   case 498:
-
-/* Line 1806 of yacc.c  */
 #line 3263 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 499:
-
-/* Line 1806 of yacc.c  */
 #line 3264 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 500:
-
-/* Line 1806 of yacc.c  */
 #line 3272 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 501:
-
-/* Line 1806 of yacc.c  */
 #line 3273 "gram.y"
-    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); }
+    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 502:
-
-/* Line 1806 of yacc.c  */
 #line 3277 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 503:
-
-/* Line 1806 of yacc.c  */
 #line 3278 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 504:
-
-/* Line 1806 of yacc.c  */
 #line 3282 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 505:
-
-/* Line 1806 of yacc.c  */
 #line 3283 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 506:
-
-/* Line 1806 of yacc.c  */
 #line 3287 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 507:
-
-/* Line 1806 of yacc.c  */
 #line 3288 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 508:
-
-/* Line 1806 of yacc.c  */
 #line 3293 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -24259,12 +23829,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 509:
-
-/* Line 1806 of yacc.c  */
 #line 3304 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -24274,26 +23842,20 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 510:
-
-/* Line 1806 of yacc.c  */
 #line 3316 "gram.y"
-    {}
+    {;}
     break;
 
   case 511:
-
-/* Line 1806 of yacc.c  */
 #line 3317 "gram.y"
-    {}
+    {;}
     break;
 
   case 512:
-
-/* Line 1806 of yacc.c  */
 #line 3328 "gram.y"
     {
 					CreateTableSpaceStmt *n = makeNode(CreateTableSpaceStmt);
@@ -24301,50 +23863,40 @@
 					n->owner = (yyvsp[(4) - (6)].str);
 					n->location = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 513:
-
-/* Line 1806 of yacc.c  */
 #line 3337 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 514:
-
-/* Line 1806 of yacc.c  */
 #line 3338 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 515:
-
-/* Line 1806 of yacc.c  */
 #line 3352 "gram.y"
     {
 					DropTableSpaceStmt *n = makeNode(DropTableSpaceStmt);
 					n->tablespacename = (yyvsp[(3) - (3)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 516:
-
-/* Line 1806 of yacc.c  */
 #line 3359 "gram.y"
     {
 					DropTableSpaceStmt *n = makeNode(DropTableSpaceStmt);
 					n->tablespacename = (yyvsp[(5) - (5)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 517:
-
-/* Line 1806 of yacc.c  */
 #line 3376 "gram.y"
     {
 					CreateExtensionStmt *n = makeNode(CreateExtensionStmt);
@@ -24352,12 +23904,10 @@
 					n->if_not_exists = false;
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 518:
-
-/* Line 1806 of yacc.c  */
 #line 3384 "gram.y"
     {
 					CreateExtensionStmt *n = makeNode(CreateExtensionStmt);
@@ -24365,88 +23915,68 @@
 					n->if_not_exists = true;
 					n->options = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 519:
-
-/* Line 1806 of yacc.c  */
 #line 3395 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 520:
-
-/* Line 1806 of yacc.c  */
 #line 3397 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 521:
-
-/* Line 1806 of yacc.c  */
 #line 3402 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("schema", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 522:
-
-/* Line 1806 of yacc.c  */
 #line 3406 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("new_version", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 523:
-
-/* Line 1806 of yacc.c  */
 #line 3410 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("old_version", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 524:
-
-/* Line 1806 of yacc.c  */
 #line 3422 "gram.y"
     {
 					AlterExtensionStmt *n = makeNode(AlterExtensionStmt);
 					n->extname = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 525:
-
-/* Line 1806 of yacc.c  */
 #line 3432 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 526:
-
-/* Line 1806 of yacc.c  */
 #line 3434 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 527:
-
-/* Line 1806 of yacc.c  */
 #line 3439 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("new_version", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 528:
-
-/* Line 1806 of yacc.c  */
 #line 3452 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24456,12 +23986,10 @@
 					n->objname = (yyvsp[(6) - (7)].list);
 					n->objargs = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 529:
-
-/* Line 1806 of yacc.c  */
 #line 3462 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24471,12 +23999,10 @@
 					n->objname = list_make1((yyvsp[(7) - (10)].typnam));
 					n->objargs = list_make1((yyvsp[(9) - (10)].typnam));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 530:
-
-/* Line 1806 of yacc.c  */
 #line 3472 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24485,12 +24011,10 @@
 					n->objtype = OBJECT_COLLATION;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 531:
-
-/* Line 1806 of yacc.c  */
 #line 3481 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24499,12 +24023,10 @@
 					n->objtype = OBJECT_CONVERSION;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 532:
-
-/* Line 1806 of yacc.c  */
 #line 3490 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24513,12 +24035,10 @@
 					n->objtype = OBJECT_DOMAIN;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 533:
-
-/* Line 1806 of yacc.c  */
 #line 3499 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24528,12 +24048,10 @@
 					n->objname = (yyvsp[(6) - (6)].funwithargs)->funcname;
 					n->objargs = (yyvsp[(6) - (6)].funwithargs)->funcargs;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 534:
-
-/* Line 1806 of yacc.c  */
 #line 3509 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24542,12 +24060,10 @@
 					n->objtype = OBJECT_LANGUAGE;
 					n->objname = list_make1(makeString((yyvsp[(7) - (7)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 535:
-
-/* Line 1806 of yacc.c  */
 #line 3518 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24557,12 +24073,10 @@
 					n->objname = (yyvsp[(6) - (7)].list);
 					n->objargs = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 536:
-
-/* Line 1806 of yacc.c  */
 #line 3528 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24572,12 +24086,10 @@
 					n->objname = (yyvsp[(7) - (9)].list);
 					n->objargs = list_make1(makeString((yyvsp[(9) - (9)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 537:
-
-/* Line 1806 of yacc.c  */
 #line 3538 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24587,12 +24099,10 @@
 					n->objname = (yyvsp[(7) - (9)].list);
 					n->objargs = list_make1(makeString((yyvsp[(9) - (9)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 538:
-
-/* Line 1806 of yacc.c  */
 #line 3548 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24601,12 +24111,10 @@
 					n->objtype = OBJECT_SCHEMA;
 					n->objname = list_make1(makeString((yyvsp[(6) - (6)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 539:
-
-/* Line 1806 of yacc.c  */
 #line 3557 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24615,12 +24123,10 @@
 					n->objtype = OBJECT_TABLE;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 540:
-
-/* Line 1806 of yacc.c  */
 #line 3566 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24629,12 +24135,10 @@
 					n->objtype = OBJECT_TSPARSER;
 					n->objname = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 541:
-
-/* Line 1806 of yacc.c  */
 #line 3575 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24643,12 +24147,10 @@
 					n->objtype = OBJECT_TSDICTIONARY;
 					n->objname = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 542:
-
-/* Line 1806 of yacc.c  */
 #line 3584 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24657,12 +24159,10 @@
 					n->objtype = OBJECT_TSTEMPLATE;
 					n->objname = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 543:
-
-/* Line 1806 of yacc.c  */
 #line 3593 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24671,12 +24171,10 @@
 					n->objtype = OBJECT_TSCONFIGURATION;
 					n->objname = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 544:
-
-/* Line 1806 of yacc.c  */
 #line 3602 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24685,12 +24183,10 @@
 					n->objtype = OBJECT_SEQUENCE;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 545:
-
-/* Line 1806 of yacc.c  */
 #line 3611 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24699,12 +24195,10 @@
 					n->objtype = OBJECT_VIEW;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 546:
-
-/* Line 1806 of yacc.c  */
 #line 3620 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24713,12 +24207,10 @@
 					n->objtype = OBJECT_FOREIGN_TABLE;
 					n->objname = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 547:
-
-/* Line 1806 of yacc.c  */
 #line 3629 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24727,12 +24219,10 @@
 					n->objtype = OBJECT_FDW;
 					n->objname = list_make1(makeString((yyvsp[(8) - (8)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 548:
-
-/* Line 1806 of yacc.c  */
 #line 3638 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24741,12 +24231,10 @@
 					n->objtype = OBJECT_FOREIGN_SERVER;
 					n->objname = list_make1(makeString((yyvsp[(6) - (6)].str)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 549:
-
-/* Line 1806 of yacc.c  */
 #line 3647 "gram.y"
     {
 					AlterExtensionContentsStmt *n = makeNode(AlterExtensionContentsStmt);
@@ -24755,12 +24243,10 @@
 					n->objtype = OBJECT_TYPE;
 					n->objname = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 550:
-
-/* Line 1806 of yacc.c  */
 #line 3665 "gram.y"
     {
 					CreateFdwStmt *n = makeNode(CreateFdwStmt);
@@ -24768,68 +24254,50 @@
 					n->func_options = (yyvsp[(6) - (7)].list);
 					n->options = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 551:
-
-/* Line 1806 of yacc.c  */
 #line 3675 "gram.y"
-    { (yyval.defelt) = makeDefElem("handler", (Node *)(yyvsp[(2) - (2)].list)); }
+    { (yyval.defelt) = makeDefElem("handler", (Node *)(yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 552:
-
-/* Line 1806 of yacc.c  */
 #line 3676 "gram.y"
-    { (yyval.defelt) = makeDefElem("handler", NULL); }
+    { (yyval.defelt) = makeDefElem("handler", NULL); ;}
     break;
 
   case 553:
-
-/* Line 1806 of yacc.c  */
 #line 3677 "gram.y"
-    { (yyval.defelt) = makeDefElem("validator", (Node *)(yyvsp[(2) - (2)].list)); }
+    { (yyval.defelt) = makeDefElem("validator", (Node *)(yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 554:
-
-/* Line 1806 of yacc.c  */
 #line 3678 "gram.y"
-    { (yyval.defelt) = makeDefElem("validator", NULL); }
+    { (yyval.defelt) = makeDefElem("validator", NULL); ;}
     break;
 
   case 555:
-
-/* Line 1806 of yacc.c  */
 #line 3682 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 556:
-
-/* Line 1806 of yacc.c  */
 #line 3683 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 557:
-
-/* Line 1806 of yacc.c  */
 #line 3687 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 558:
-
-/* Line 1806 of yacc.c  */
 #line 3688 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 559:
-
-/* Line 1806 of yacc.c  */
 #line 3699 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -24840,12 +24308,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 560:
-
-/* Line 1806 of yacc.c  */
 #line 3710 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -24856,12 +24322,10 @@
 					n->behavior = (yyvsp[(8) - (8)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 561:
-
-/* Line 1806 of yacc.c  */
 #line 3730 "gram.y"
     {
 					AlterFdwStmt *n = makeNode(AlterFdwStmt);
@@ -24869,12 +24333,10 @@
 					n->func_options = (yyvsp[(6) - (7)].list);
 					n->options = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 562:
-
-/* Line 1806 of yacc.c  */
 #line 3738 "gram.y"
     {
 					AlterFdwStmt *n = makeNode(AlterFdwStmt);
@@ -24882,130 +24344,100 @@
 					n->func_options = (yyvsp[(6) - (6)].list);
 					n->options = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 563:
-
-/* Line 1806 of yacc.c  */
 #line 3749 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 564:
-
-/* Line 1806 of yacc.c  */
 #line 3750 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 565:
-
-/* Line 1806 of yacc.c  */
 #line 3755 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 566:
-
-/* Line 1806 of yacc.c  */
 #line 3759 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 567:
-
-/* Line 1806 of yacc.c  */
 #line 3766 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 568:
-
-/* Line 1806 of yacc.c  */
 #line 3771 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 569:
-
-/* Line 1806 of yacc.c  */
 #line 3775 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 570:
-
-/* Line 1806 of yacc.c  */
 #line 3782 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
-				}
+				;}
     break;
 
   case 571:
-
-/* Line 1806 of yacc.c  */
 #line 3786 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
 					(yyval.defelt)->defaction = DEFELEM_SET;
-				}
+				;}
     break;
 
   case 572:
-
-/* Line 1806 of yacc.c  */
 #line 3791 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(2) - (2)].defelt);
 					(yyval.defelt)->defaction = DEFELEM_ADD;
-				}
+				;}
     break;
 
   case 573:
-
-/* Line 1806 of yacc.c  */
 #line 3796 "gram.y"
     {
 					(yyval.defelt) = makeDefElemExtended(NULL, (yyvsp[(2) - (2)].str), NULL, DEFELEM_DROP);
-				}
+				;}
     break;
 
   case 574:
-
-/* Line 1806 of yacc.c  */
 #line 3803 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 575:
-
-/* Line 1806 of yacc.c  */
 #line 3809 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 576:
-
-/* Line 1806 of yacc.c  */
 #line 3814 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 577:
-
-/* Line 1806 of yacc.c  */
 #line 3826 "gram.y"
     {
 					CreateForeignServerStmt *n = makeNode(CreateForeignServerStmt);
@@ -25015,54 +24447,40 @@
 					n->fdwname = (yyvsp[(9) - (10)].str);
 					n->options = (yyvsp[(10) - (10)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 578:
-
-/* Line 1806 of yacc.c  */
 #line 3838 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 579:
-
-/* Line 1806 of yacc.c  */
 #line 3839 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 580:
-
-/* Line 1806 of yacc.c  */
 #line 3844 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 581:
-
-/* Line 1806 of yacc.c  */
 #line 3845 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 582:
-
-/* Line 1806 of yacc.c  */
 #line 3849 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 583:
-
-/* Line 1806 of yacc.c  */
 #line 3850 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 584:
-
-/* Line 1806 of yacc.c  */
 #line 3861 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -25073,12 +24491,10 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 585:
-
-/* Line 1806 of yacc.c  */
 #line 3872 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -25089,12 +24505,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 586:
-
-/* Line 1806 of yacc.c  */
 #line 3892 "gram.y"
     {
 					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
@@ -25103,12 +24517,10 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->has_version = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 587:
-
-/* Line 1806 of yacc.c  */
 #line 3901 "gram.y"
     {
 					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
@@ -25116,24 +24528,20 @@
 					n->version = (yyvsp[(4) - (4)].str);
 					n->has_version = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 588:
-
-/* Line 1806 of yacc.c  */
 #line 3909 "gram.y"
     {
 					AlterForeignServerStmt *n = makeNode(AlterForeignServerStmt);
 					n->servername = (yyvsp[(3) - (4)].str);
 					n->options = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 589:
-
-/* Line 1806 of yacc.c  */
 #line 3928 "gram.y"
     {
 					CreateForeignTableStmt *n = makeNode(CreateForeignTableStmt);
@@ -25146,12 +24554,10 @@
 					n->servername = (yyvsp[(7) - (8)].str);
 					n->options = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 590:
-
-/* Line 1806 of yacc.c  */
 #line 3943 "gram.y"
     {
 					CreateForeignTableStmt *n = makeNode(CreateForeignTableStmt);
@@ -25164,51 +24570,39 @@
 					n->servername = (yyvsp[(10) - (11)].str);
 					n->options = (yyvsp[(11) - (11)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 591:
-
-/* Line 1806 of yacc.c  */
 #line 3958 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 592:
-
-/* Line 1806 of yacc.c  */
 #line 3959 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 593:
-
-/* Line 1806 of yacc.c  */
 #line 3964 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 594:
-
-/* Line 1806 of yacc.c  */
 #line 3968 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 595:
-
-/* Line 1806 of yacc.c  */
 #line 3974 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 596:
-
-/* Line 1806 of yacc.c  */
 #line 3986 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -25217,12 +24611,10 @@
 					n->relkind = OBJECT_FOREIGN_TABLE;
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 597:
-
-/* Line 1806 of yacc.c  */
 #line 3995 "gram.y"
     {
 					AlterTableStmt *n = makeNode(AlterTableStmt);
@@ -25231,12 +24623,10 @@
 					n->relkind = OBJECT_FOREIGN_TABLE;
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 598:
-
-/* Line 1806 of yacc.c  */
 #line 4013 "gram.y"
     {
 					CreateUserMappingStmt *n = makeNode(CreateUserMappingStmt);
@@ -25244,33 +24634,25 @@
 					n->servername = (yyvsp[(7) - (8)].str);
 					n->options = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 599:
-
-/* Line 1806 of yacc.c  */
 #line 4024 "gram.y"
-    { (yyval.str) = "current_user"; }
+    { (yyval.str) = "current_user"; ;}
     break;
 
   case 600:
-
-/* Line 1806 of yacc.c  */
 #line 4025 "gram.y"
-    { (yyval.str) = "current_user"; }
+    { (yyval.str) = "current_user"; ;}
     break;
 
   case 601:
-
-/* Line 1806 of yacc.c  */
 #line 4026 "gram.y"
-    { (yyval.str) = (strcmp((yyvsp[(1) - (1)].str), "public") == 0) ? NULL : (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (strcmp((yyvsp[(1) - (1)].str), "public") == 0) ? NULL : (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 602:
-
-/* Line 1806 of yacc.c  */
 #line 4037 "gram.y"
     {
 					DropUserMappingStmt *n = makeNode(DropUserMappingStmt);
@@ -25278,12 +24660,10 @@
 					n->servername = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 603:
-
-/* Line 1806 of yacc.c  */
 #line 4045 "gram.y"
     {
 					DropUserMappingStmt *n = makeNode(DropUserMappingStmt);
@@ -25291,12 +24671,10 @@
 					n->servername = (yyvsp[(9) - (9)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 604:
-
-/* Line 1806 of yacc.c  */
 #line 4062 "gram.y"
     {
 					AlterUserMappingStmt *n = makeNode(AlterUserMappingStmt);
@@ -25304,12 +24682,10 @@
 					n->servername = (yyvsp[(7) - (8)].str);
 					n->options = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 605:
-
-/* Line 1806 of yacc.c  */
 #line 4083 "gram.y"
     {
 					CreateTrigStmt *n = makeNode(CreateTrigStmt);
@@ -25327,12 +24703,10 @@
 					n->initdeferred  = FALSE;
 					n->constrrel = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 606:
-
-/* Line 1806 of yacc.c  */
 #line 4104 "gram.y"
     {
 					CreateTrigStmt *n = makeNode(CreateTrigStmt);
@@ -25351,40 +24725,30 @@
 								   NULL, yyscanner);
 					n->constrrel = (yyvsp[(9) - (20)].range);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 607:
-
-/* Line 1806 of yacc.c  */
 #line 4125 "gram.y"
-    { (yyval.ival) = TRIGGER_TYPE_BEFORE; }
+    { (yyval.ival) = TRIGGER_TYPE_BEFORE; ;}
     break;
 
   case 608:
-
-/* Line 1806 of yacc.c  */
 #line 4126 "gram.y"
-    { (yyval.ival) = TRIGGER_TYPE_AFTER; }
+    { (yyval.ival) = TRIGGER_TYPE_AFTER; ;}
     break;
 
   case 609:
-
-/* Line 1806 of yacc.c  */
 #line 4127 "gram.y"
-    { (yyval.ival) = TRIGGER_TYPE_INSTEAD; }
+    { (yyval.ival) = TRIGGER_TYPE_INSTEAD; ;}
     break;
 
   case 610:
-
-/* Line 1806 of yacc.c  */
 #line 4132 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 611:
-
-/* Line 1806 of yacc.c  */
 #line 4134 "gram.y"
     {
 					int		events1 = intVal(linitial((yyvsp[(1) - (3)].list)));
@@ -25403,56 +24767,42 @@
 					 */
 					(yyval.list) = list_make2(makeInteger(events1 | events2),
 									list_concat(columns1, columns2));
-				}
+				;}
     break;
 
   case 612:
-
-/* Line 1806 of yacc.c  */
 #line 4156 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_INSERT), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_INSERT), NIL); ;}
     break;
 
   case 613:
-
-/* Line 1806 of yacc.c  */
 #line 4158 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_DELETE), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_DELETE), NIL); ;}
     break;
 
   case 614:
-
-/* Line 1806 of yacc.c  */
 #line 4160 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), NIL); ;}
     break;
 
   case 615:
-
-/* Line 1806 of yacc.c  */
 #line 4162 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_UPDATE), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 616:
-
-/* Line 1806 of yacc.c  */
 #line 4164 "gram.y"
-    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_TRUNCATE), NIL); }
+    { (yyval.list) = list_make2(makeInteger(TRIGGER_TYPE_TRUNCATE), NIL); ;}
     break;
 
   case 617:
-
-/* Line 1806 of yacc.c  */
 #line 4169 "gram.y"
     {
 					(yyval.boolean) = (yyvsp[(3) - (3)].boolean);
-				}
+				;}
     break;
 
   case 618:
-
-/* Line 1806 of yacc.c  */
 #line 4173 "gram.y"
     {
 					/*
@@ -25460,128 +24810,94 @@
 					 * STATEMENT, per SQL
 					 */
 					(yyval.boolean) = FALSE;
-				}
+				;}
     break;
 
   case 619:
-
-/* Line 1806 of yacc.c  */
 #line 4183 "gram.y"
-    {}
+    {;}
     break;
 
   case 620:
-
-/* Line 1806 of yacc.c  */
 #line 4184 "gram.y"
-    {}
+    {;}
     break;
 
   case 621:
-
-/* Line 1806 of yacc.c  */
 #line 4188 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 622:
-
-/* Line 1806 of yacc.c  */
 #line 4189 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 623:
-
-/* Line 1806 of yacc.c  */
 #line 4193 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (4)].node); }
+    { (yyval.node) = (yyvsp[(3) - (4)].node); ;}
     break;
 
   case 624:
-
-/* Line 1806 of yacc.c  */
 #line 4194 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 625:
-
-/* Line 1806 of yacc.c  */
 #line 4198 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].value)); ;}
     break;
 
   case 626:
-
-/* Line 1806 of yacc.c  */
 #line 4199 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].value)); ;}
     break;
 
   case 627:
-
-/* Line 1806 of yacc.c  */
 #line 4200 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 628:
-
-/* Line 1806 of yacc.c  */
 #line 4205 "gram.y"
     {
 					char buf[64];
 					snprintf(buf, sizeof(buf), "%d", (yyvsp[(1) - (1)].ival));
 					(yyval.value) = makeString(pstrdup(buf));
-				}
+				;}
     break;
 
   case 629:
-
-/* Line 1806 of yacc.c  */
 #line 4210 "gram.y"
-    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 630:
-
-/* Line 1806 of yacc.c  */
 #line 4211 "gram.y"
-    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 631:
-
-/* Line 1806 of yacc.c  */
 #line 4212 "gram.y"
-    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.value) = makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 632:
-
-/* Line 1806 of yacc.c  */
 #line 4216 "gram.y"
-    { (yyval.range) = (yyvsp[(2) - (2)].range); }
+    { (yyval.range) = (yyvsp[(2) - (2)].range); ;}
     break;
 
   case 633:
-
-/* Line 1806 of yacc.c  */
 #line 4217 "gram.y"
-    { (yyval.range) = NULL; }
+    { (yyval.range) = NULL; ;}
     break;
 
   case 634:
-
-/* Line 1806 of yacc.c  */
 #line 4222 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 635:
-
-/* Line 1806 of yacc.c  */
 #line 4224 "gram.y"
     {
 					/*
@@ -25605,54 +24921,40 @@
 								 errmsg("conflicting constraint properties"),
 								 parser_errposition((yylsp[(2) - (2)]))));
 					(yyval.ival) = newspec;
-				}
+				;}
     break;
 
   case 636:
-
-/* Line 1806 of yacc.c  */
 #line 4250 "gram.y"
-    { (yyval.ival) = CAS_NOT_DEFERRABLE; }
+    { (yyval.ival) = CAS_NOT_DEFERRABLE; ;}
     break;
 
   case 637:
-
-/* Line 1806 of yacc.c  */
 #line 4251 "gram.y"
-    { (yyval.ival) = CAS_DEFERRABLE; }
+    { (yyval.ival) = CAS_DEFERRABLE; ;}
     break;
 
   case 638:
-
-/* Line 1806 of yacc.c  */
 #line 4252 "gram.y"
-    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; }
+    { (yyval.ival) = CAS_INITIALLY_IMMEDIATE; ;}
     break;
 
   case 639:
-
-/* Line 1806 of yacc.c  */
 #line 4253 "gram.y"
-    { (yyval.ival) = CAS_INITIALLY_DEFERRED; }
+    { (yyval.ival) = CAS_INITIALLY_DEFERRED; ;}
     break;
 
   case 640:
-
-/* Line 1806 of yacc.c  */
 #line 4254 "gram.y"
-    { (yyval.ival) = CAS_NOT_VALID; }
+    { (yyval.ival) = CAS_NOT_VALID; ;}
     break;
 
   case 641:
-
-/* Line 1806 of yacc.c  */
 #line 4255 "gram.y"
-    { (yyval.ival) = CAS_NO_INHERIT; }
+    { (yyval.ival) = CAS_NO_INHERIT; ;}
     break;
 
   case 642:
-
-/* Line 1806 of yacc.c  */
 #line 4261 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -25663,12 +24965,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 643:
-
-/* Line 1806 of yacc.c  */
 #line 4272 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -25679,12 +24979,10 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 644:
-
-/* Line 1806 of yacc.c  */
 #line 4296 "gram.y"
     {
 					CreateTrigStmt *n = makeNode(CreateTrigStmt);
@@ -25700,12 +24998,10 @@
 							 errmsg("CREATE ASSERTION is not yet implemented")));
 
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 645:
-
-/* Line 1806 of yacc.c  */
 #line 4315 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -25717,12 +25013,10 @@
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("DROP ASSERTION is not yet implemented")));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 646:
-
-/* Line 1806 of yacc.c  */
 #line 4338 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -25732,12 +25026,10 @@
 					n->args = (yyvsp[(4) - (5)].list);
 					n->definition = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 647:
-
-/* Line 1806 of yacc.c  */
 #line 4348 "gram.y"
     {
 					/* old-style (pre-8.2) syntax for CREATE AGGREGATE */
@@ -25748,12 +25040,10 @@
 					n->args = NIL;
 					n->definition = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 648:
-
-/* Line 1806 of yacc.c  */
 #line 4359 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -25763,12 +25053,10 @@
 					n->args = NIL;
 					n->definition = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 649:
-
-/* Line 1806 of yacc.c  */
 #line 4369 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -25778,12 +25066,10 @@
 					n->args = NIL;
 					n->definition = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 650:
-
-/* Line 1806 of yacc.c  */
 #line 4379 "gram.y"
     {
 					/* Shell type (identified by lack of definition) */
@@ -25794,12 +25080,10 @@
 					n->args = NIL;
 					n->definition = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 651:
-
-/* Line 1806 of yacc.c  */
 #line 4390 "gram.y"
     {
 					CompositeTypeStmt *n = makeNode(CompositeTypeStmt);
@@ -25808,36 +25092,30 @@
 					n->typevar = makeRangeVarFromAnyName((yyvsp[(3) - (7)].list), (yylsp[(3) - (7)]), yyscanner);
 					n->coldeflist = (yyvsp[(6) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 652:
-
-/* Line 1806 of yacc.c  */
 #line 4399 "gram.y"
     {
 					CreateEnumStmt *n = makeNode(CreateEnumStmt);
 					n->typeName = (yyvsp[(3) - (8)].list);
 					n->vals = (yyvsp[(7) - (8)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 653:
-
-/* Line 1806 of yacc.c  */
 #line 4406 "gram.y"
     {
 					CreateRangeStmt *n = makeNode(CreateRangeStmt);
 					n->typeName = (yyvsp[(3) - (6)].list);
 					n->params	= (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 654:
-
-/* Line 1806 of yacc.c  */
 #line 4413 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -25846,12 +25124,10 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 655:
-
-/* Line 1806 of yacc.c  */
 #line 4422 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -25860,12 +25136,10 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 656:
-
-/* Line 1806 of yacc.c  */
 #line 4431 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -25874,12 +25148,10 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 657:
-
-/* Line 1806 of yacc.c  */
 #line 4440 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -25888,12 +25160,10 @@
 					n->defnames = (yyvsp[(5) - (6)].list);
 					n->definition = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 658:
-
-/* Line 1806 of yacc.c  */
 #line 4449 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -25902,12 +25172,10 @@
 					n->defnames = (yyvsp[(3) - (4)].list);
 					n->definition = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 659:
-
-/* Line 1806 of yacc.c  */
 #line 4458 "gram.y"
     {
 					DefineStmt *n = makeNode(DefineStmt);
@@ -25916,158 +25184,116 @@
 					n->defnames = (yyvsp[(3) - (5)].list);
 					n->definition = list_make1(makeDefElem("from", (Node *) (yyvsp[(5) - (5)].list)));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 660:
-
-/* Line 1806 of yacc.c  */
 #line 4468 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 661:
-
-/* Line 1806 of yacc.c  */
 #line 4471 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 662:
-
-/* Line 1806 of yacc.c  */
 #line 4472 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 663:
-
-/* Line 1806 of yacc.c  */
 #line 4476 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (Node *) (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 664:
-
-/* Line 1806 of yacc.c  */
 #line 4480 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (1)].str), NULL);
-				}
+				;}
     break;
 
   case 665:
-
-/* Line 1806 of yacc.c  */
 #line 4486 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].typnam); }
+    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 666:
-
-/* Line 1806 of yacc.c  */
 #line 4487 "gram.y"
-    { (yyval.node) = (Node *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); }
+    { (yyval.node) = (Node *)makeString(pstrdup((yyvsp[(1) - (1)].keyword))); ;}
     break;
 
   case 667:
-
-/* Line 1806 of yacc.c  */
 #line 4488 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].list); }
+    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].list); ;}
     break;
 
   case 668:
-
-/* Line 1806 of yacc.c  */
 #line 4489 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].value); }
+    { (yyval.node) = (Node *)(yyvsp[(1) - (1)].value); ;}
     break;
 
   case 669:
-
-/* Line 1806 of yacc.c  */
 #line 4490 "gram.y"
-    { (yyval.node) = (Node *)makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *)makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 670:
-
-/* Line 1806 of yacc.c  */
 #line 4493 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 671:
-
-/* Line 1806 of yacc.c  */
 #line 4494 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 672:
-
-/* Line 1806 of yacc.c  */
 #line 4497 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 673:
-
-/* Line 1806 of yacc.c  */
 #line 4500 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 674:
-
-/* Line 1806 of yacc.c  */
 #line 4501 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 675:
-
-/* Line 1806 of yacc.c  */
 #line 4510 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (3)].str), (Node *)(yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 676:
-
-/* Line 1806 of yacc.c  */
 #line 4516 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 677:
-
-/* Line 1806 of yacc.c  */
 #line 4517 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 678:
-
-/* Line 1806 of yacc.c  */
 #line 4521 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 679:
-
-/* Line 1806 of yacc.c  */
 #line 4523 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 680:
-
-/* Line 1806 of yacc.c  */
 #line 4534 "gram.y"
     {
 				AlterEnumStmt *n = makeNode(AlterEnumStmt);
@@ -26076,12 +25302,10 @@
 				n->newValNeighbor = NULL;
 				n->newValIsAfter = true;
 				(yyval.node) = (Node *) n;
-			}
+			;}
     break;
 
   case 681:
-
-/* Line 1806 of yacc.c  */
 #line 4543 "gram.y"
     {
 				AlterEnumStmt *n = makeNode(AlterEnumStmt);
@@ -26090,12 +25314,10 @@
 				n->newValNeighbor = (yyvsp[(8) - (8)].str);
 				n->newValIsAfter = false;
 				(yyval.node) = (Node *) n;
-			}
+			;}
     break;
 
   case 682:
-
-/* Line 1806 of yacc.c  */
 #line 4552 "gram.y"
     {
 				AlterEnumStmt *n = makeNode(AlterEnumStmt);
@@ -26104,12 +25326,10 @@
 				n->newValNeighbor = (yyvsp[(8) - (8)].str);
 				n->newValIsAfter = true;
 				(yyval.node) = (Node *) n;
-			}
+			;}
     break;
 
   case 683:
-
-/* Line 1806 of yacc.c  */
 #line 4577 "gram.y"
     {
 					CreateOpClassStmt *n = makeNode(CreateOpClassStmt);
@@ -26120,26 +25340,20 @@
 					n->opfamilyname = (yyvsp[(11) - (13)].list);
 					n->items = (yyvsp[(13) - (13)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 684:
-
-/* Line 1806 of yacc.c  */
 #line 4590 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 685:
-
-/* Line 1806 of yacc.c  */
 #line 4591 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 686:
-
-/* Line 1806 of yacc.c  */
 #line 4596 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -26149,12 +25363,10 @@
 					n->number = (yyvsp[(2) - (5)].ival);
 					n->order_family = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 687:
-
-/* Line 1806 of yacc.c  */
 #line 4607 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -26164,12 +25376,10 @@
 					n->number = (yyvsp[(2) - (6)].ival);
 					n->order_family = (yyvsp[(5) - (6)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 688:
-
-/* Line 1806 of yacc.c  */
 #line 4617 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -26178,12 +25388,10 @@
 					n->args = extractArgTypes((yyvsp[(4) - (4)].list));
 					n->number = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 689:
-
-/* Line 1806 of yacc.c  */
 #line 4626 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -26193,73 +25401,55 @@
 					n->number = (yyvsp[(2) - (7)].ival);
 					n->class_args = (yyvsp[(4) - (7)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 690:
-
-/* Line 1806 of yacc.c  */
 #line 4636 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
 					n->itemtype = OPCLASS_ITEM_STORAGETYPE;
 					n->storedtype = (yyvsp[(2) - (2)].typnam);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 691:
-
-/* Line 1806 of yacc.c  */
 #line 4644 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 692:
-
-/* Line 1806 of yacc.c  */
 #line 4645 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 693:
-
-/* Line 1806 of yacc.c  */
 #line 4648 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 694:
-
-/* Line 1806 of yacc.c  */
 #line 4649 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 695:
-
-/* Line 1806 of yacc.c  */
 #line 4652 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 696:
-
-/* Line 1806 of yacc.c  */
 #line 4653 "gram.y"
-    { (yyval.list) = (yyvsp[(4) - (4)].list); }
+    { (yyval.list) = (yyvsp[(4) - (4)].list); ;}
     break;
 
   case 697:
-
-/* Line 1806 of yacc.c  */
 #line 4654 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 698:
-
-/* Line 1806 of yacc.c  */
 #line 4658 "gram.y"
     {
 					/*
@@ -26273,31 +25463,25 @@
 							 errhint("Update your data type."),
 							 parser_errposition((yylsp[(1) - (1)]))));
 					(yyval.boolean) = TRUE;
-				}
+				;}
     break;
 
   case 699:
-
-/* Line 1806 of yacc.c  */
 #line 4671 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 700:
-
-/* Line 1806 of yacc.c  */
 #line 4677 "gram.y"
     {
 					CreateOpFamilyStmt *n = makeNode(CreateOpFamilyStmt);
 					n->opfamilyname = (yyvsp[(4) - (6)].list);
 					n->amname = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 701:
-
-/* Line 1806 of yacc.c  */
 #line 4687 "gram.y"
     {
 					AlterOpFamilyStmt *n = makeNode(AlterOpFamilyStmt);
@@ -26306,12 +25490,10 @@
 					n->isDrop = false;
 					n->items = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 702:
-
-/* Line 1806 of yacc.c  */
 #line 4696 "gram.y"
     {
 					AlterOpFamilyStmt *n = makeNode(AlterOpFamilyStmt);
@@ -26320,26 +25502,20 @@
 					n->isDrop = true;
 					n->items = (yyvsp[(8) - (8)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 703:
-
-/* Line 1806 of yacc.c  */
 #line 4707 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 704:
-
-/* Line 1806 of yacc.c  */
 #line 4708 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 705:
-
-/* Line 1806 of yacc.c  */
 #line 4713 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -26347,12 +25523,10 @@
 					n->number = (yyvsp[(2) - (5)].ival);
 					n->args = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 706:
-
-/* Line 1806 of yacc.c  */
 #line 4721 "gram.y"
     {
 					CreateOpClassItem *n = makeNode(CreateOpClassItem);
@@ -26360,12 +25534,10 @@
 					n->number = (yyvsp[(2) - (5)].ival);
 					n->args = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 707:
-
-/* Line 1806 of yacc.c  */
 #line 4733 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -26376,12 +25548,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 708:
-
-/* Line 1806 of yacc.c  */
 #line 4744 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -26392,12 +25562,10 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 709:
-
-/* Line 1806 of yacc.c  */
 #line 4758 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -26408,12 +25576,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 710:
-
-/* Line 1806 of yacc.c  */
 #line 4769 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -26424,36 +25590,30 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 711:
-
-/* Line 1806 of yacc.c  */
 #line 4792 "gram.y"
     {
 					DropOwnedStmt *n = makeNode(DropOwnedStmt);
 					n->roles = (yyvsp[(4) - (5)].list);
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 712:
-
-/* Line 1806 of yacc.c  */
 #line 4802 "gram.y"
     {
 					ReassignOwnedStmt *n = makeNode(ReassignOwnedStmt);
 					n->roles = (yyvsp[(4) - (6)].list);
 					n->newrole = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 713:
-
-/* Line 1806 of yacc.c  */
 #line 4820 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -26464,12 +25624,10 @@
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 714:
-
-/* Line 1806 of yacc.c  */
 #line 4831 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -26480,12 +25638,10 @@
 					n->behavior = (yyvsp[(4) - (4)].dbehavior);
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 715:
-
-/* Line 1806 of yacc.c  */
 #line 4842 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -26496,12 +25652,10 @@
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					n->concurrent = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 716:
-
-/* Line 1806 of yacc.c  */
 #line 4853 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -26512,159 +25666,115 @@
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					n->concurrent = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 717:
-
-/* Line 1806 of yacc.c  */
 #line 4866 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLE; }
+    { (yyval.objtype) = OBJECT_TABLE; ;}
     break;
 
   case 718:
-
-/* Line 1806 of yacc.c  */
 #line 4867 "gram.y"
-    { (yyval.objtype) = OBJECT_SEQUENCE; }
+    { (yyval.objtype) = OBJECT_SEQUENCE; ;}
     break;
 
   case 719:
-
-/* Line 1806 of yacc.c  */
 #line 4868 "gram.y"
-    { (yyval.objtype) = OBJECT_VIEW; }
+    { (yyval.objtype) = OBJECT_VIEW; ;}
     break;
 
   case 720:
-
-/* Line 1806 of yacc.c  */
 #line 4869 "gram.y"
-    { (yyval.objtype) = OBJECT_INDEX; }
+    { (yyval.objtype) = OBJECT_INDEX; ;}
     break;
 
   case 721:
-
-/* Line 1806 of yacc.c  */
 #line 4870 "gram.y"
-    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
+    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; ;}
     break;
 
   case 722:
-
-/* Line 1806 of yacc.c  */
 #line 4871 "gram.y"
-    { (yyval.objtype) = OBJECT_TYPE; }
+    { (yyval.objtype) = OBJECT_TYPE; ;}
     break;
 
   case 723:
-
-/* Line 1806 of yacc.c  */
 #line 4872 "gram.y"
-    { (yyval.objtype) = OBJECT_DOMAIN; }
+    { (yyval.objtype) = OBJECT_DOMAIN; ;}
     break;
 
   case 724:
-
-/* Line 1806 of yacc.c  */
 #line 4873 "gram.y"
-    { (yyval.objtype) = OBJECT_COLLATION; }
+    { (yyval.objtype) = OBJECT_COLLATION; ;}
     break;
 
   case 725:
-
-/* Line 1806 of yacc.c  */
 #line 4874 "gram.y"
-    { (yyval.objtype) = OBJECT_CONVERSION; }
+    { (yyval.objtype) = OBJECT_CONVERSION; ;}
     break;
 
   case 726:
-
-/* Line 1806 of yacc.c  */
 #line 4875 "gram.y"
-    { (yyval.objtype) = OBJECT_SCHEMA; }
+    { (yyval.objtype) = OBJECT_SCHEMA; ;}
     break;
 
   case 727:
-
-/* Line 1806 of yacc.c  */
 #line 4876 "gram.y"
-    { (yyval.objtype) = OBJECT_EXTENSION; }
+    { (yyval.objtype) = OBJECT_EXTENSION; ;}
     break;
 
   case 728:
-
-/* Line 1806 of yacc.c  */
 #line 4877 "gram.y"
-    { (yyval.objtype) = OBJECT_TSPARSER; }
+    { (yyval.objtype) = OBJECT_TSPARSER; ;}
     break;
 
   case 729:
-
-/* Line 1806 of yacc.c  */
 #line 4878 "gram.y"
-    { (yyval.objtype) = OBJECT_TSDICTIONARY; }
+    { (yyval.objtype) = OBJECT_TSDICTIONARY; ;}
     break;
 
   case 730:
-
-/* Line 1806 of yacc.c  */
 #line 4879 "gram.y"
-    { (yyval.objtype) = OBJECT_TSTEMPLATE; }
+    { (yyval.objtype) = OBJECT_TSTEMPLATE; ;}
     break;
 
   case 731:
-
-/* Line 1806 of yacc.c  */
 #line 4880 "gram.y"
-    { (yyval.objtype) = OBJECT_TSCONFIGURATION; }
+    { (yyval.objtype) = OBJECT_TSCONFIGURATION; ;}
     break;
 
   case 732:
-
-/* Line 1806 of yacc.c  */
 #line 4884 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].list)); ;}
     break;
 
   case 733:
-
-/* Line 1806 of yacc.c  */
 #line 4885 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 734:
-
-/* Line 1806 of yacc.c  */
 #line 4888 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 735:
-
-/* Line 1806 of yacc.c  */
 #line 4889 "gram.y"
-    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); }
+    { (yyval.list) = lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)); ;}
     break;
 
   case 736:
-
-/* Line 1806 of yacc.c  */
 #line 4893 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(2) - (2)].str))); ;}
     break;
 
   case 737:
-
-/* Line 1806 of yacc.c  */
 #line 4895 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 738:
-
-/* Line 1806 of yacc.c  */
 #line 4908 "gram.y"
     {
 					TruncateStmt *n = makeNode(TruncateStmt);
@@ -26672,33 +25782,25 @@
 					n->restart_seqs = (yyvsp[(4) - (5)].boolean);
 					n->behavior = (yyvsp[(5) - (5)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 739:
-
-/* Line 1806 of yacc.c  */
 #line 4918 "gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 740:
-
-/* Line 1806 of yacc.c  */
 #line 4919 "gram.y"
-    { (yyval.boolean) = true; }
+    { (yyval.boolean) = true; ;}
     break;
 
   case 741:
-
-/* Line 1806 of yacc.c  */
 #line 4920 "gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 742:
-
-/* Line 1806 of yacc.c  */
 #line 4947 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26707,12 +25809,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 743:
-
-/* Line 1806 of yacc.c  */
 #line 4956 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26721,12 +25821,10 @@
 					n->objargs = (yyvsp[(5) - (7)].list);
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 744:
-
-/* Line 1806 of yacc.c  */
 #line 4965 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26735,12 +25833,10 @@
 					n->objargs = extractArgTypes((yyvsp[(5) - (7)].list));
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 745:
-
-/* Line 1806 of yacc.c  */
 #line 4974 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26749,12 +25845,10 @@
 					n->objargs = (yyvsp[(5) - (7)].list);
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 746:
-
-/* Line 1806 of yacc.c  */
 #line 4983 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26763,12 +25857,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 747:
-
-/* Line 1806 of yacc.c  */
 #line 4992 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26777,12 +25869,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 748:
-
-/* Line 1806 of yacc.c  */
 #line 5001 "gram.y"
     {
 					/* Obsolete syntax supported for awhile for compatibility */
@@ -26792,12 +25882,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 749:
-
-/* Line 1806 of yacc.c  */
 #line 5011 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26806,12 +25894,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 750:
-
-/* Line 1806 of yacc.c  */
 #line 5020 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26820,12 +25906,10 @@
 					n->objargs = list_make1(makeString((yyvsp[(7) - (9)].str)));
 					n->comment = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 751:
-
-/* Line 1806 of yacc.c  */
 #line 5029 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26834,12 +25918,10 @@
 					n->objargs = list_make1(makeString((yyvsp[(7) - (9)].str)));
 					n->comment = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 752:
-
-/* Line 1806 of yacc.c  */
 #line 5038 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26848,12 +25930,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 753:
-
-/* Line 1806 of yacc.c  */
 #line 5047 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26862,12 +25942,10 @@
 					n->objargs = list_make1((yyvsp[(7) - (10)].typnam));
 					n->comment = (yyvsp[(10) - (10)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 754:
-
-/* Line 1806 of yacc.c  */
 #line 5056 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26876,12 +25954,10 @@
 					n->objargs = NIL;
 					n->comment = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 755:
-
-/* Line 1806 of yacc.c  */
 #line 5065 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26889,12 +25965,10 @@
 					n->objname = (yyvsp[(6) - (8)].list);
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 756:
-
-/* Line 1806 of yacc.c  */
 #line 5073 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26902,12 +25976,10 @@
 					n->objname = (yyvsp[(6) - (8)].list);
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 757:
-
-/* Line 1806 of yacc.c  */
 #line 5081 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26915,12 +25987,10 @@
 					n->objname = (yyvsp[(6) - (8)].list);
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 758:
-
-/* Line 1806 of yacc.c  */
 #line 5089 "gram.y"
     {
 					CommentStmt *n = makeNode(CommentStmt);
@@ -26928,145 +25998,105 @@
 					n->objname = (yyvsp[(6) - (8)].list);
 					n->comment = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 759:
-
-/* Line 1806 of yacc.c  */
 #line 5099 "gram.y"
-    { (yyval.objtype) = OBJECT_COLUMN; }
+    { (yyval.objtype) = OBJECT_COLUMN; ;}
     break;
 
   case 760:
-
-/* Line 1806 of yacc.c  */
 #line 5100 "gram.y"
-    { (yyval.objtype) = OBJECT_DATABASE; }
+    { (yyval.objtype) = OBJECT_DATABASE; ;}
     break;
 
   case 761:
-
-/* Line 1806 of yacc.c  */
 #line 5101 "gram.y"
-    { (yyval.objtype) = OBJECT_SCHEMA; }
+    { (yyval.objtype) = OBJECT_SCHEMA; ;}
     break;
 
   case 762:
-
-/* Line 1806 of yacc.c  */
 #line 5102 "gram.y"
-    { (yyval.objtype) = OBJECT_INDEX; }
+    { (yyval.objtype) = OBJECT_INDEX; ;}
     break;
 
   case 763:
-
-/* Line 1806 of yacc.c  */
 #line 5103 "gram.y"
-    { (yyval.objtype) = OBJECT_SEQUENCE; }
+    { (yyval.objtype) = OBJECT_SEQUENCE; ;}
     break;
 
   case 764:
-
-/* Line 1806 of yacc.c  */
 #line 5104 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLE; }
+    { (yyval.objtype) = OBJECT_TABLE; ;}
     break;
 
   case 765:
-
-/* Line 1806 of yacc.c  */
 #line 5105 "gram.y"
-    { (yyval.objtype) = OBJECT_DOMAIN; }
+    { (yyval.objtype) = OBJECT_DOMAIN; ;}
     break;
 
   case 766:
-
-/* Line 1806 of yacc.c  */
 #line 5106 "gram.y"
-    { (yyval.objtype) = OBJECT_TYPE; }
+    { (yyval.objtype) = OBJECT_TYPE; ;}
     break;
 
   case 767:
-
-/* Line 1806 of yacc.c  */
 #line 5107 "gram.y"
-    { (yyval.objtype) = OBJECT_VIEW; }
+    { (yyval.objtype) = OBJECT_VIEW; ;}
     break;
 
   case 768:
-
-/* Line 1806 of yacc.c  */
 #line 5108 "gram.y"
-    { (yyval.objtype) = OBJECT_COLLATION; }
+    { (yyval.objtype) = OBJECT_COLLATION; ;}
     break;
 
   case 769:
-
-/* Line 1806 of yacc.c  */
 #line 5109 "gram.y"
-    { (yyval.objtype) = OBJECT_CONVERSION; }
+    { (yyval.objtype) = OBJECT_CONVERSION; ;}
     break;
 
   case 770:
-
-/* Line 1806 of yacc.c  */
 #line 5110 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLESPACE; }
+    { (yyval.objtype) = OBJECT_TABLESPACE; ;}
     break;
 
   case 771:
-
-/* Line 1806 of yacc.c  */
 #line 5111 "gram.y"
-    { (yyval.objtype) = OBJECT_EXTENSION; }
+    { (yyval.objtype) = OBJECT_EXTENSION; ;}
     break;
 
   case 772:
-
-/* Line 1806 of yacc.c  */
 #line 5112 "gram.y"
-    { (yyval.objtype) = OBJECT_ROLE; }
+    { (yyval.objtype) = OBJECT_ROLE; ;}
     break;
 
   case 773:
-
-/* Line 1806 of yacc.c  */
 #line 5113 "gram.y"
-    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
+    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; ;}
     break;
 
   case 774:
-
-/* Line 1806 of yacc.c  */
 #line 5114 "gram.y"
-    { (yyval.objtype) = OBJECT_FOREIGN_SERVER; }
+    { (yyval.objtype) = OBJECT_FOREIGN_SERVER; ;}
     break;
 
   case 775:
-
-/* Line 1806 of yacc.c  */
 #line 5115 "gram.y"
-    { (yyval.objtype) = OBJECT_FDW; }
+    { (yyval.objtype) = OBJECT_FDW; ;}
     break;
 
   case 776:
-
-/* Line 1806 of yacc.c  */
 #line 5119 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 777:
-
-/* Line 1806 of yacc.c  */
 #line 5120 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 778:
-
-/* Line 1806 of yacc.c  */
 #line 5136 "gram.y"
     {
 					SecLabelStmt *n = makeNode(SecLabelStmt);
@@ -27076,12 +26106,10 @@
 					n->objargs = NIL;
 					n->label = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 779:
-
-/* Line 1806 of yacc.c  */
 #line 5147 "gram.y"
     {
 					SecLabelStmt *n = makeNode(SecLabelStmt);
@@ -27091,12 +26119,10 @@
 					n->objargs = (yyvsp[(7) - (9)].list);
 					n->label = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 780:
-
-/* Line 1806 of yacc.c  */
 #line 5158 "gram.y"
     {
 					SecLabelStmt *n = makeNode(SecLabelStmt);
@@ -27106,12 +26132,10 @@
 					n->objargs = extractArgTypes((yyvsp[(7) - (9)].list));
 					n->label = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 781:
-
-/* Line 1806 of yacc.c  */
 #line 5169 "gram.y"
     {
 					SecLabelStmt *n = makeNode(SecLabelStmt);
@@ -27121,12 +26145,10 @@
 					n->objargs = NIL;
 					n->label = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 782:
-
-/* Line 1806 of yacc.c  */
 #line 5180 "gram.y"
     {
 					SecLabelStmt *n = makeNode(SecLabelStmt);
@@ -27136,139 +26158,103 @@
 					n->objargs = NIL;
 					n->label = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 783:
-
-/* Line 1806 of yacc.c  */
 #line 5191 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 784:
-
-/* Line 1806 of yacc.c  */
 #line 5192 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 785:
-
-/* Line 1806 of yacc.c  */
 #line 5196 "gram.y"
-    { (yyval.objtype) = OBJECT_COLUMN; }
+    { (yyval.objtype) = OBJECT_COLUMN; ;}
     break;
 
   case 786:
-
-/* Line 1806 of yacc.c  */
 #line 5197 "gram.y"
-    { (yyval.objtype) = OBJECT_DATABASE; }
+    { (yyval.objtype) = OBJECT_DATABASE; ;}
     break;
 
   case 787:
-
-/* Line 1806 of yacc.c  */
 #line 5198 "gram.y"
-    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; }
+    { (yyval.objtype) = OBJECT_FOREIGN_TABLE; ;}
     break;
 
   case 788:
-
-/* Line 1806 of yacc.c  */
 #line 5199 "gram.y"
-    { (yyval.objtype) = OBJECT_SCHEMA; }
+    { (yyval.objtype) = OBJECT_SCHEMA; ;}
     break;
 
   case 789:
-
-/* Line 1806 of yacc.c  */
 #line 5200 "gram.y"
-    { (yyval.objtype) = OBJECT_SEQUENCE; }
+    { (yyval.objtype) = OBJECT_SEQUENCE; ;}
     break;
 
   case 790:
-
-/* Line 1806 of yacc.c  */
 #line 5201 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLE; }
+    { (yyval.objtype) = OBJECT_TABLE; ;}
     break;
 
   case 791:
-
-/* Line 1806 of yacc.c  */
 #line 5202 "gram.y"
-    { (yyval.objtype) = OBJECT_TYPE; }
+    { (yyval.objtype) = OBJECT_TYPE; ;}
     break;
 
   case 792:
-
-/* Line 1806 of yacc.c  */
 #line 5203 "gram.y"
-    { (yyval.objtype) = OBJECT_ROLE; }
+    { (yyval.objtype) = OBJECT_ROLE; ;}
     break;
 
   case 793:
-
-/* Line 1806 of yacc.c  */
 #line 5204 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLESPACE; }
+    { (yyval.objtype) = OBJECT_TABLESPACE; ;}
     break;
 
   case 794:
-
-/* Line 1806 of yacc.c  */
 #line 5205 "gram.y"
-    { (yyval.objtype) = OBJECT_TYPE; }
+    { (yyval.objtype) = OBJECT_TYPE; ;}
     break;
 
   case 795:
-
-/* Line 1806 of yacc.c  */
 #line 5206 "gram.y"
-    { (yyval.objtype) = OBJECT_VIEW; }
+    { (yyval.objtype) = OBJECT_VIEW; ;}
     break;
 
   case 796:
-
-/* Line 1806 of yacc.c  */
 #line 5209 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 797:
-
-/* Line 1806 of yacc.c  */
 #line 5210 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 798:
-
-/* Line 1806 of yacc.c  */
 #line 5221 "gram.y"
     {
 					FetchStmt *n = (FetchStmt *) (yyvsp[(2) - (2)].node);
 					n->ismove = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 799:
-
-/* Line 1806 of yacc.c  */
 #line 5227 "gram.y"
     {
 					FetchStmt *n = (FetchStmt *) (yyvsp[(2) - (2)].node);
 					n->ismove = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 800:
-
-/* Line 1806 of yacc.c  */
 #line 5235 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27276,12 +26262,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 801:
-
-/* Line 1806 of yacc.c  */
 #line 5243 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27289,12 +26273,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 802:
-
-/* Line 1806 of yacc.c  */
 #line 5251 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27302,12 +26284,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 803:
-
-/* Line 1806 of yacc.c  */
 #line 5259 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27315,12 +26295,10 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 804:
-
-/* Line 1806 of yacc.c  */
 #line 5267 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27328,12 +26306,10 @@
 					n->direction = FETCH_ABSOLUTE;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 805:
-
-/* Line 1806 of yacc.c  */
 #line 5275 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27341,12 +26317,10 @@
 					n->direction = FETCH_ABSOLUTE;
 					n->howMany = -1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 806:
-
-/* Line 1806 of yacc.c  */
 #line 5283 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27354,12 +26328,10 @@
 					n->direction = FETCH_ABSOLUTE;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 807:
-
-/* Line 1806 of yacc.c  */
 #line 5291 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27367,12 +26339,10 @@
 					n->direction = FETCH_RELATIVE;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 808:
-
-/* Line 1806 of yacc.c  */
 #line 5299 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27380,12 +26350,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = (yyvsp[(1) - (3)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 809:
-
-/* Line 1806 of yacc.c  */
 #line 5307 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27393,12 +26361,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 810:
-
-/* Line 1806 of yacc.c  */
 #line 5315 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27406,12 +26372,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 811:
-
-/* Line 1806 of yacc.c  */
 #line 5323 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27419,12 +26383,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 812:
-
-/* Line 1806 of yacc.c  */
 #line 5331 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27432,12 +26394,10 @@
 					n->direction = FETCH_FORWARD;
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 813:
-
-/* Line 1806 of yacc.c  */
 #line 5339 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27445,12 +26405,10 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = 1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 814:
-
-/* Line 1806 of yacc.c  */
 #line 5347 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27458,12 +26416,10 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = (yyvsp[(2) - (4)].ival);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 815:
-
-/* Line 1806 of yacc.c  */
 #line 5355 "gram.y"
     {
 					FetchStmt *n = makeNode(FetchStmt);
@@ -27471,40 +26427,30 @@
 					n->direction = FETCH_BACKWARD;
 					n->howMany = FETCH_ALL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 816:
-
-/* Line 1806 of yacc.c  */
 #line 5364 "gram.y"
-    {}
+    {;}
     break;
 
   case 817:
-
-/* Line 1806 of yacc.c  */
 #line 5365 "gram.y"
-    {}
+    {;}
     break;
 
   case 818:
-
-/* Line 1806 of yacc.c  */
 #line 5368 "gram.y"
-    {}
+    {;}
     break;
 
   case 819:
-
-/* Line 1806 of yacc.c  */
 #line 5369 "gram.y"
-    {}
+    {;}
     break;
 
   case 820:
-
-/* Line 1806 of yacc.c  */
 #line 5381 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -27516,12 +26462,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->grant_option = (yyvsp[(7) - (7)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 821:
-
-/* Line 1806 of yacc.c  */
 #line 5397 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -27534,12 +26478,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 822:
-
-/* Line 1806 of yacc.c  */
 #line 5411 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -27552,119 +26494,95 @@
 					n->grantees = (yyvsp[(9) - (10)].list);
 					n->behavior = (yyvsp[(10) - (10)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 823:
-
-/* Line 1806 of yacc.c  */
 #line 5436 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 824:
-
-/* Line 1806 of yacc.c  */
 #line 5438 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 825:
-
-/* Line 1806 of yacc.c  */
 #line 5440 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 826:
-
-/* Line 1806 of yacc.c  */
 #line 5442 "gram.y"
     {
 					AccessPriv *n = makeNode(AccessPriv);
 					n->priv_name = NULL;
 					n->cols = (yyvsp[(3) - (4)].list);
 					(yyval.list) = list_make1(n);
-				}
+				;}
     break;
 
   case 827:
-
-/* Line 1806 of yacc.c  */
 #line 5449 "gram.y"
     {
 					AccessPriv *n = makeNode(AccessPriv);
 					n->priv_name = NULL;
 					n->cols = (yyvsp[(4) - (5)].list);
 					(yyval.list) = list_make1(n);
-				}
+				;}
     break;
 
   case 828:
-
-/* Line 1806 of yacc.c  */
 #line 5457 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].accesspriv)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].accesspriv)); ;}
     break;
 
   case 829:
-
-/* Line 1806 of yacc.c  */
 #line 5458 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].accesspriv)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].accesspriv)); ;}
     break;
 
   case 830:
-
-/* Line 1806 of yacc.c  */
 #line 5462 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = pstrdup((yyvsp[(1) - (2)].keyword));
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 831:
-
-/* Line 1806 of yacc.c  */
 #line 5469 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = pstrdup((yyvsp[(1) - (2)].keyword));
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 832:
-
-/* Line 1806 of yacc.c  */
 #line 5476 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = pstrdup((yyvsp[(1) - (2)].keyword));
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 833:
-
-/* Line 1806 of yacc.c  */
 #line 5483 "gram.y"
     {
 				AccessPriv *n = makeNode(AccessPriv);
 				n->priv_name = (yyvsp[(1) - (2)].str);
 				n->cols = (yyvsp[(2) - (2)].list);
 				(yyval.accesspriv) = n;
-			}
+			;}
     break;
 
   case 834:
-
-/* Line 1806 of yacc.c  */
 #line 5497 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27672,12 +26590,10 @@
 					n->objtype = ACL_OBJECT_RELATION;
 					n->objs = (yyvsp[(1) - (1)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 835:
-
-/* Line 1806 of yacc.c  */
 #line 5505 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27685,12 +26601,10 @@
 					n->objtype = ACL_OBJECT_RELATION;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 836:
-
-/* Line 1806 of yacc.c  */
 #line 5513 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27698,12 +26612,10 @@
 					n->objtype = ACL_OBJECT_SEQUENCE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 837:
-
-/* Line 1806 of yacc.c  */
 #line 5521 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27711,12 +26623,10 @@
 					n->objtype = ACL_OBJECT_FDW;
 					n->objs = (yyvsp[(4) - (4)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 838:
-
-/* Line 1806 of yacc.c  */
 #line 5529 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27724,12 +26634,10 @@
 					n->objtype = ACL_OBJECT_FOREIGN_SERVER;
 					n->objs = (yyvsp[(3) - (3)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 839:
-
-/* Line 1806 of yacc.c  */
 #line 5537 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27737,12 +26645,10 @@
 					n->objtype = ACL_OBJECT_FUNCTION;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 840:
-
-/* Line 1806 of yacc.c  */
 #line 5545 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27750,12 +26656,10 @@
 					n->objtype = ACL_OBJECT_DATABASE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 841:
-
-/* Line 1806 of yacc.c  */
 #line 5553 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27763,12 +26667,10 @@
 					n->objtype = ACL_OBJECT_DOMAIN;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 842:
-
-/* Line 1806 of yacc.c  */
 #line 5561 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27776,12 +26678,10 @@
 					n->objtype = ACL_OBJECT_LANGUAGE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 843:
-
-/* Line 1806 of yacc.c  */
 #line 5569 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27789,12 +26689,10 @@
 					n->objtype = ACL_OBJECT_LARGEOBJECT;
 					n->objs = (yyvsp[(3) - (3)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 844:
-
-/* Line 1806 of yacc.c  */
 #line 5577 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27802,12 +26700,10 @@
 					n->objtype = ACL_OBJECT_NAMESPACE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 845:
-
-/* Line 1806 of yacc.c  */
 #line 5585 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27815,12 +26711,10 @@
 					n->objtype = ACL_OBJECT_TABLESPACE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 846:
-
-/* Line 1806 of yacc.c  */
 #line 5593 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27828,12 +26722,10 @@
 					n->objtype = ACL_OBJECT_TYPE;
 					n->objs = (yyvsp[(2) - (2)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 847:
-
-/* Line 1806 of yacc.c  */
 #line 5601 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27841,12 +26733,10 @@
 					n->objtype = ACL_OBJECT_RELATION;
 					n->objs = (yyvsp[(5) - (5)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 848:
-
-/* Line 1806 of yacc.c  */
 #line 5609 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27854,12 +26744,10 @@
 					n->objtype = ACL_OBJECT_SEQUENCE;
 					n->objs = (yyvsp[(5) - (5)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 849:
-
-/* Line 1806 of yacc.c  */
 #line 5617 "gram.y"
     {
 					PrivTarget *n = (PrivTarget *) palloc(sizeof(PrivTarget));
@@ -27867,26 +26755,20 @@
 					n->objtype = ACL_OBJECT_FUNCTION;
 					n->objs = (yyvsp[(5) - (5)].list);
 					(yyval.privtarget) = n;
-				}
+				;}
     break;
 
   case 850:
-
-/* Line 1806 of yacc.c  */
 #line 5628 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 851:
-
-/* Line 1806 of yacc.c  */
 #line 5629 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 852:
-
-/* Line 1806 of yacc.c  */
 #line 5633 "gram.y"
     {
 					PrivGrantee *n = makeNode(PrivGrantee);
@@ -27896,12 +26778,10 @@
 					else
 						n->rolname = (yyvsp[(1) - (1)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 853:
-
-/* Line 1806 of yacc.c  */
 #line 5643 "gram.y"
     {
 					PrivGrantee *n = makeNode(PrivGrantee);
@@ -27911,52 +26791,40 @@
 					else
 						n->rolname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 854:
-
-/* Line 1806 of yacc.c  */
 #line 5656 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 855:
-
-/* Line 1806 of yacc.c  */
 #line 5657 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 856:
-
-/* Line 1806 of yacc.c  */
 #line 5661 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].funwithargs)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].funwithargs)); ;}
     break;
 
   case 857:
-
-/* Line 1806 of yacc.c  */
 #line 5663 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].funwithargs)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].funwithargs)); ;}
     break;
 
   case 858:
-
-/* Line 1806 of yacc.c  */
 #line 5668 "gram.y"
     {
 					FuncWithArgs *n = makeNode(FuncWithArgs);
 					n->funcname = (yyvsp[(1) - (2)].list);
 					n->funcargs = extractArgTypes((yyvsp[(2) - (2)].list));
 					(yyval.funwithargs) = n;
-				}
+				;}
     break;
 
   case 859:
-
-/* Line 1806 of yacc.c  */
 #line 5684 "gram.y"
     {
 					GrantRoleStmt *n = makeNode(GrantRoleStmt);
@@ -27966,12 +26834,10 @@
 					n->admin_opt = (yyvsp[(5) - (6)].boolean);
 					n->grantor = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 860:
-
-/* Line 1806 of yacc.c  */
 #line 5697 "gram.y"
     {
 					GrantRoleStmt *n = makeNode(GrantRoleStmt);
@@ -27981,12 +26847,10 @@
 					n->grantee_roles = (yyvsp[(4) - (6)].list);
 					n->behavior = (yyvsp[(6) - (6)].dbehavior);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 861:
-
-/* Line 1806 of yacc.c  */
 #line 5707 "gram.y"
     {
 					GrantRoleStmt *n = makeNode(GrantRoleStmt);
@@ -27996,93 +26860,71 @@
 					n->grantee_roles = (yyvsp[(7) - (9)].list);
 					n->behavior = (yyvsp[(9) - (9)].dbehavior);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 862:
-
-/* Line 1806 of yacc.c  */
 #line 5718 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 863:
-
-/* Line 1806 of yacc.c  */
 #line 5719 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 864:
-
-/* Line 1806 of yacc.c  */
 #line 5722 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 865:
-
-/* Line 1806 of yacc.c  */
 #line 5723 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 866:
-
-/* Line 1806 of yacc.c  */
 #line 5734 "gram.y"
     {
 					AlterDefaultPrivilegesStmt *n = makeNode(AlterDefaultPrivilegesStmt);
 					n->options = (yyvsp[(4) - (5)].list);
 					n->action = (GrantStmt *) (yyvsp[(5) - (5)].node);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 867:
-
-/* Line 1806 of yacc.c  */
 #line 5743 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 868:
-
-/* Line 1806 of yacc.c  */
 #line 5744 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 869:
-
-/* Line 1806 of yacc.c  */
 #line 5749 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("schemas", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 870:
-
-/* Line 1806 of yacc.c  */
 #line 5753 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("roles", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 871:
-
-/* Line 1806 of yacc.c  */
 #line 5757 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("roles", (Node *)(yyvsp[(3) - (3)].list));
-				}
+				;}
     break;
 
   case 872:
-
-/* Line 1806 of yacc.c  */
 #line 5769 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -28094,12 +26936,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->grant_option = (yyvsp[(7) - (7)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 873:
-
-/* Line 1806 of yacc.c  */
 #line 5782 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -28112,12 +26952,10 @@
 					n->grantees = (yyvsp[(6) - (7)].list);
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 874:
-
-/* Line 1806 of yacc.c  */
 #line 5796 "gram.y"
     {
 					GrantStmt *n = makeNode(GrantStmt);
@@ -28130,40 +26968,30 @@
 					n->grantees = (yyvsp[(9) - (10)].list);
 					n->behavior = (yyvsp[(10) - (10)].dbehavior);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 875:
-
-/* Line 1806 of yacc.c  */
 #line 5811 "gram.y"
-    { (yyval.ival) = ACL_OBJECT_RELATION; }
+    { (yyval.ival) = ACL_OBJECT_RELATION; ;}
     break;
 
   case 876:
-
-/* Line 1806 of yacc.c  */
 #line 5812 "gram.y"
-    { (yyval.ival) = ACL_OBJECT_FUNCTION; }
+    { (yyval.ival) = ACL_OBJECT_FUNCTION; ;}
     break;
 
   case 877:
-
-/* Line 1806 of yacc.c  */
 #line 5813 "gram.y"
-    { (yyval.ival) = ACL_OBJECT_SEQUENCE; }
+    { (yyval.ival) = ACL_OBJECT_SEQUENCE; ;}
     break;
 
   case 878:
-
-/* Line 1806 of yacc.c  */
 #line 5814 "gram.y"
-    { (yyval.ival) = ACL_OBJECT_TYPE; }
+    { (yyval.ival) = ACL_OBJECT_TYPE; ;}
     break;
 
   case 879:
-
-/* Line 1806 of yacc.c  */
 #line 5829 "gram.y"
     {
 					IndexStmt *n = makeNode(IndexStmt);
@@ -28185,82 +27013,60 @@
 					n->deferrable = false;
 					n->initdeferred = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 880:
-
-/* Line 1806 of yacc.c  */
 #line 5853 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 881:
-
-/* Line 1806 of yacc.c  */
 #line 5854 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 882:
-
-/* Line 1806 of yacc.c  */
 #line 5858 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 883:
-
-/* Line 1806 of yacc.c  */
 #line 5859 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 884:
-
-/* Line 1806 of yacc.c  */
 #line 5863 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 885:
-
-/* Line 1806 of yacc.c  */
 #line 5864 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 886:
-
-/* Line 1806 of yacc.c  */
 #line 5868 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 887:
-
-/* Line 1806 of yacc.c  */
 #line 5869 "gram.y"
-    { (yyval.str) = DEFAULT_INDEX_TYPE; }
+    { (yyval.str) = DEFAULT_INDEX_TYPE; ;}
     break;
 
   case 888:
-
-/* Line 1806 of yacc.c  */
 #line 5872 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].ielem)); ;}
     break;
 
   case 889:
-
-/* Line 1806 of yacc.c  */
 #line 5873 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].ielem)); ;}
     break;
 
   case 890:
-
-/* Line 1806 of yacc.c  */
 #line 5882 "gram.y"
     {
 					(yyval.ielem) = makeNode(IndexElem);
@@ -28271,12 +27077,10 @@
 					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
 					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].ival);
 					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].ival);
-				}
+				;}
     break;
 
   case 891:
-
-/* Line 1806 of yacc.c  */
 #line 5893 "gram.y"
     {
 					(yyval.ielem) = makeNode(IndexElem);
@@ -28287,12 +27091,10 @@
 					(yyval.ielem)->opclass = (yyvsp[(3) - (5)].list);
 					(yyval.ielem)->ordering = (yyvsp[(4) - (5)].ival);
 					(yyval.ielem)->nulls_ordering = (yyvsp[(5) - (5)].ival);
-				}
+				;}
     break;
 
   case 892:
-
-/* Line 1806 of yacc.c  */
 #line 5904 "gram.y"
     {
 					(yyval.ielem) = makeNode(IndexElem);
@@ -28303,89 +27105,65 @@
 					(yyval.ielem)->opclass = (yyvsp[(5) - (7)].list);
 					(yyval.ielem)->ordering = (yyvsp[(6) - (7)].ival);
 					(yyval.ielem)->nulls_ordering = (yyvsp[(7) - (7)].ival);
-				}
+				;}
     break;
 
   case 893:
-
-/* Line 1806 of yacc.c  */
 #line 5916 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 894:
-
-/* Line 1806 of yacc.c  */
 #line 5917 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 895:
-
-/* Line 1806 of yacc.c  */
 #line 5920 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 896:
-
-/* Line 1806 of yacc.c  */
 #line 5921 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 897:
-
-/* Line 1806 of yacc.c  */
 #line 5922 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 898:
-
-/* Line 1806 of yacc.c  */
 #line 5925 "gram.y"
-    { (yyval.ival) = SORTBY_ASC; }
+    { (yyval.ival) = SORTBY_ASC; ;}
     break;
 
   case 899:
-
-/* Line 1806 of yacc.c  */
 #line 5926 "gram.y"
-    { (yyval.ival) = SORTBY_DESC; }
+    { (yyval.ival) = SORTBY_DESC; ;}
     break;
 
   case 900:
-
-/* Line 1806 of yacc.c  */
 #line 5927 "gram.y"
-    { (yyval.ival) = SORTBY_DEFAULT; }
+    { (yyval.ival) = SORTBY_DEFAULT; ;}
     break;
 
   case 901:
-
-/* Line 1806 of yacc.c  */
 #line 5930 "gram.y"
-    { (yyval.ival) = SORTBY_NULLS_FIRST; }
+    { (yyval.ival) = SORTBY_NULLS_FIRST; ;}
     break;
 
   case 902:
-
-/* Line 1806 of yacc.c  */
 #line 5931 "gram.y"
-    { (yyval.ival) = SORTBY_NULLS_LAST; }
+    { (yyval.ival) = SORTBY_NULLS_LAST; ;}
     break;
 
   case 903:
-
-/* Line 1806 of yacc.c  */
 #line 5932 "gram.y"
-    { (yyval.ival) = SORTBY_NULLS_DEFAULT; }
+    { (yyval.ival) = SORTBY_NULLS_DEFAULT; ;}
     break;
 
   case 904:
-
-/* Line 1806 of yacc.c  */
 #line 5950 "gram.y"
     {
 					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
@@ -28396,12 +27174,10 @@
 					n->options = (yyvsp[(8) - (9)].list);
 					n->withClause = (yyvsp[(9) - (9)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 905:
-
-/* Line 1806 of yacc.c  */
 #line 5962 "gram.y"
     {
 					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
@@ -28413,12 +27189,10 @@
 					n->options = (yyvsp[(11) - (12)].list);
 					n->withClause = (yyvsp[(12) - (12)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 906:
-
-/* Line 1806 of yacc.c  */
 #line 5975 "gram.y"
     {
 					CreateFunctionStmt *n = makeNode(CreateFunctionStmt);
@@ -28429,82 +27203,60 @@
 					n->options = (yyvsp[(6) - (7)].list);
 					n->withClause = (yyvsp[(7) - (7)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 907:
-
-/* Line 1806 of yacc.c  */
 #line 5988 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 908:
-
-/* Line 1806 of yacc.c  */
 #line 5989 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 909:
-
-/* Line 1806 of yacc.c  */
 #line 5992 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 910:
-
-/* Line 1806 of yacc.c  */
 #line 5993 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 911:
-
-/* Line 1806 of yacc.c  */
 #line 5997 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); ;}
     break;
 
   case 912:
-
-/* Line 1806 of yacc.c  */
 #line 5998 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); ;}
     break;
 
   case 913:
-
-/* Line 1806 of yacc.c  */
 #line 6006 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 914:
-
-/* Line 1806 of yacc.c  */
 #line 6007 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 915:
-
-/* Line 1806 of yacc.c  */
 #line 6011 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param)); ;}
     break;
 
   case 916:
-
-/* Line 1806 of yacc.c  */
 #line 6013 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param)); ;}
     break;
 
   case 917:
-
-/* Line 1806 of yacc.c  */
 #line 6028 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -28513,12 +27265,10 @@
 					n->mode = (yyvsp[(1) - (3)].fun_param_mode);
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 918:
-
-/* Line 1806 of yacc.c  */
 #line 6037 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -28527,12 +27277,10 @@
 					n->mode = (yyvsp[(2) - (3)].fun_param_mode);
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 919:
-
-/* Line 1806 of yacc.c  */
 #line 6046 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -28541,12 +27289,10 @@
 					n->mode = FUNC_PARAM_IN;
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 920:
-
-/* Line 1806 of yacc.c  */
 #line 6055 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -28555,12 +27301,10 @@
 					n->mode = (yyvsp[(1) - (2)].fun_param_mode);
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 921:
-
-/* Line 1806 of yacc.c  */
 #line 6064 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -28569,47 +27313,35 @@
 					n->mode = FUNC_PARAM_IN;
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 922:
-
-/* Line 1806 of yacc.c  */
 #line 6075 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_IN; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_IN; ;}
     break;
 
   case 923:
-
-/* Line 1806 of yacc.c  */
 #line 6076 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_OUT; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_OUT; ;}
     break;
 
   case 924:
-
-/* Line 1806 of yacc.c  */
 #line 6077 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; ;}
     break;
 
   case 925:
-
-/* Line 1806 of yacc.c  */
 #line 6078 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_INOUT; ;}
     break;
 
   case 926:
-
-/* Line 1806 of yacc.c  */
 #line 6079 "gram.y"
-    { (yyval.fun_param_mode) = FUNC_PARAM_VARIADIC; }
+    { (yyval.fun_param_mode) = FUNC_PARAM_VARIADIC; ;}
     break;
 
   case 928:
-
-/* Line 1806 of yacc.c  */
 #line 6090 "gram.y"
     {
 					/* We can catch over-specified results here if we want to,
@@ -28617,287 +27349,223 @@
 					 * - thomas 2000-03-22
 					 */
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 929:
-
-/* Line 1806 of yacc.c  */
 #line 6104 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 930:
-
-/* Line 1806 of yacc.c  */
 #line 6106 "gram.y"
     {
 					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (4)].str)), (yyvsp[(2) - (4)].list)));
 					(yyval.typnam)->pct_type = true;
 					(yyval.typnam)->location = (yylsp[(1) - (4)]);
-				}
+				;}
     break;
 
   case 931:
-
-/* Line 1806 of yacc.c  */
 #line 6112 "gram.y"
     {
 					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(2) - (5)].str)), (yyvsp[(3) - (5)].list)));
 					(yyval.typnam)->pct_type = true;
 					(yyval.typnam)->setof = TRUE;
 					(yyval.typnam)->location = (yylsp[(2) - (5)]);
-				}
+				;}
     break;
 
   case 932:
-
-/* Line 1806 of yacc.c  */
 #line 6122 "gram.y"
     {
 					(yyval.fun_param) = (yyvsp[(1) - (1)].fun_param);
-				}
+				;}
     break;
 
   case 933:
-
-/* Line 1806 of yacc.c  */
 #line 6126 "gram.y"
     {
 					(yyval.fun_param) = (yyvsp[(1) - (3)].fun_param);
 					(yyval.fun_param)->defexpr = (yyvsp[(3) - (3)].node);
-				}
+				;}
     break;
 
   case 934:
-
-/* Line 1806 of yacc.c  */
 #line 6131 "gram.y"
     {
 					(yyval.fun_param) = (yyvsp[(1) - (3)].fun_param);
 					(yyval.fun_param)->defexpr = (yyvsp[(3) - (3)].node);
-				}
+				;}
     break;
 
   case 935:
-
-/* Line 1806 of yacc.c  */
 #line 6140 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 936:
-
-/* Line 1806 of yacc.c  */
 #line 6141 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 937:
-
-/* Line 1806 of yacc.c  */
 #line 6149 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 938:
-
-/* Line 1806 of yacc.c  */
 #line 6153 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 939:
-
-/* Line 1806 of yacc.c  */
 #line 6157 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("strict", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 940:
-
-/* Line 1806 of yacc.c  */
 #line 6161 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("immutable"));
-				}
+				;}
     break;
 
   case 941:
-
-/* Line 1806 of yacc.c  */
 #line 6165 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("stable"));
-				}
+				;}
     break;
 
   case 942:
-
-/* Line 1806 of yacc.c  */
 #line 6169 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("volatility", (Node *)makeString("volatile"));
-				}
+				;}
     break;
 
   case 943:
-
-/* Line 1806 of yacc.c  */
 #line 6173 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 944:
-
-/* Line 1806 of yacc.c  */
 #line 6177 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 945:
-
-/* Line 1806 of yacc.c  */
 #line 6181 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 946:
-
-/* Line 1806 of yacc.c  */
 #line 6185 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("security", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 947:
-
-/* Line 1806 of yacc.c  */
 #line 6189 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("leakproof", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 948:
-
-/* Line 1806 of yacc.c  */
 #line 6193 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("leakproof", (Node *)makeInteger(FALSE));
-				}
+				;}
     break;
 
   case 949:
-
-/* Line 1806 of yacc.c  */
 #line 6197 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("cost", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 950:
-
-/* Line 1806 of yacc.c  */
 #line 6201 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("rows", (Node *)(yyvsp[(2) - (2)].value));
-				}
+				;}
     break;
 
   case 951:
-
-/* Line 1806 of yacc.c  */
 #line 6205 "gram.y"
     {
 					/* we abuse the normal content of a DefElem here */
 					(yyval.defelt) = makeDefElem("set", (Node *)(yyvsp[(1) - (1)].vsetstmt));
-				}
+				;}
     break;
 
   case 952:
-
-/* Line 1806 of yacc.c  */
 #line 6213 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("as", (Node *)(yyvsp[(2) - (2)].list));
-				}
+				;}
     break;
 
   case 953:
-
-/* Line 1806 of yacc.c  */
 #line 6217 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("language", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 954:
-
-/* Line 1806 of yacc.c  */
 #line 6221 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("window", (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 955:
-
-/* Line 1806 of yacc.c  */
 #line 6225 "gram.y"
     {
 					(yyval.defelt) = (yyvsp[(1) - (1)].defelt);
-				}
+				;}
     break;
 
   case 956:
-
-/* Line 1806 of yacc.c  */
 #line 6230 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 957:
-
-/* Line 1806 of yacc.c  */
 #line 6232 "gram.y"
     {
 					(yyval.list) = list_make2(makeString((yyvsp[(1) - (3)].str)), makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 958:
-
-/* Line 1806 of yacc.c  */
 #line 6238 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 959:
-
-/* Line 1806 of yacc.c  */
 #line 6239 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 960:
-
-/* Line 1806 of yacc.c  */
 #line 6243 "gram.y"
     {
 					FunctionParameter *n = makeNode(FunctionParameter);
@@ -28906,56 +27574,44 @@
 					n->mode = FUNC_PARAM_TABLE;
 					n->defexpr = NULL;
 					(yyval.fun_param) = n;
-				}
+				;}
     break;
 
   case 961:
-
-/* Line 1806 of yacc.c  */
 #line 6255 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].fun_param));
-				}
+				;}
     break;
 
   case 962:
-
-/* Line 1806 of yacc.c  */
 #line 6259 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].fun_param));
-				}
+				;}
     break;
 
   case 963:
-
-/* Line 1806 of yacc.c  */
 #line 6274 "gram.y"
     {
 					AlterFunctionStmt *n = makeNode(AlterFunctionStmt);
 					n->func = (yyvsp[(3) - (5)].funwithargs);
 					n->actions = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 964:
-
-/* Line 1806 of yacc.c  */
 #line 6284 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 965:
-
-/* Line 1806 of yacc.c  */
 #line 6285 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 968:
-
-/* Line 1806 of yacc.c  */
 #line 6307 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -28966,12 +27622,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 969:
-
-/* Line 1806 of yacc.c  */
 #line 6318 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -28982,12 +27636,10 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 970:
-
-/* Line 1806 of yacc.c  */
 #line 6332 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -28998,12 +27650,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 971:
-
-/* Line 1806 of yacc.c  */
 #line 6343 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -29014,12 +27664,10 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 972:
-
-/* Line 1806 of yacc.c  */
 #line 6357 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -29030,12 +27678,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 973:
-
-/* Line 1806 of yacc.c  */
 #line 6368 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -29046,12 +27692,10 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 974:
-
-/* Line 1806 of yacc.c  */
 #line 6382 "gram.y"
     {
 				   ereport(ERROR,
@@ -29059,90 +27703,68 @@
 							errmsg("missing argument"),
 							errhint("Use NONE to denote the missing argument of a unary operator."),
 							parser_errposition((yylsp[(3) - (3)]))));
-				}
+				;}
     break;
 
   case 975:
-
-/* Line 1806 of yacc.c  */
 #line 6390 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), (yyvsp[(4) - (5)].typnam)); }
+    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), (yyvsp[(4) - (5)].typnam)); ;}
     break;
 
   case 976:
-
-/* Line 1806 of yacc.c  */
 #line 6392 "gram.y"
-    { (yyval.list) = list_make2(NULL, (yyvsp[(4) - (5)].typnam)); }
+    { (yyval.list) = list_make2(NULL, (yyvsp[(4) - (5)].typnam)); ;}
     break;
 
   case 977:
-
-/* Line 1806 of yacc.c  */
 #line 6394 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), NULL); }
+    { (yyval.list) = list_make2((yyvsp[(2) - (5)].typnam), NULL); ;}
     break;
 
   case 978:
-
-/* Line 1806 of yacc.c  */
 #line 6399 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 979:
-
-/* Line 1806 of yacc.c  */
 #line 6401 "gram.y"
-    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 980:
-
-/* Line 1806 of yacc.c  */
 #line 6414 "gram.y"
     {
 					DoStmt *n = makeNode(DoStmt);
 					n->args = (yyvsp[(2) - (2)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 981:
-
-/* Line 1806 of yacc.c  */
 #line 6422 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 982:
-
-/* Line 1806 of yacc.c  */
 #line 6423 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 983:
-
-/* Line 1806 of yacc.c  */
 #line 6428 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("as", (Node *)makeString((yyvsp[(1) - (1)].str)));
-				}
+				;}
     break;
 
   case 984:
-
-/* Line 1806 of yacc.c  */
 #line 6432 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("language", (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 985:
-
-/* Line 1806 of yacc.c  */
 #line 6445 "gram.y"
     {
 					CreateCastStmt *n = makeNode(CreateCastStmt);
@@ -29152,12 +27774,10 @@
 					n->context = (CoercionContext) (yyvsp[(11) - (11)].ival);
 					n->inout = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 986:
-
-/* Line 1806 of yacc.c  */
 #line 6456 "gram.y"
     {
 					CreateCastStmt *n = makeNode(CreateCastStmt);
@@ -29167,12 +27787,10 @@
 					n->context = (CoercionContext) (yyvsp[(10) - (10)].ival);
 					n->inout = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 987:
-
-/* Line 1806 of yacc.c  */
 #line 6467 "gram.y"
     {
 					CreateCastStmt *n = makeNode(CreateCastStmt);
@@ -29182,33 +27800,25 @@
 					n->context = (CoercionContext) (yyvsp[(10) - (10)].ival);
 					n->inout = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 988:
-
-/* Line 1806 of yacc.c  */
 #line 6478 "gram.y"
-    { (yyval.ival) = COERCION_IMPLICIT; }
+    { (yyval.ival) = COERCION_IMPLICIT; ;}
     break;
 
   case 989:
-
-/* Line 1806 of yacc.c  */
 #line 6479 "gram.y"
-    { (yyval.ival) = COERCION_ASSIGNMENT; }
+    { (yyval.ival) = COERCION_ASSIGNMENT; ;}
     break;
 
   case 990:
-
-/* Line 1806 of yacc.c  */
 #line 6480 "gram.y"
-    { (yyval.ival) = COERCION_EXPLICIT; }
+    { (yyval.ival) = COERCION_EXPLICIT; ;}
     break;
 
   case 991:
-
-/* Line 1806 of yacc.c  */
 #line 6485 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -29219,26 +27829,20 @@
 					n->missing_ok = (yyvsp[(3) - (9)].boolean);
 					n->concurrent = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 992:
-
-/* Line 1806 of yacc.c  */
 #line 6497 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 993:
-
-/* Line 1806 of yacc.c  */
 #line 6498 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 994:
-
-/* Line 1806 of yacc.c  */
 #line 6513 "gram.y"
     {
 					ReindexStmt *n = makeNode(ReindexStmt);
@@ -29246,12 +27850,10 @@
 					n->relation = (yyvsp[(3) - (4)].range);
 					n->name = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 995:
-
-/* Line 1806 of yacc.c  */
 #line 6521 "gram.y"
     {
 					ReindexStmt *n = makeNode(ReindexStmt);
@@ -29261,12 +27863,10 @@
 					n->do_system = true;
 					n->do_user = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 996:
-
-/* Line 1806 of yacc.c  */
 #line 6531 "gram.y"
     {
 					ReindexStmt *n = makeNode(ReindexStmt);
@@ -29276,40 +27876,30 @@
 					n->do_system = true;
 					n->do_user = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 997:
-
-/* Line 1806 of yacc.c  */
 #line 6543 "gram.y"
-    { (yyval.objtype) = OBJECT_INDEX; }
+    { (yyval.objtype) = OBJECT_INDEX; ;}
     break;
 
   case 998:
-
-/* Line 1806 of yacc.c  */
 #line 6544 "gram.y"
-    { (yyval.objtype) = OBJECT_TABLE; }
+    { (yyval.objtype) = OBJECT_TABLE; ;}
     break;
 
   case 999:
-
-/* Line 1806 of yacc.c  */
 #line 6547 "gram.y"
-    {  (yyval.boolean) = TRUE; }
+    {  (yyval.boolean) = TRUE; ;}
     break;
 
   case 1000:
-
-/* Line 1806 of yacc.c  */
 #line 6548 "gram.y"
-    {  (yyval.boolean) = FALSE; }
+    {  (yyval.boolean) = FALSE; ;}
     break;
 
   case 1001:
-
-/* Line 1806 of yacc.c  */
 #line 6559 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29319,12 +27909,10 @@
 					n->newname = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1002:
-
-/* Line 1806 of yacc.c  */
 #line 6569 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29333,12 +27921,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1003:
-
-/* Line 1806 of yacc.c  */
 #line 6578 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29347,12 +27933,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1004:
-
-/* Line 1806 of yacc.c  */
 #line 6587 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29361,12 +27945,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1005:
-
-/* Line 1806 of yacc.c  */
 #line 6596 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29375,12 +27957,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1006:
-
-/* Line 1806 of yacc.c  */
 #line 6605 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29390,12 +27970,10 @@
 					n->subname = (yyvsp[(6) - (8)].str);
 					n->newname = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1007:
-
-/* Line 1806 of yacc.c  */
 #line 6615 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29404,12 +27982,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1008:
-
-/* Line 1806 of yacc.c  */
 #line 6624 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29419,12 +27995,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1009:
-
-/* Line 1806 of yacc.c  */
 #line 6634 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29433,12 +28007,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1010:
-
-/* Line 1806 of yacc.c  */
 #line 6643 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29447,12 +28019,10 @@
 					n->newname = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1011:
-
-/* Line 1806 of yacc.c  */
 #line 6652 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29462,12 +28032,10 @@
 					n->newname = (yyvsp[(9) - (9)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1012:
-
-/* Line 1806 of yacc.c  */
 #line 6662 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29477,12 +28045,10 @@
 					n->newname = (yyvsp[(9) - (9)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1013:
-
-/* Line 1806 of yacc.c  */
 #line 6672 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29491,12 +28057,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1014:
-
-/* Line 1806 of yacc.c  */
 #line 6681 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29505,12 +28069,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1015:
-
-/* Line 1806 of yacc.c  */
 #line 6690 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29520,12 +28082,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1016:
-
-/* Line 1806 of yacc.c  */
 #line 6700 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29535,12 +28095,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1017:
-
-/* Line 1806 of yacc.c  */
 #line 6710 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29550,12 +28108,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1018:
-
-/* Line 1806 of yacc.c  */
 #line 6720 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29565,12 +28121,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1019:
-
-/* Line 1806 of yacc.c  */
 #line 6730 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29580,12 +28134,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1020:
-
-/* Line 1806 of yacc.c  */
 #line 6740 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29595,12 +28147,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1021:
-
-/* Line 1806 of yacc.c  */
 #line 6750 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29610,12 +28160,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1022:
-
-/* Line 1806 of yacc.c  */
 #line 6760 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29625,12 +28173,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1023:
-
-/* Line 1806 of yacc.c  */
 #line 6770 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29640,12 +28186,10 @@
 					n->newname = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1024:
-
-/* Line 1806 of yacc.c  */
 #line 6780 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29655,12 +28199,10 @@
 					n->newname = (yyvsp[(9) - (9)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1025:
-
-/* Line 1806 of yacc.c  */
 #line 6790 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29671,12 +28213,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1026:
-
-/* Line 1806 of yacc.c  */
 #line 6801 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29687,12 +28227,10 @@
 					n->newname = (yyvsp[(10) - (10)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1027:
-
-/* Line 1806 of yacc.c  */
 #line 6812 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29702,12 +28240,10 @@
 					n->subname = (yyvsp[(6) - (8)].str);
 					n->newname = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1028:
-
-/* Line 1806 of yacc.c  */
 #line 6822 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29718,12 +28254,10 @@
 					n->newname = (yyvsp[(9) - (9)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1029:
-
-/* Line 1806 of yacc.c  */
 #line 6833 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29734,12 +28268,10 @@
 					n->newname = (yyvsp[(11) - (11)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1030:
-
-/* Line 1806 of yacc.c  */
 #line 6844 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29749,12 +28281,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1031:
-
-/* Line 1806 of yacc.c  */
 #line 6854 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29763,12 +28293,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1032:
-
-/* Line 1806 of yacc.c  */
 #line 6863 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29777,12 +28305,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1033:
-
-/* Line 1806 of yacc.c  */
 #line 6872 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29791,12 +28317,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1034:
-
-/* Line 1806 of yacc.c  */
 #line 6881 "gram.y"
     {
 					AlterTableSpaceOptionsStmt *n =
@@ -29805,12 +28329,10 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->isReset = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1035:
-
-/* Line 1806 of yacc.c  */
 #line 6890 "gram.y"
     {
 					AlterTableSpaceOptionsStmt *n =
@@ -29819,12 +28341,10 @@
 					n->options = (yyvsp[(5) - (5)].list);
 					n->isReset = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1036:
-
-/* Line 1806 of yacc.c  */
 #line 6899 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29833,12 +28353,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1037:
-
-/* Line 1806 of yacc.c  */
 #line 6908 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29847,12 +28365,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1038:
-
-/* Line 1806 of yacc.c  */
 #line 6917 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29861,12 +28377,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1039:
-
-/* Line 1806 of yacc.c  */
 #line 6926 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29875,12 +28389,10 @@
 					n->newname = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1040:
-
-/* Line 1806 of yacc.c  */
 #line 6935 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29889,12 +28401,10 @@
 					n->newname = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1041:
-
-/* Line 1806 of yacc.c  */
 #line 6944 "gram.y"
     {
 					RenameStmt *n = makeNode(RenameStmt);
@@ -29906,40 +28416,30 @@
 					n->behavior = (yyvsp[(9) - (9)].dbehavior);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1042:
-
-/* Line 1806 of yacc.c  */
 #line 6957 "gram.y"
-    { (yyval.ival) = COLUMN; }
+    { (yyval.ival) = COLUMN; ;}
     break;
 
   case 1043:
-
-/* Line 1806 of yacc.c  */
 #line 6958 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1044:
-
-/* Line 1806 of yacc.c  */
 #line 6961 "gram.y"
-    { (yyval.ival) = 1; }
+    { (yyval.ival) = 1; ;}
     break;
 
   case 1045:
-
-/* Line 1806 of yacc.c  */
 #line 6962 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1046:
-
-/* Line 1806 of yacc.c  */
 #line 6973 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -29949,12 +28449,10 @@
 					n->newschema = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1047:
-
-/* Line 1806 of yacc.c  */
 #line 6983 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -29963,12 +28461,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1048:
-
-/* Line 1806 of yacc.c  */
 #line 6992 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -29977,12 +28473,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1049:
-
-/* Line 1806 of yacc.c  */
 #line 7001 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -29991,12 +28485,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1050:
-
-/* Line 1806 of yacc.c  */
 #line 7010 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30005,12 +28497,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1051:
-
-/* Line 1806 of yacc.c  */
 #line 7019 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30020,12 +28510,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1052:
-
-/* Line 1806 of yacc.c  */
 #line 7029 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30035,12 +28523,10 @@
 					n->newschema = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1053:
-
-/* Line 1806 of yacc.c  */
 #line 7039 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30050,12 +28536,10 @@
 					n->newschema = (yyvsp[(9) - (9)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1054:
-
-/* Line 1806 of yacc.c  */
 #line 7049 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30065,12 +28549,10 @@
 					n->newschema = (yyvsp[(9) - (9)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1055:
-
-/* Line 1806 of yacc.c  */
 #line 7059 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30079,12 +28561,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1056:
-
-/* Line 1806 of yacc.c  */
 #line 7068 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30093,12 +28573,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1057:
-
-/* Line 1806 of yacc.c  */
 #line 7077 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30107,12 +28585,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1058:
-
-/* Line 1806 of yacc.c  */
 #line 7086 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30121,12 +28597,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1059:
-
-/* Line 1806 of yacc.c  */
 #line 7095 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30135,12 +28609,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1060:
-
-/* Line 1806 of yacc.c  */
 #line 7104 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30149,12 +28621,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1061:
-
-/* Line 1806 of yacc.c  */
 #line 7113 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30163,12 +28633,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1062:
-
-/* Line 1806 of yacc.c  */
 #line 7122 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30177,12 +28645,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1063:
-
-/* Line 1806 of yacc.c  */
 #line 7131 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30191,12 +28657,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1064:
-
-/* Line 1806 of yacc.c  */
 #line 7140 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30205,12 +28669,10 @@
 					n->newschema = (yyvsp[(8) - (8)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1065:
-
-/* Line 1806 of yacc.c  */
 #line 7149 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30219,12 +28681,10 @@
 					n->newschema = (yyvsp[(7) - (7)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1066:
-
-/* Line 1806 of yacc.c  */
 #line 7158 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30233,12 +28693,10 @@
 					n->newschema = (yyvsp[(9) - (9)].str);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1067:
-
-/* Line 1806 of yacc.c  */
 #line 7167 "gram.y"
     {
 					AlterObjectSchemaStmt *n = makeNode(AlterObjectSchemaStmt);
@@ -30247,12 +28705,10 @@
 					n->newschema = (yyvsp[(6) - (6)].str);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1068:
-
-/* Line 1806 of yacc.c  */
 #line 7184 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30261,12 +28717,10 @@
 					n->objarg = (yyvsp[(4) - (7)].list);
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1069:
-
-/* Line 1806 of yacc.c  */
 #line 7193 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30274,12 +28728,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1070:
-
-/* Line 1806 of yacc.c  */
 #line 7201 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30287,12 +28739,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1071:
-
-/* Line 1806 of yacc.c  */
 #line 7209 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30300,12 +28750,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1072:
-
-/* Line 1806 of yacc.c  */
 #line 7217 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30313,12 +28761,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1073:
-
-/* Line 1806 of yacc.c  */
 #line 7225 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30327,12 +28773,10 @@
 					n->objarg = (yyvsp[(3) - (6)].funwithargs)->funcargs;
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1074:
-
-/* Line 1806 of yacc.c  */
 #line 7234 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30340,12 +28784,10 @@
 					n->object = list_make1(makeString((yyvsp[(4) - (7)].str)));
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1075:
-
-/* Line 1806 of yacc.c  */
 #line 7242 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30353,12 +28795,10 @@
 					n->object = list_make1((yyvsp[(4) - (7)].value));
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1076:
-
-/* Line 1806 of yacc.c  */
 #line 7250 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30367,12 +28807,10 @@
 					n->objarg = (yyvsp[(4) - (7)].list);
 					n->newowner = (yyvsp[(7) - (7)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1077:
-
-/* Line 1806 of yacc.c  */
 #line 7259 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30381,12 +28819,10 @@
 					n->addname = (yyvsp[(6) - (9)].str);
 					n->newowner = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1078:
-
-/* Line 1806 of yacc.c  */
 #line 7268 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30395,12 +28831,10 @@
 					n->addname = (yyvsp[(6) - (9)].str);
 					n->newowner = (yyvsp[(9) - (9)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1079:
-
-/* Line 1806 of yacc.c  */
 #line 7277 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30408,12 +28842,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1080:
-
-/* Line 1806 of yacc.c  */
 #line 7285 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30421,12 +28853,10 @@
 					n->object = (yyvsp[(3) - (6)].list);
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1081:
-
-/* Line 1806 of yacc.c  */
 #line 7293 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30434,12 +28864,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1082:
-
-/* Line 1806 of yacc.c  */
 #line 7301 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30447,12 +28875,10 @@
 					n->object = (yyvsp[(5) - (8)].list);
 					n->newowner = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1083:
-
-/* Line 1806 of yacc.c  */
 #line 7309 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30460,12 +28886,10 @@
 					n->object = (yyvsp[(5) - (8)].list);
 					n->newowner = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1084:
-
-/* Line 1806 of yacc.c  */
 #line 7317 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30473,12 +28897,10 @@
 					n->object = list_make1(makeString((yyvsp[(5) - (8)].str)));
 					n->newowner = (yyvsp[(8) - (8)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1085:
-
-/* Line 1806 of yacc.c  */
 #line 7325 "gram.y"
     {
 					AlterOwnerStmt *n = makeNode(AlterOwnerStmt);
@@ -30486,12 +28908,10 @@
 					n->object = list_make1(makeString((yyvsp[(3) - (6)].str)));
 					n->newowner = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1086:
-
-/* Line 1806 of yacc.c  */
 #line 7344 "gram.y"
     {
 					RuleStmt *n = makeNode(RuleStmt);
@@ -30503,118 +28923,88 @@
 					n->instead = (yyvsp[(12) - (13)].boolean);
 					n->actions = (yyvsp[(13) - (13)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1087:
-
-/* Line 1806 of yacc.c  */
 #line 7358 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1088:
-
-/* Line 1806 of yacc.c  */
 #line 7359 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1089:
-
-/* Line 1806 of yacc.c  */
 #line 7360 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1090:
-
-/* Line 1806 of yacc.c  */
 #line 7366 "gram.y"
     { if ((yyvsp[(3) - (3)].node) != NULL)
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
 				  else
 					(yyval.list) = (yyvsp[(1) - (3)].list);
-				}
+				;}
     break;
 
   case 1091:
-
-/* Line 1806 of yacc.c  */
 #line 7372 "gram.y"
     { if ((yyvsp[(1) - (1)].node) != NULL)
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
 				  else
 					(yyval.list) = NIL;
-				}
+				;}
     break;
 
   case 1097:
-
-/* Line 1806 of yacc.c  */
 #line 7388 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1098:
-
-/* Line 1806 of yacc.c  */
 #line 7389 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1099:
-
-/* Line 1806 of yacc.c  */
 #line 7392 "gram.y"
-    { (yyval.ival) = CMD_SELECT; }
+    { (yyval.ival) = CMD_SELECT; ;}
     break;
 
   case 1100:
-
-/* Line 1806 of yacc.c  */
 #line 7393 "gram.y"
-    { (yyval.ival) = CMD_UPDATE; }
+    { (yyval.ival) = CMD_UPDATE; ;}
     break;
 
   case 1101:
-
-/* Line 1806 of yacc.c  */
 #line 7394 "gram.y"
-    { (yyval.ival) = CMD_DELETE; }
+    { (yyval.ival) = CMD_DELETE; ;}
     break;
 
   case 1102:
-
-/* Line 1806 of yacc.c  */
 #line 7395 "gram.y"
-    { (yyval.ival) = CMD_INSERT; }
+    { (yyval.ival) = CMD_INSERT; ;}
     break;
 
   case 1103:
-
-/* Line 1806 of yacc.c  */
 #line 7399 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1104:
-
-/* Line 1806 of yacc.c  */
 #line 7400 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1105:
-
-/* Line 1806 of yacc.c  */
 #line 7401 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1106:
-
-/* Line 1806 of yacc.c  */
 #line 7407 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -30625,12 +29015,10 @@
 					n->missing_ok = false;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1107:
-
-/* Line 1806 of yacc.c  */
 #line 7418 "gram.y"
     {
 					DropStmt *n = makeNode(DropStmt);
@@ -30641,143 +29029,117 @@
 					n->missing_ok = true;
 					n->concurrent = false;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1108:
-
-/* Line 1806 of yacc.c  */
 #line 7440 "gram.y"
     {
 					NotifyStmt *n = makeNode(NotifyStmt);
 					n->conditionname = (yyvsp[(2) - (3)].str);
 					n->payload = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1109:
-
-/* Line 1806 of yacc.c  */
 #line 7449 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 1110:
-
-/* Line 1806 of yacc.c  */
 #line 7450 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 1111:
-
-/* Line 1806 of yacc.c  */
 #line 7454 "gram.y"
     {
 					ListenStmt *n = makeNode(ListenStmt);
 					n->conditionname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1112:
-
-/* Line 1806 of yacc.c  */
 #line 7463 "gram.y"
     {
 					UnlistenStmt *n = makeNode(UnlistenStmt);
 					n->conditionname = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1113:
-
-/* Line 1806 of yacc.c  */
 #line 7469 "gram.y"
     {
 					UnlistenStmt *n = makeNode(UnlistenStmt);
 					n->conditionname = NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1114:
-
-/* Line 1806 of yacc.c  */
 #line 7488 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_ROLLBACK;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1115:
-
-/* Line 1806 of yacc.c  */
 #line 7495 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_BEGIN;
 					n->options = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1116:
-
-/* Line 1806 of yacc.c  */
 #line 7502 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_START;
 					n->options = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1117:
-
-/* Line 1806 of yacc.c  */
 #line 7509 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_COMMIT;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1118:
-
-/* Line 1806 of yacc.c  */
 #line 7516 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_COMMIT;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1119:
-
-/* Line 1806 of yacc.c  */
 #line 7523 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_ROLLBACK;
 					n->options = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1120:
-
-/* Line 1806 of yacc.c  */
 #line 7530 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -30785,12 +29147,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(2) - (2)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1121:
-
-/* Line 1806 of yacc.c  */
 #line 7538 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -30798,12 +29158,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(3) - (3)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1122:
-
-/* Line 1806 of yacc.c  */
 #line 7546 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -30811,12 +29169,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(2) - (2)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1123:
-
-/* Line 1806 of yacc.c  */
 #line 7554 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -30824,12 +29180,10 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(5) - (5)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1124:
-
-/* Line 1806 of yacc.c  */
 #line 7562 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
@@ -30837,137 +29191,105 @@
 					n->options = list_make1(makeDefElem("savepoint_name",
 														(Node *)makeString((yyvsp[(4) - (4)].str))));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1125:
-
-/* Line 1806 of yacc.c  */
 #line 7570 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_PREPARE;
 					n->gid = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1126:
-
-/* Line 1806 of yacc.c  */
 #line 7577 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_COMMIT_PREPARED;
 					n->gid = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1127:
-
-/* Line 1806 of yacc.c  */
 #line 7584 "gram.y"
     {
 					TransactionStmt *n = makeNode(TransactionStmt);
 					n->kind = TRANS_STMT_ROLLBACK_PREPARED;
 					n->gid = (yyvsp[(3) - (3)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1128:
-
-/* Line 1806 of yacc.c  */
 #line 7592 "gram.y"
-    {}
+    {;}
     break;
 
   case 1129:
-
-/* Line 1806 of yacc.c  */
 #line 7593 "gram.y"
-    {}
+    {;}
     break;
 
   case 1130:
-
-/* Line 1806 of yacc.c  */
 #line 7594 "gram.y"
-    {}
+    {;}
     break;
 
   case 1131:
-
-/* Line 1806 of yacc.c  */
 #line 7599 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_isolation",
-									   makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)]))); }
+									   makeStringConst((yyvsp[(3) - (3)].str), (yylsp[(3) - (3)]))); ;}
     break;
 
   case 1132:
-
-/* Line 1806 of yacc.c  */
 #line 7602 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_read_only",
-									   makeIntConst(TRUE, (yylsp[(1) - (2)]))); }
+									   makeIntConst(TRUE, (yylsp[(1) - (2)]))); ;}
     break;
 
   case 1133:
-
-/* Line 1806 of yacc.c  */
 #line 7605 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_read_only",
-									   makeIntConst(FALSE, (yylsp[(1) - (2)]))); }
+									   makeIntConst(FALSE, (yylsp[(1) - (2)]))); ;}
     break;
 
   case 1134:
-
-/* Line 1806 of yacc.c  */
 #line 7608 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_deferrable",
-									   makeIntConst(TRUE, (yylsp[(1) - (1)]))); }
+									   makeIntConst(TRUE, (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1135:
-
-/* Line 1806 of yacc.c  */
 #line 7611 "gram.y"
     { (yyval.defelt) = makeDefElem("transaction_deferrable",
-									   makeIntConst(FALSE, (yylsp[(1) - (2)]))); }
+									   makeIntConst(FALSE, (yylsp[(1) - (2)]))); ;}
     break;
 
   case 1136:
-
-/* Line 1806 of yacc.c  */
 #line 7618 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].defelt)); ;}
     break;
 
   case 1137:
-
-/* Line 1806 of yacc.c  */
 #line 7620 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt)); ;}
     break;
 
   case 1138:
-
-/* Line 1806 of yacc.c  */
 #line 7622 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 1140:
-
-/* Line 1806 of yacc.c  */
 #line 7628 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1141:
-
-/* Line 1806 of yacc.c  */
 #line 7642 "gram.y"
     {
 					ViewStmt *n = makeNode(ViewStmt);
@@ -30978,12 +29300,10 @@
 					n->replace = false;
 					n->options = (yyvsp[(6) - (9)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1142:
-
-/* Line 1806 of yacc.c  */
 #line 7654 "gram.y"
     {
 					ViewStmt *n = makeNode(ViewStmt);
@@ -30994,259 +29314,203 @@
 					n->replace = true;
 					n->options = (yyvsp[(8) - (11)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1143:
-
-/* Line 1806 of yacc.c  */
 #line 7668 "gram.y"
     {
 					ereport(ERROR,
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("WITH CHECK OPTION is not implemented")));
-				}
+				;}
     break;
 
   case 1144:
-
-/* Line 1806 of yacc.c  */
 #line 7674 "gram.y"
     {
 					ereport(ERROR,
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("WITH CHECK OPTION is not implemented")));
-				}
+				;}
     break;
 
   case 1145:
-
-/* Line 1806 of yacc.c  */
 #line 7680 "gram.y"
     {
 					ereport(ERROR,
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("WITH CHECK OPTION is not implemented")));
-				}
+				;}
     break;
 
   case 1146:
-
-/* Line 1806 of yacc.c  */
 #line 7685 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1147:
-
-/* Line 1806 of yacc.c  */
 #line 7696 "gram.y"
     {
 					LoadStmt *n = makeNode(LoadStmt);
 					n->filename = (yyvsp[(2) - (2)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1148:
-
-/* Line 1806 of yacc.c  */
 #line 7712 "gram.y"
     {
 					CreatedbStmt *n = makeNode(CreatedbStmt);
 					n->dbname = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1149:
-
-/* Line 1806 of yacc.c  */
 #line 7721 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 1150:
-
-/* Line 1806 of yacc.c  */
 #line 7722 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1151:
-
-/* Line 1806 of yacc.c  */
 #line 7727 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("tablespace", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1152:
-
-/* Line 1806 of yacc.c  */
 #line 7731 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("tablespace", NULL);
-				}
+				;}
     break;
 
   case 1153:
-
-/* Line 1806 of yacc.c  */
 #line 7735 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("location", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1154:
-
-/* Line 1806 of yacc.c  */
 #line 7739 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("location", NULL);
-				}
+				;}
     break;
 
   case 1155:
-
-/* Line 1806 of yacc.c  */
 #line 7743 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("template", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1156:
-
-/* Line 1806 of yacc.c  */
 #line 7747 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("template", NULL);
-				}
+				;}
     break;
 
   case 1157:
-
-/* Line 1806 of yacc.c  */
 #line 7751 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encoding", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1158:
-
-/* Line 1806 of yacc.c  */
 #line 7755 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encoding", (Node *)makeInteger((yyvsp[(3) - (3)].ival)));
-				}
+				;}
     break;
 
   case 1159:
-
-/* Line 1806 of yacc.c  */
 #line 7759 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("encoding", NULL);
-				}
+				;}
     break;
 
   case 1160:
-
-/* Line 1806 of yacc.c  */
 #line 7763 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_collate", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1161:
-
-/* Line 1806 of yacc.c  */
 #line 7767 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_collate", NULL);
-				}
+				;}
     break;
 
   case 1162:
-
-/* Line 1806 of yacc.c  */
 #line 7771 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_ctype", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1163:
-
-/* Line 1806 of yacc.c  */
 #line 7775 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("lc_ctype", NULL);
-				}
+				;}
     break;
 
   case 1164:
-
-/* Line 1806 of yacc.c  */
 #line 7779 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[(4) - (4)].ival)));
-				}
+				;}
     break;
 
   case 1165:
-
-/* Line 1806 of yacc.c  */
 #line 7783 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("owner", (Node *)makeString((yyvsp[(3) - (3)].str)));
-				}
+				;}
     break;
 
   case 1166:
-
-/* Line 1806 of yacc.c  */
 #line 7787 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("owner", NULL);
-				}
+				;}
     break;
 
   case 1167:
-
-/* Line 1806 of yacc.c  */
 #line 7796 "gram.y"
-    {}
+    {;}
     break;
 
   case 1168:
-
-/* Line 1806 of yacc.c  */
 #line 7797 "gram.y"
-    {}
+    {;}
     break;
 
   case 1169:
-
-/* Line 1806 of yacc.c  */
 #line 7809 "gram.y"
     {
 					AlterDatabaseStmt *n = makeNode(AlterDatabaseStmt);
 					n->dbname = (yyvsp[(3) - (5)].str);
 					n->options = (yyvsp[(5) - (5)].list);
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 1170:
-
-/* Line 1806 of yacc.c  */
 #line 7816 "gram.y"
     {
 					AlterDatabaseStmt *n = makeNode(AlterDatabaseStmt);
@@ -31254,71 +29518,57 @@
 					n->options = list_make1(makeDefElem("tablespace",
 													(Node *)makeString((yyvsp[(6) - (6)].str))));
 					(yyval.node) = (Node *)n;
-				 }
+				 ;}
     break;
 
   case 1171:
-
-/* Line 1806 of yacc.c  */
 #line 7827 "gram.y"
     {
 					AlterDatabaseSetStmt *n = makeNode(AlterDatabaseSetStmt);
 					n->dbname = (yyvsp[(3) - (4)].str);
 					n->setstmt = (yyvsp[(4) - (4)].vsetstmt);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1172:
-
-/* Line 1806 of yacc.c  */
 #line 7837 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 1173:
-
-/* Line 1806 of yacc.c  */
 #line 7838 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1174:
-
-/* Line 1806 of yacc.c  */
 #line 7843 "gram.y"
     {
 					(yyval.defelt) = makeDefElem("connectionlimit", (Node *)makeInteger((yyvsp[(4) - (4)].ival)));
-				}
+				;}
     break;
 
   case 1175:
-
-/* Line 1806 of yacc.c  */
 #line 7857 "gram.y"
     {
 					DropdbStmt *n = makeNode(DropdbStmt);
 					n->dbname = (yyvsp[(3) - (3)].str);
 					n->missing_ok = FALSE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1176:
-
-/* Line 1806 of yacc.c  */
 #line 7864 "gram.y"
     {
 					DropdbStmt *n = makeNode(DropdbStmt);
 					n->dbname = (yyvsp[(5) - (5)].str);
 					n->missing_ok = TRUE;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1177:
-
-/* Line 1806 of yacc.c  */
 #line 7881 "gram.y"
     {
 					CreateDomainStmt *n = makeNode(CreateDomainStmt);
@@ -31327,12 +29577,10 @@
 					SplitColQualList((yyvsp[(6) - (6)].list), &n->constraints, &n->collClause,
 									 yyscanner);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1178:
-
-/* Line 1806 of yacc.c  */
 #line 7894 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -31340,36 +29588,30 @@
 					n->typeName = (yyvsp[(3) - (4)].list);
 					n->def = (yyvsp[(4) - (4)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1179:
-
-/* Line 1806 of yacc.c  */
 #line 7903 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
 					n->subtype = 'N';
 					n->typeName = (yyvsp[(3) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1180:
-
-/* Line 1806 of yacc.c  */
 #line 7911 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
 					n->subtype = 'O';
 					n->typeName = (yyvsp[(3) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1181:
-
-/* Line 1806 of yacc.c  */
 #line 7919 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -31377,12 +29619,10 @@
 					n->typeName = (yyvsp[(3) - (5)].list);
 					n->def = (yyvsp[(5) - (5)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1182:
-
-/* Line 1806 of yacc.c  */
 #line 7928 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -31392,12 +29632,10 @@
 					n->behavior = (yyvsp[(7) - (7)].dbehavior);
 					n->missing_ok = false;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1183:
-
-/* Line 1806 of yacc.c  */
 #line 7939 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -31407,12 +29645,10 @@
 					n->behavior = (yyvsp[(9) - (9)].dbehavior);
 					n->missing_ok = true;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1184:
-
-/* Line 1806 of yacc.c  */
 #line 7950 "gram.y"
     {
 					AlterDomainStmt *n = makeNode(AlterDomainStmt);
@@ -31420,38 +29656,30 @@
 					n->typeName = (yyvsp[(3) - (6)].list);
 					n->name = (yyvsp[(6) - (6)].str);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1185:
-
-/* Line 1806 of yacc.c  */
 #line 7959 "gram.y"
-    {}
+    {;}
     break;
 
   case 1186:
-
-/* Line 1806 of yacc.c  */
 #line 7960 "gram.y"
-    {}
+    {;}
     break;
 
   case 1187:
-
-/* Line 1806 of yacc.c  */
 #line 7972 "gram.y"
     {
 					AlterTSDictionaryStmt *n = makeNode(AlterTSDictionaryStmt);
 					n->dictname = (yyvsp[(5) - (6)].list);
 					n->options = (yyvsp[(6) - (6)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1188:
-
-/* Line 1806 of yacc.c  */
 #line 7982 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -31461,12 +29689,10 @@
 					n->override = false;
 					n->replace = false;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1189:
-
-/* Line 1806 of yacc.c  */
 #line 7992 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -31476,12 +29702,10 @@
 					n->override = true;
 					n->replace = false;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1190:
-
-/* Line 1806 of yacc.c  */
 #line 8002 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -31491,12 +29715,10 @@
 					n->override = false;
 					n->replace = true;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1191:
-
-/* Line 1806 of yacc.c  */
 #line 8012 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -31506,12 +29728,10 @@
 					n->override = false;
 					n->replace = true;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1192:
-
-/* Line 1806 of yacc.c  */
 #line 8022 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -31519,12 +29739,10 @@
 					n->tokentype = (yyvsp[(9) - (9)].list);
 					n->missing_ok = false;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1193:
-
-/* Line 1806 of yacc.c  */
 #line 8030 "gram.y"
     {
 					AlterTSConfigurationStmt *n = makeNode(AlterTSConfigurationStmt);
@@ -31532,12 +29750,10 @@
 					n->tokentype = (yyvsp[(11) - (11)].list);
 					n->missing_ok = true;
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1194:
-
-/* Line 1806 of yacc.c  */
 #line 8052 "gram.y"
     {
 				CreateConversionStmt *n = makeNode(CreateConversionStmt);
@@ -31547,12 +29763,10 @@
 				n->func_name = (yyvsp[(10) - (10)].list);
 				n->def = (yyvsp[(2) - (10)].boolean);
 				(yyval.node) = (Node *)n;
-			}
+			;}
     break;
 
   case 1195:
-
-/* Line 1806 of yacc.c  */
 #line 8074 "gram.y"
     {
 					ClusterStmt *n = makeNode(ClusterStmt);
@@ -31560,12 +29774,10 @@
 					n->indexname = (yyvsp[(4) - (4)].str);
 					n->verbose = (yyvsp[(2) - (4)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1196:
-
-/* Line 1806 of yacc.c  */
 #line 8082 "gram.y"
     {
 					ClusterStmt *n = makeNode(ClusterStmt);
@@ -31573,12 +29785,10 @@
 					n->indexname = NULL;
 					n->verbose = (yyvsp[(2) - (2)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1197:
-
-/* Line 1806 of yacc.c  */
 #line 8091 "gram.y"
     {
 					ClusterStmt *n = makeNode(ClusterStmt);
@@ -31586,26 +29796,20 @@
 					n->indexname = (yyvsp[(3) - (5)].str);
 					n->verbose = (yyvsp[(2) - (5)].boolean);
 					(yyval.node) = (Node*)n;
-				}
+				;}
     break;
 
   case 1198:
-
-/* Line 1806 of yacc.c  */
 #line 8101 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 1199:
-
-/* Line 1806 of yacc.c  */
 #line 8102 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 1200:
-
-/* Line 1806 of yacc.c  */
 #line 8115 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -31619,12 +29823,10 @@
 					n->relation = NULL;
 					n->va_cols = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1201:
-
-/* Line 1806 of yacc.c  */
 #line 8129 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -31638,12 +29840,10 @@
 					n->relation = (yyvsp[(5) - (5)].range);
 					n->va_cols = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1202:
-
-/* Line 1806 of yacc.c  */
 #line 8143 "gram.y"
     {
 					VacuumStmt *n = (VacuumStmt *) (yyvsp[(5) - (5)].node);
@@ -31655,12 +29855,10 @@
 					n->freeze_min_age = (yyvsp[(3) - (5)].boolean) ? 0 : -1;
 					n->freeze_table_age = (yyvsp[(3) - (5)].boolean) ? 0 : -1;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1203:
-
-/* Line 1806 of yacc.c  */
 #line 8155 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -31672,12 +29870,10 @@
 					n->relation = NULL;
 					n->va_cols = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1204:
-
-/* Line 1806 of yacc.c  */
 #line 8167 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -31691,54 +29887,40 @@
 					if (n->va_cols != NIL)	/* implies analyze */
 						n->options |= VACOPT_ANALYZE;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1205:
-
-/* Line 1806 of yacc.c  */
 #line 8183 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (1)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
     break;
 
   case 1206:
-
-/* Line 1806 of yacc.c  */
 #line 8184 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | (yyvsp[(3) - (3)].ival); ;}
     break;
 
   case 1207:
-
-/* Line 1806 of yacc.c  */
 #line 8188 "gram.y"
-    { (yyval.ival) = VACOPT_ANALYZE; }
+    { (yyval.ival) = VACOPT_ANALYZE; ;}
     break;
 
   case 1208:
-
-/* Line 1806 of yacc.c  */
 #line 8189 "gram.y"
-    { (yyval.ival) = VACOPT_VERBOSE; }
+    { (yyval.ival) = VACOPT_VERBOSE; ;}
     break;
 
   case 1209:
-
-/* Line 1806 of yacc.c  */
 #line 8190 "gram.y"
-    { (yyval.ival) = VACOPT_FREEZE; }
+    { (yyval.ival) = VACOPT_FREEZE; ;}
     break;
 
   case 1210:
-
-/* Line 1806 of yacc.c  */
 #line 8191 "gram.y"
-    { (yyval.ival) = VACOPT_FULL; }
+    { (yyval.ival) = VACOPT_FULL; ;}
     break;
 
   case 1211:
-
-/* Line 1806 of yacc.c  */
 #line 8196 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -31750,12 +29932,10 @@
 					n->relation = NULL;
 					n->va_cols = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1212:
-
-/* Line 1806 of yacc.c  */
 #line 8208 "gram.y"
     {
 					VacuumStmt *n = makeNode(VacuumStmt);
@@ -31767,94 +29947,70 @@
 					n->relation = (yyvsp[(3) - (4)].range);
 					n->va_cols = (yyvsp[(4) - (4)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1213:
-
-/* Line 1806 of yacc.c  */
 #line 8222 "gram.y"
-    {}
+    {;}
     break;
 
   case 1214:
-
-/* Line 1806 of yacc.c  */
 #line 8223 "gram.y"
-    {}
+    {;}
     break;
 
   case 1215:
-
-/* Line 1806 of yacc.c  */
 #line 8227 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1216:
-
-/* Line 1806 of yacc.c  */
 #line 8228 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1217:
-
-/* Line 1806 of yacc.c  */
 #line 8231 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1218:
-
-/* Line 1806 of yacc.c  */
 #line 8232 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1219:
-
-/* Line 1806 of yacc.c  */
 #line 8235 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1220:
-
-/* Line 1806 of yacc.c  */
 #line 8236 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1221:
-
-/* Line 1806 of yacc.c  */
 #line 8240 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1222:
-
-/* Line 1806 of yacc.c  */
 #line 8241 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1223:
-
-/* Line 1806 of yacc.c  */
 #line 8255 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
 					n->query = (yyvsp[(2) - (2)].node);
 					n->options = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1224:
-
-/* Line 1806 of yacc.c  */
 #line 8262 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
@@ -31864,98 +30020,76 @@
 						n->options = lappend(n->options,
 											 makeDefElem("verbose", NULL));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1225:
-
-/* Line 1806 of yacc.c  */
 #line 8272 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
 					n->query = (yyvsp[(3) - (3)].node);
 					n->options = list_make1(makeDefElem("verbose", NULL));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1226:
-
-/* Line 1806 of yacc.c  */
 #line 8279 "gram.y"
     {
 					ExplainStmt *n = makeNode(ExplainStmt);
 					n->query = (yyvsp[(5) - (5)].node);
 					n->options = (yyvsp[(3) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1234:
-
-/* Line 1806 of yacc.c  */
 #line 8299 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].defelt));
-				}
+				;}
     break;
 
   case 1235:
-
-/* Line 1806 of yacc.c  */
 #line 8303 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].defelt));
-				}
+				;}
     break;
 
   case 1236:
-
-/* Line 1806 of yacc.c  */
 #line 8310 "gram.y"
     {
 					(yyval.defelt) = makeDefElem((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 1237:
-
-/* Line 1806 of yacc.c  */
 #line 8316 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1238:
-
-/* Line 1806 of yacc.c  */
 #line 8317 "gram.y"
-    { (yyval.str) = "analyze"; }
+    { (yyval.str) = "analyze"; ;}
     break;
 
   case 1239:
-
-/* Line 1806 of yacc.c  */
 #line 8321 "gram.y"
-    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); }
+    { (yyval.node) = (Node *) makeString((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 1240:
-
-/* Line 1806 of yacc.c  */
 #line 8322 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); }
+    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].value); ;}
     break;
 
   case 1241:
-
-/* Line 1806 of yacc.c  */
 #line 8323 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1242:
-
-/* Line 1806 of yacc.c  */
 #line 8334 "gram.y"
     {
 					PrepareStmt *n = makeNode(PrepareStmt);
@@ -31963,38 +30097,30 @@
 					n->argtypes = (yyvsp[(3) - (5)].list);
 					n->query = (yyvsp[(5) - (5)].node);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1243:
-
-/* Line 1806 of yacc.c  */
 #line 8343 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1244:
-
-/* Line 1806 of yacc.c  */
 #line 8344 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1249:
-
-/* Line 1806 of yacc.c  */
 #line 8362 "gram.y"
     {
 					ExecuteStmt *n = makeNode(ExecuteStmt);
 					n->name = (yyvsp[(2) - (3)].str);
 					n->params = (yyvsp[(3) - (3)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1250:
-
-/* Line 1806 of yacc.c  */
 #line 8370 "gram.y"
     {
 					CreateTableAsStmt *ctas = makeNode(CreateTableAsStmt);
@@ -32008,129 +30134,103 @@
 					(yyvsp[(4) - (9)].into)->rel->relpersistence = (yyvsp[(2) - (9)].ival);
 					(yyvsp[(4) - (9)].into)->skipData = !((yyvsp[(9) - (9)].boolean));
 					(yyval.node) = (Node *) ctas;
-				}
+				;}
     break;
 
   case 1251:
-
-/* Line 1806 of yacc.c  */
 #line 8385 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1252:
-
-/* Line 1806 of yacc.c  */
 #line 8386 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1253:
-
-/* Line 1806 of yacc.c  */
 #line 8397 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = (yyvsp[(2) - (2)].str);
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1254:
-
-/* Line 1806 of yacc.c  */
 #line 8403 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = (yyvsp[(3) - (3)].str);
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1255:
-
-/* Line 1806 of yacc.c  */
 #line 8409 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = NULL;
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1256:
-
-/* Line 1806 of yacc.c  */
 #line 8415 "gram.y"
     {
 						DeallocateStmt *n = makeNode(DeallocateStmt);
 						n->name = NULL;
 						(yyval.node) = (Node *) n;
-					}
+					;}
     break;
 
   case 1257:
-
-/* Line 1806 of yacc.c  */
 #line 8431 "gram.y"
     {
 					(yyvsp[(5) - (6)].istmt)->relation = (yyvsp[(4) - (6)].range);
 					(yyvsp[(5) - (6)].istmt)->returningList = (yyvsp[(6) - (6)].list);
 					(yyvsp[(5) - (6)].istmt)->withClause = (yyvsp[(1) - (6)].with);
 					(yyval.node) = (Node *) (yyvsp[(5) - (6)].istmt);
-				}
+				;}
     break;
 
   case 1258:
-
-/* Line 1806 of yacc.c  */
 #line 8441 "gram.y"
     {
 					(yyval.istmt) = makeNode(InsertStmt);
 					(yyval.istmt)->cols = NIL;
 					(yyval.istmt)->selectStmt = (yyvsp[(1) - (1)].node);
-				}
+				;}
     break;
 
   case 1259:
-
-/* Line 1806 of yacc.c  */
 #line 8447 "gram.y"
     {
 					(yyval.istmt) = makeNode(InsertStmt);
 					(yyval.istmt)->cols = (yyvsp[(2) - (4)].list);
 					(yyval.istmt)->selectStmt = (yyvsp[(4) - (4)].node);
-				}
+				;}
     break;
 
   case 1260:
-
-/* Line 1806 of yacc.c  */
 #line 8453 "gram.y"
     {
 					(yyval.istmt) = makeNode(InsertStmt);
 					(yyval.istmt)->cols = NIL;
 					(yyval.istmt)->selectStmt = NULL;
-				}
+				;}
     break;
 
   case 1261:
-
-/* Line 1806 of yacc.c  */
 #line 8462 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1262:
-
-/* Line 1806 of yacc.c  */
 #line 8464 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1263:
-
-/* Line 1806 of yacc.c  */
 #line 8469 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -32138,26 +30238,20 @@
 					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
 					(yyval.target)->val = NULL;
 					(yyval.target)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1264:
-
-/* Line 1806 of yacc.c  */
 #line 8479 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1265:
-
-/* Line 1806 of yacc.c  */
 #line 8480 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1266:
-
-/* Line 1806 of yacc.c  */
 #line 8493 "gram.y"
     {
 					DeleteStmt *n = makeNode(DeleteStmt);
@@ -32167,26 +30261,20 @@
 					n->returningList = (yyvsp[(7) - (7)].list);
 					n->withClause = (yyvsp[(1) - (7)].with);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1267:
-
-/* Line 1806 of yacc.c  */
 #line 8505 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1268:
-
-/* Line 1806 of yacc.c  */
 #line 8506 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1269:
-
-/* Line 1806 of yacc.c  */
 #line 8518 "gram.y"
     {
 					LockStmt *n = makeNode(LockStmt);
@@ -32195,96 +30283,70 @@
 					n->mode = (yyvsp[(4) - (5)].ival);
 					n->nowait = (yyvsp[(5) - (5)].boolean);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1270:
-
-/* Line 1806 of yacc.c  */
 #line 8528 "gram.y"
-    { (yyval.ival) = (yyvsp[(2) - (3)].ival); }
+    { (yyval.ival) = (yyvsp[(2) - (3)].ival); ;}
     break;
 
   case 1271:
-
-/* Line 1806 of yacc.c  */
 #line 8529 "gram.y"
-    { (yyval.ival) = AccessExclusiveLock; }
+    { (yyval.ival) = AccessExclusiveLock; ;}
     break;
 
   case 1272:
-
-/* Line 1806 of yacc.c  */
 #line 8532 "gram.y"
-    { (yyval.ival) = AccessShareLock; }
+    { (yyval.ival) = AccessShareLock; ;}
     break;
 
   case 1273:
-
-/* Line 1806 of yacc.c  */
 #line 8533 "gram.y"
-    { (yyval.ival) = RowShareLock; }
+    { (yyval.ival) = RowShareLock; ;}
     break;
 
   case 1274:
-
-/* Line 1806 of yacc.c  */
 #line 8534 "gram.y"
-    { (yyval.ival) = RowExclusiveLock; }
+    { (yyval.ival) = RowExclusiveLock; ;}
     break;
 
   case 1275:
-
-/* Line 1806 of yacc.c  */
 #line 8535 "gram.y"
-    { (yyval.ival) = ShareUpdateExclusiveLock; }
+    { (yyval.ival) = ShareUpdateExclusiveLock; ;}
     break;
 
   case 1276:
-
-/* Line 1806 of yacc.c  */
 #line 8536 "gram.y"
-    { (yyval.ival) = ShareLock; }
+    { (yyval.ival) = ShareLock; ;}
     break;
 
   case 1277:
-
-/* Line 1806 of yacc.c  */
 #line 8537 "gram.y"
-    { (yyval.ival) = ShareRowExclusiveLock; }
+    { (yyval.ival) = ShareRowExclusiveLock; ;}
     break;
 
   case 1278:
-
-/* Line 1806 of yacc.c  */
 #line 8538 "gram.y"
-    { (yyval.ival) = ExclusiveLock; }
+    { (yyval.ival) = ExclusiveLock; ;}
     break;
 
   case 1279:
-
-/* Line 1806 of yacc.c  */
 #line 8539 "gram.y"
-    { (yyval.ival) = AccessExclusiveLock; }
+    { (yyval.ival) = AccessExclusiveLock; ;}
     break;
 
   case 1280:
-
-/* Line 1806 of yacc.c  */
 #line 8542 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1281:
-
-/* Line 1806 of yacc.c  */
 #line 8543 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1282:
-
-/* Line 1806 of yacc.c  */
 #line 8559 "gram.y"
     {
 					UpdateStmt *n = makeNode(UpdateStmt);
@@ -32295,50 +30357,38 @@
 					n->returningList = (yyvsp[(8) - (8)].list);
 					n->withClause = (yyvsp[(1) - (8)].with);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1283:
-
-/* Line 1806 of yacc.c  */
 #line 8572 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1284:
-
-/* Line 1806 of yacc.c  */
 #line 8573 "gram.y"
-    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); }
+    { (yyval.list) = list_concat((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].list)); ;}
     break;
 
   case 1285:
-
-/* Line 1806 of yacc.c  */
 #line 8577 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1286:
-
-/* Line 1806 of yacc.c  */
 #line 8578 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1287:
-
-/* Line 1806 of yacc.c  */
 #line 8583 "gram.y"
     {
 					(yyval.target) = (yyvsp[(1) - (3)].target);
 					(yyval.target)->val = (Node *) (yyvsp[(3) - (3)].node);
-				}
+				;}
     break;
 
   case 1288:
-
-/* Line 1806 of yacc.c  */
 #line 8591 "gram.y"
     {
 					ListCell *col_cell;
@@ -32363,12 +30413,10 @@
 					}
 
 					(yyval.list) = (yyvsp[(2) - (5)].list);
-				}
+				;}
     break;
 
   case 1289:
-
-/* Line 1806 of yacc.c  */
 #line 8619 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -32376,26 +30424,20 @@
 					(yyval.target)->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
 					(yyval.target)->val = NULL;	/* upper production sets this */
 					(yyval.target)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1290:
-
-/* Line 1806 of yacc.c  */
 #line 8629 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1291:
-
-/* Line 1806 of yacc.c  */
 #line 8630 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list),(yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1292:
-
-/* Line 1806 of yacc.c  */
 #line 8641 "gram.y"
     {
 					DeclareCursorStmt *n = makeNode(DeclareCursorStmt);
@@ -32404,108 +30446,80 @@
 					n->options = (yyvsp[(3) - (7)].ival) | (yyvsp[(5) - (7)].ival) | CURSOR_OPT_FAST_PLAN;
 					n->query = (yyvsp[(7) - (7)].node);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1293:
-
-/* Line 1806 of yacc.c  */
 #line 8651 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1294:
-
-/* Line 1806 of yacc.c  */
 #line 8654 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1295:
-
-/* Line 1806 of yacc.c  */
 #line 8655 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | CURSOR_OPT_NO_SCROLL; }
+    { (yyval.ival) = (yyvsp[(1) - (3)].ival) | CURSOR_OPT_NO_SCROLL; ;}
     break;
 
   case 1296:
-
-/* Line 1806 of yacc.c  */
 #line 8656 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_SCROLL; }
+    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_SCROLL; ;}
     break;
 
   case 1297:
-
-/* Line 1806 of yacc.c  */
 #line 8657 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_BINARY; }
+    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_BINARY; ;}
     break;
 
   case 1298:
-
-/* Line 1806 of yacc.c  */
 #line 8658 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_INSENSITIVE; }
+    { (yyval.ival) = (yyvsp[(1) - (2)].ival) | CURSOR_OPT_INSENSITIVE; ;}
     break;
 
   case 1299:
-
-/* Line 1806 of yacc.c  */
 #line 8661 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1300:
-
-/* Line 1806 of yacc.c  */
 #line 8662 "gram.y"
-    { (yyval.ival) = CURSOR_OPT_HOLD; }
+    { (yyval.ival) = CURSOR_OPT_HOLD; ;}
     break;
 
   case 1301:
-
-/* Line 1806 of yacc.c  */
 #line 8663 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1304:
-
-/* Line 1806 of yacc.c  */
 #line 8716 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1305:
-
-/* Line 1806 of yacc.c  */
 #line 8717 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1306:
-
-/* Line 1806 of yacc.c  */
 #line 8731 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1307:
-
-/* Line 1806 of yacc.c  */
 #line 8733 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].list), NIL,
 										NULL, NULL, NULL,
 										yyscanner);
 					(yyval.node) = (yyvsp[(1) - (2)].node);
-				}
+				;}
     break;
 
   case 1308:
-
-/* Line 1806 of yacc.c  */
 #line 8740 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(3) - (4)].list),
@@ -32513,12 +30527,10 @@
 										NULL,
 										yyscanner);
 					(yyval.node) = (yyvsp[(1) - (4)].node);
-				}
+				;}
     break;
 
   case 1309:
-
-/* Line 1806 of yacc.c  */
 #line 8748 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].list), (yyvsp[(4) - (4)].list),
@@ -32526,12 +30538,10 @@
 										NULL,
 										yyscanner);
 					(yyval.node) = (yyvsp[(1) - (4)].node);
-				}
+				;}
     break;
 
   case 1310:
-
-/* Line 1806 of yacc.c  */
 #line 8756 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (2)].node), NULL, NIL,
@@ -32539,12 +30549,10 @@
 										(yyvsp[(1) - (2)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (2)].node);
-				}
+				;}
     break;
 
   case 1311:
-
-/* Line 1806 of yacc.c  */
 #line 8764 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].list), NIL,
@@ -32552,12 +30560,10 @@
 										(yyvsp[(1) - (3)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (3)].node);
-				}
+				;}
     break;
 
   case 1312:
-
-/* Line 1806 of yacc.c  */
 #line 8772 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(4) - (5)].list),
@@ -32565,12 +30571,10 @@
 										(yyvsp[(1) - (5)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (5)].node);
-				}
+				;}
     break;
 
   case 1313:
-
-/* Line 1806 of yacc.c  */
 #line 8780 "gram.y"
     {
 					insertSelectOptions((SelectStmt *) (yyvsp[(2) - (5)].node), (yyvsp[(3) - (5)].list), (yyvsp[(5) - (5)].list),
@@ -32578,26 +30582,20 @@
 										(yyvsp[(1) - (5)].with),
 										yyscanner);
 					(yyval.node) = (yyvsp[(2) - (5)].node);
-				}
+				;}
     break;
 
   case 1314:
-
-/* Line 1806 of yacc.c  */
 #line 8790 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1315:
-
-/* Line 1806 of yacc.c  */
 #line 8791 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1316:
-
-/* Line 1806 of yacc.c  */
 #line 8821 "gram.y"
     {
 					SelectStmt *n = makeNode(SelectStmt);
@@ -32610,19 +30608,15 @@
 					n->havingClause = (yyvsp[(8) - (9)].node);
 					n->windowClause = (yyvsp[(9) - (9)].list);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1317:
-
-/* Line 1806 of yacc.c  */
 #line 8833 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1318:
-
-/* Line 1806 of yacc.c  */
 #line 8835 "gram.y"
     {
 					/* same as SELECT * FROM relation_expr */
@@ -32641,77 +30635,61 @@
 					n->targetList = list_make1(rt);
 					n->fromClause = list_make1((yyvsp[(2) - (2)].range));
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1319:
-
-/* Line 1806 of yacc.c  */
 #line 8854 "gram.y"
     {
 					(yyval.node) = makeSetOp(SETOP_UNION, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1320:
-
-/* Line 1806 of yacc.c  */
 #line 8858 "gram.y"
     {
 					(yyval.node) = makeSetOp(SETOP_INTERSECT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1321:
-
-/* Line 1806 of yacc.c  */
 #line 8862 "gram.y"
     {
 					(yyval.node) = makeSetOp(SETOP_EXCEPT, (yyvsp[(3) - (4)].boolean), (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1322:
-
-/* Line 1806 of yacc.c  */
 #line 8877 "gram.y"
     {
 				(yyval.with) = makeNode(WithClause);
 				(yyval.with)->ctes = (yyvsp[(2) - (2)].list);
 				(yyval.with)->recursive = false;
 				(yyval.with)->location = (yylsp[(1) - (2)]);
-			}
+			;}
     break;
 
   case 1323:
-
-/* Line 1806 of yacc.c  */
 #line 8884 "gram.y"
     {
 				(yyval.with) = makeNode(WithClause);
 				(yyval.with)->ctes = (yyvsp[(3) - (3)].list);
 				(yyval.with)->recursive = true;
 				(yyval.with)->location = (yylsp[(1) - (3)]);
-			}
+			;}
     break;
 
   case 1324:
-
-/* Line 1806 of yacc.c  */
 #line 8893 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1325:
-
-/* Line 1806 of yacc.c  */
 #line 8894 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1326:
-
-/* Line 1806 of yacc.c  */
 #line 8898 "gram.y"
     {
 				CommonTableExpr *n = makeNode(CommonTableExpr);
@@ -32720,26 +30698,20 @@
 				n->ctequery = (yyvsp[(5) - (6)].node);
 				n->location = (yylsp[(1) - (6)]);
 				(yyval.node) = (Node *) n;
-			}
+			;}
     break;
 
   case 1327:
-
-/* Line 1806 of yacc.c  */
 #line 8909 "gram.y"
-    { (yyval.with) = (yyvsp[(1) - (1)].with); }
+    { (yyval.with) = (yyvsp[(1) - (1)].with); ;}
     break;
 
   case 1328:
-
-/* Line 1806 of yacc.c  */
 #line 8910 "gram.y"
-    { (yyval.with) = NULL; }
+    { (yyval.with) = NULL; ;}
     break;
 
   case 1329:
-
-/* Line 1806 of yacc.c  */
 #line 8915 "gram.y"
     {
 					(yyval.into) = makeNode(IntoClause);
@@ -32749,59 +30721,47 @@
 					(yyval.into)->onCommit = ONCOMMIT_NOOP;
 					(yyval.into)->tableSpaceName = NULL;
 					(yyval.into)->skipData = false;
-				}
+				;}
     break;
 
   case 1330:
-
-/* Line 1806 of yacc.c  */
 #line 8925 "gram.y"
-    { (yyval.into) = NULL; }
+    { (yyval.into) = NULL; ;}
     break;
 
   case 1331:
-
-/* Line 1806 of yacc.c  */
 #line 8934 "gram.y"
     {
 					(yyval.range) = (yyvsp[(3) - (3)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1332:
-
-/* Line 1806 of yacc.c  */
 #line 8939 "gram.y"
     {
 					(yyval.range) = (yyvsp[(3) - (3)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1333:
-
-/* Line 1806 of yacc.c  */
 #line 8944 "gram.y"
     {
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1334:
-
-/* Line 1806 of yacc.c  */
 #line 8949 "gram.y"
     {
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1335:
-
-/* Line 1806 of yacc.c  */
 #line 8954 "gram.y"
     {
 					ereport(WARNING,
@@ -32809,12 +30769,10 @@
 							 parser_errposition((yylsp[(1) - (4)]))));
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1336:
-
-/* Line 1806 of yacc.c  */
 #line 8962 "gram.y"
     {
 					ereport(WARNING,
@@ -32822,140 +30780,104 @@
 							 parser_errposition((yylsp[(1) - (4)]))));
 					(yyval.range) = (yyvsp[(4) - (4)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_TEMP;
-				}
+				;}
     break;
 
   case 1337:
-
-/* Line 1806 of yacc.c  */
 #line 8970 "gram.y"
     {
 					(yyval.range) = (yyvsp[(3) - (3)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_UNLOGGED;
-				}
+				;}
     break;
 
   case 1338:
-
-/* Line 1806 of yacc.c  */
 #line 8975 "gram.y"
     {
 					(yyval.range) = (yyvsp[(2) - (2)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
-				}
+				;}
     break;
 
   case 1339:
-
-/* Line 1806 of yacc.c  */
 #line 8980 "gram.y"
     {
 					(yyval.range) = (yyvsp[(1) - (1)].range);
 					(yyval.range)->relpersistence = RELPERSISTENCE_PERMANENT;
-				}
+				;}
     break;
 
   case 1340:
-
-/* Line 1806 of yacc.c  */
 #line 8986 "gram.y"
-    {}
+    {;}
     break;
 
   case 1341:
-
-/* Line 1806 of yacc.c  */
 #line 8987 "gram.y"
-    {}
+    {;}
     break;
 
   case 1342:
-
-/* Line 1806 of yacc.c  */
 #line 8990 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1343:
-
-/* Line 1806 of yacc.c  */
 #line 8991 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1344:
-
-/* Line 1806 of yacc.c  */
 #line 8992 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1345:
-
-/* Line 1806 of yacc.c  */
 #line 8999 "gram.y"
-    { (yyval.list) = list_make1(NIL); }
+    { (yyval.list) = list_make1(NIL); ;}
     break;
 
   case 1346:
-
-/* Line 1806 of yacc.c  */
 #line 9000 "gram.y"
-    { (yyval.list) = (yyvsp[(4) - (5)].list); }
+    { (yyval.list) = (yyvsp[(4) - (5)].list); ;}
     break;
 
   case 1347:
-
-/* Line 1806 of yacc.c  */
 #line 9001 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1348:
-
-/* Line 1806 of yacc.c  */
 #line 9002 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1349:
-
-/* Line 1806 of yacc.c  */
 #line 9006 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list);}
+    { (yyval.list) = (yyvsp[(1) - (1)].list);;}
     break;
 
   case 1350:
-
-/* Line 1806 of yacc.c  */
 #line 9007 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1351:
-
-/* Line 1806 of yacc.c  */
 #line 9011 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (3)].list); }
+    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
     break;
 
   case 1352:
-
-/* Line 1806 of yacc.c  */
 #line 9015 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].sortby)); ;}
     break;
 
   case 1353:
-
-/* Line 1806 of yacc.c  */
 #line 9016 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].sortby)); ;}
     break;
 
   case 1354:
-
-/* Line 1806 of yacc.c  */
 #line 9020 "gram.y"
     {
 					(yyval.sortby) = makeNode(SortBy);
@@ -32964,12 +30886,10 @@
 					(yyval.sortby)->sortby_nulls = (yyvsp[(4) - (4)].ival);
 					(yyval.sortby)->useOp = (yyvsp[(3) - (4)].list);
 					(yyval.sortby)->location = (yylsp[(3) - (4)]);
-				}
+				;}
     break;
 
   case 1355:
-
-/* Line 1806 of yacc.c  */
 #line 9029 "gram.y"
     {
 					(yyval.sortby) = makeNode(SortBy);
@@ -32978,61 +30898,45 @@
 					(yyval.sortby)->sortby_nulls = (yyvsp[(3) - (3)].ival);
 					(yyval.sortby)->useOp = NIL;
 					(yyval.sortby)->location = -1;		/* no operator */
-				}
+				;}
     break;
 
   case 1356:
-
-/* Line 1806 of yacc.c  */
 #line 9041 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); }
+    { (yyval.list) = list_make2((yyvsp[(2) - (2)].node), (yyvsp[(1) - (2)].node)); ;}
     break;
 
   case 1357:
-
-/* Line 1806 of yacc.c  */
 #line 9042 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1358:
-
-/* Line 1806 of yacc.c  */
 #line 9043 "gram.y"
-    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make2(NULL, (yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1359:
-
-/* Line 1806 of yacc.c  */
 #line 9044 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); }
+    { (yyval.list) = list_make2((yyvsp[(1) - (1)].node), NULL); ;}
     break;
 
   case 1360:
-
-/* Line 1806 of yacc.c  */
 #line 9048 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1361:
-
-/* Line 1806 of yacc.c  */
 #line 9049 "gram.y"
-    { (yyval.list) = list_make2(NULL,NULL); }
+    { (yyval.list) = list_make2(NULL,NULL); ;}
     break;
 
   case 1362:
-
-/* Line 1806 of yacc.c  */
 #line 9054 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1363:
-
-/* Line 1806 of yacc.c  */
 #line 9056 "gram.y"
     {
 					/* Disabled because it was too confusing, bjm 2002-02-18 */
@@ -33041,183 +30945,133 @@
 							 errmsg("LIMIT #,# syntax is not supported"),
 							 errhint("Use separate LIMIT and OFFSET clauses."),
 							 parser_errposition((yylsp[(1) - (4)]))));
-				}
+				;}
     break;
 
   case 1364:
-
-/* Line 1806 of yacc.c  */
 #line 9066 "gram.y"
-    { (yyval.node) = (yyvsp[(3) - (5)].node); }
+    { (yyval.node) = (yyvsp[(3) - (5)].node); ;}
     break;
 
   case 1365:
-
-/* Line 1806 of yacc.c  */
 #line 9071 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1366:
-
-/* Line 1806 of yacc.c  */
 #line 9074 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1367:
-
-/* Line 1806 of yacc.c  */
 #line 9078 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1368:
-
-/* Line 1806 of yacc.c  */
 #line 9080 "gram.y"
     {
 					/* LIMIT ALL is represented as a NULL constant */
 					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1369:
-
-/* Line 1806 of yacc.c  */
 #line 9087 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1370:
-
-/* Line 1806 of yacc.c  */
 #line 9097 "gram.y"
-    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)])); }
+    { (yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)])); ;}
     break;
 
   case 1371:
-
-/* Line 1806 of yacc.c  */
 #line 9098 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (3)].node); }
+    { (yyval.node) = (yyvsp[(2) - (3)].node); ;}
     break;
 
   case 1372:
-
-/* Line 1806 of yacc.c  */
 #line 9099 "gram.y"
-    { (yyval.node) = makeIntConst(1, -1); }
+    { (yyval.node) = makeIntConst(1, -1); ;}
     break;
 
   case 1373:
-
-/* Line 1806 of yacc.c  */
 #line 9107 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1374:
-
-/* Line 1806 of yacc.c  */
 #line 9111 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1375:
-
-/* Line 1806 of yacc.c  */
 #line 9112 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1376:
-
-/* Line 1806 of yacc.c  */
 #line 9115 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1377:
-
-/* Line 1806 of yacc.c  */
 #line 9116 "gram.y"
-    { (yyval.ival) = 0; }
+    { (yyval.ival) = 0; ;}
     break;
 
   case 1378:
-
-/* Line 1806 of yacc.c  */
 #line 9121 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (3)].list); }
+    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
     break;
 
   case 1379:
-
-/* Line 1806 of yacc.c  */
 #line 9122 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1380:
-
-/* Line 1806 of yacc.c  */
 #line 9126 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1381:
-
-/* Line 1806 of yacc.c  */
 #line 9127 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1382:
-
-/* Line 1806 of yacc.c  */
 #line 9131 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1383:
-
-/* Line 1806 of yacc.c  */
 #line 9132 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1384:
-
-/* Line 1806 of yacc.c  */
 #line 9136 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1385:
-
-/* Line 1806 of yacc.c  */
 #line 9137 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1386:
-
-/* Line 1806 of yacc.c  */
 #line 9141 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1387:
-
-/* Line 1806 of yacc.c  */
 #line 9142 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1388:
-
-/* Line 1806 of yacc.c  */
 #line 9147 "gram.y"
     {
 					LockingClause *n = makeNode(LockingClause);
@@ -33225,12 +31079,10 @@
 					n->forUpdate = TRUE;
 					n->noWait = (yyvsp[(4) - (4)].boolean);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1389:
-
-/* Line 1806 of yacc.c  */
 #line 9155 "gram.y"
     {
 					LockingClause *n = makeNode(LockingClause);
@@ -33238,107 +31090,83 @@
 					n->forUpdate = FALSE;
 					n->noWait = (yyvsp[(4) - (4)].boolean);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1390:
-
-/* Line 1806 of yacc.c  */
 #line 9165 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1391:
-
-/* Line 1806 of yacc.c  */
 #line 9166 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1392:
-
-/* Line 1806 of yacc.c  */
 #line 9172 "gram.y"
     {
 					SelectStmt *n = makeNode(SelectStmt);
 					n->valuesLists = list_make1((yyvsp[(2) - (2)].list));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1393:
-
-/* Line 1806 of yacc.c  */
 #line 9178 "gram.y"
     {
 					SelectStmt *n = (SelectStmt *) (yyvsp[(1) - (3)].node);
 					n->valuesLists = lappend(n->valuesLists, (yyvsp[(3) - (3)].list));
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1394:
-
-/* Line 1806 of yacc.c  */
 #line 9195 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1395:
-
-/* Line 1806 of yacc.c  */
 #line 9196 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1396:
-
-/* Line 1806 of yacc.c  */
 #line 9200 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1397:
-
-/* Line 1806 of yacc.c  */
 #line 9201 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1398:
-
-/* Line 1806 of yacc.c  */
 #line 9212 "gram.y"
     {
 					(yyval.node) = (Node *) (yyvsp[(1) - (1)].range);
-				}
+				;}
     break;
 
   case 1399:
-
-/* Line 1806 of yacc.c  */
 #line 9216 "gram.y"
     {
 					(yyvsp[(1) - (2)].range)->alias = (yyvsp[(2) - (2)].alias);
 					(yyval.node) = (Node *) (yyvsp[(1) - (2)].range);
-				}
+				;}
     break;
 
   case 1400:
-
-/* Line 1806 of yacc.c  */
 #line 9221 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
 					n->funccallnode = (yyvsp[(1) - (1)].node);
 					n->coldeflist = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1401:
-
-/* Line 1806 of yacc.c  */
 #line 9228 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
@@ -33346,24 +31174,20 @@
 					n->alias = (yyvsp[(2) - (2)].alias);
 					n->coldeflist = NIL;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1402:
-
-/* Line 1806 of yacc.c  */
 #line 9236 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
 					n->funccallnode = (yyvsp[(1) - (5)].node);
 					n->coldeflist = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1403:
-
-/* Line 1806 of yacc.c  */
 #line 9243 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
@@ -33373,12 +31197,10 @@
 					n->alias = a;
 					n->coldeflist = (yyvsp[(5) - (6)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1404:
-
-/* Line 1806 of yacc.c  */
 #line 9253 "gram.y"
     {
 					RangeFunction *n = makeNode(RangeFunction);
@@ -33388,12 +31210,10 @@
 					n->alias = a;
 					n->coldeflist = (yyvsp[(4) - (5)].list);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1405:
-
-/* Line 1806 of yacc.c  */
 #line 9263 "gram.y"
     {
 					/*
@@ -33421,52 +31241,42 @@
 								 errhint("For example, FROM (SELECT ...) [AS] foo."),
 								 parser_errposition((yylsp[(1) - (1)]))));
 					(yyval.node) = NULL;
-				}
+				;}
     break;
 
   case 1406:
-
-/* Line 1806 of yacc.c  */
 #line 9291 "gram.y"
     {
 					RangeSubselect *n = makeNode(RangeSubselect);
 					n->subquery = (yyvsp[(1) - (2)].node);
 					n->alias = (yyvsp[(2) - (2)].alias);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1407:
-
-/* Line 1806 of yacc.c  */
 #line 9298 "gram.y"
     {
 					(yyval.node) = (Node *) (yyvsp[(1) - (1)].jexpr);
-				}
+				;}
     break;
 
   case 1408:
-
-/* Line 1806 of yacc.c  */
 #line 9302 "gram.y"
     {
 					(yyvsp[(2) - (4)].jexpr)->alias = (yyvsp[(4) - (4)].alias);
 					(yyval.node) = (Node *) (yyvsp[(2) - (4)].jexpr);
-				}
+				;}
     break;
 
   case 1409:
-
-/* Line 1806 of yacc.c  */
 #line 9328 "gram.y"
     {
 					(yyval.jexpr) = (yyvsp[(2) - (3)].jexpr);
-				}
+				;}
     break;
 
   case 1410:
-
-/* Line 1806 of yacc.c  */
 #line 9332 "gram.y"
     {
 					/* CROSS JOIN is same as unqualified inner join */
@@ -33478,12 +31288,10 @@
 					n->usingClause = NIL;
 					n->quals = NULL;
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1411:
-
-/* Line 1806 of yacc.c  */
 #line 9344 "gram.y"
     {
 					JoinExpr *n = makeNode(JoinExpr);
@@ -33496,12 +31304,10 @@
 					else
 						n->quals = (yyvsp[(5) - (5)].node); /* ON clause */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1412:
-
-/* Line 1806 of yacc.c  */
 #line 9357 "gram.y"
     {
 					/* letting join_type reduce to empty doesn't work */
@@ -33515,12 +31321,10 @@
 					else
 						n->quals = (yyvsp[(4) - (4)].node); /* ON clause */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1413:
-
-/* Line 1806 of yacc.c  */
 #line 9371 "gram.y"
     {
 					JoinExpr *n = makeNode(JoinExpr);
@@ -33531,12 +31335,10 @@
 					n->usingClause = NIL; /* figure out which columns later... */
 					n->quals = NULL; /* fill later */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1414:
-
-/* Line 1806 of yacc.c  */
 #line 9382 "gram.y"
     {
 					/* letting join_type reduce to empty doesn't work */
@@ -33548,233 +31350,181 @@
 					n->usingClause = NIL; /* figure out which columns later... */
 					n->quals = NULL; /* fill later */
 					(yyval.jexpr) = n;
-				}
+				;}
     break;
 
   case 1415:
-
-/* Line 1806 of yacc.c  */
 #line 9397 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(2) - (5)].str);
 					(yyval.alias)->colnames = (yyvsp[(4) - (5)].list);
-				}
+				;}
     break;
 
   case 1416:
-
-/* Line 1806 of yacc.c  */
 #line 9403 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(2) - (2)].str);
-				}
+				;}
     break;
 
   case 1417:
-
-/* Line 1806 of yacc.c  */
 #line 9408 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(1) - (4)].str);
 					(yyval.alias)->colnames = (yyvsp[(3) - (4)].list);
-				}
+				;}
     break;
 
   case 1418:
-
-/* Line 1806 of yacc.c  */
 #line 9414 "gram.y"
     {
 					(yyval.alias) = makeNode(Alias);
 					(yyval.alias)->aliasname = (yyvsp[(1) - (1)].str);
-				}
+				;}
     break;
 
   case 1419:
-
-/* Line 1806 of yacc.c  */
 #line 9420 "gram.y"
-    { (yyval.jtype) = JOIN_FULL; }
+    { (yyval.jtype) = JOIN_FULL; ;}
     break;
 
   case 1420:
-
-/* Line 1806 of yacc.c  */
 #line 9421 "gram.y"
-    { (yyval.jtype) = JOIN_LEFT; }
+    { (yyval.jtype) = JOIN_LEFT; ;}
     break;
 
   case 1421:
-
-/* Line 1806 of yacc.c  */
 #line 9422 "gram.y"
-    { (yyval.jtype) = JOIN_RIGHT; }
+    { (yyval.jtype) = JOIN_RIGHT; ;}
     break;
 
   case 1422:
-
-/* Line 1806 of yacc.c  */
 #line 9423 "gram.y"
-    { (yyval.jtype) = JOIN_INNER; }
+    { (yyval.jtype) = JOIN_INNER; ;}
     break;
 
   case 1423:
-
-/* Line 1806 of yacc.c  */
 #line 9427 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1424:
-
-/* Line 1806 of yacc.c  */
 #line 9428 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1425:
-
-/* Line 1806 of yacc.c  */
 #line 9440 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(3) - (4)].list); }
+    { (yyval.node) = (Node *) (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1426:
-
-/* Line 1806 of yacc.c  */
 #line 9441 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1427:
-
-/* Line 1806 of yacc.c  */
 #line 9447 "gram.y"
     {
 					/* default inheritance */
 					(yyval.range) = (yyvsp[(1) - (1)].range);
 					(yyval.range)->inhOpt = INH_DEFAULT;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1428:
-
-/* Line 1806 of yacc.c  */
 #line 9454 "gram.y"
     {
 					/* inheritance query */
 					(yyval.range) = (yyvsp[(1) - (2)].range);
 					(yyval.range)->inhOpt = INH_YES;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1429:
-
-/* Line 1806 of yacc.c  */
 #line 9461 "gram.y"
     {
 					/* no inheritance */
 					(yyval.range) = (yyvsp[(2) - (2)].range);
 					(yyval.range)->inhOpt = INH_NO;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1430:
-
-/* Line 1806 of yacc.c  */
 #line 9468 "gram.y"
     {
 					/* no inheritance, SQL99-style syntax */
 					(yyval.range) = (yyvsp[(3) - (4)].range);
 					(yyval.range)->inhOpt = INH_NO;
 					(yyval.range)->alias = NULL;
-				}
+				;}
     break;
 
   case 1431:
-
-/* Line 1806 of yacc.c  */
 #line 9478 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
     break;
 
   case 1432:
-
-/* Line 1806 of yacc.c  */
 #line 9479 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
     break;
 
   case 1433:
-
-/* Line 1806 of yacc.c  */
 #line 9493 "gram.y"
     {
 					(yyval.range) = (yyvsp[(1) - (1)].range);
-				}
+				;}
     break;
 
   case 1434:
-
-/* Line 1806 of yacc.c  */
 #line 9497 "gram.y"
     {
 					Alias *alias = makeNode(Alias);
 					alias->aliasname = (yyvsp[(2) - (2)].str);
 					(yyvsp[(1) - (2)].range)->alias = alias;
 					(yyval.range) = (yyvsp[(1) - (2)].range);
-				}
+				;}
     break;
 
   case 1435:
-
-/* Line 1806 of yacc.c  */
 #line 9504 "gram.y"
     {
 					Alias *alias = makeNode(Alias);
 					alias->aliasname = (yyvsp[(3) - (3)].str);
 					(yyvsp[(1) - (3)].range)->alias = alias;
 					(yyval.range) = (yyvsp[(1) - (3)].range);
-				}
+				;}
     break;
 
   case 1436:
-
-/* Line 1806 of yacc.c  */
 #line 9513 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1437:
-
-/* Line 1806 of yacc.c  */
 #line 9518 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1438:
-
-/* Line 1806 of yacc.c  */
 #line 9519 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1439:
-
-/* Line 1806 of yacc.c  */
 #line 9524 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1440:
-
-/* Line 1806 of yacc.c  */
 #line 9526 "gram.y"
     {
 					CurrentOfExpr *n = makeNode(CurrentOfExpr);
@@ -33782,51 +31532,39 @@
 					n->cursor_name = (yyvsp[(4) - (4)].str);
 					n->cursor_param = 0;
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1441:
-
-/* Line 1806 of yacc.c  */
 #line 9533 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1442:
-
-/* Line 1806 of yacc.c  */
 #line 9538 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1443:
-
-/* Line 1806 of yacc.c  */
 #line 9539 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1444:
-
-/* Line 1806 of yacc.c  */
 #line 9544 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 1445:
-
-/* Line 1806 of yacc.c  */
 #line 9548 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1446:
-
-/* Line 1806 of yacc.c  */
 #line 9554 "gram.y"
     {
 					ColumnDef *n = makeNode(ColumnDef);
@@ -33843,141 +31581,109 @@
 					n->collOid = InvalidOid;
 					n->constraints = NIL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1447:
-
-/* Line 1806 of yacc.c  */
 #line 9583 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
 					(yyval.typnam)->arrayBounds = (yyvsp[(2) - (2)].list);
-				}
+				;}
     break;
 
   case 1448:
-
-/* Line 1806 of yacc.c  */
 #line 9588 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
 					(yyval.typnam)->arrayBounds = (yyvsp[(3) - (3)].list);
 					(yyval.typnam)->setof = TRUE;
-				}
+				;}
     break;
 
   case 1449:
-
-/* Line 1806 of yacc.c  */
 #line 9595 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(4) - (5)].ival)));
-				}
+				;}
     break;
 
   case 1450:
-
-/* Line 1806 of yacc.c  */
 #line 9600 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (6)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger((yyvsp[(5) - (6)].ival)));
 					(yyval.typnam)->setof = TRUE;
-				}
+				;}
     break;
 
   case 1451:
-
-/* Line 1806 of yacc.c  */
 #line 9606 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
-				}
+				;}
     break;
 
   case 1452:
-
-/* Line 1806 of yacc.c  */
 #line 9611 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (3)].typnam);
 					(yyval.typnam)->arrayBounds = list_make1(makeInteger(-1));
 					(yyval.typnam)->setof = TRUE;
-				}
+				;}
     break;
 
   case 1453:
-
-/* Line 1806 of yacc.c  */
 #line 9620 "gram.y"
-    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); }
+    {  (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeInteger(-1)); ;}
     break;
 
   case 1454:
-
-/* Line 1806 of yacc.c  */
 #line 9622 "gram.y"
-    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); }
+    {  (yyval.list) = lappend((yyvsp[(1) - (4)].list), makeInteger((yyvsp[(3) - (4)].ival))); ;}
     break;
 
   case 1455:
-
-/* Line 1806 of yacc.c  */
 #line 9624 "gram.y"
-    {  (yyval.list) = NIL; }
+    {  (yyval.list) = NIL; ;}
     break;
 
   case 1456:
-
-/* Line 1806 of yacc.c  */
 #line 9628 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1457:
-
-/* Line 1806 of yacc.c  */
 #line 9629 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1458:
-
-/* Line 1806 of yacc.c  */
 #line 9630 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1459:
-
-/* Line 1806 of yacc.c  */
 #line 9631 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1460:
-
-/* Line 1806 of yacc.c  */
 #line 9632 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1461:
-
-/* Line 1806 of yacc.c  */
 #line 9634 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (2)].typnam);
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
-				}
+				;}
     break;
 
   case 1462:
-
-/* Line 1806 of yacc.c  */
 #line 9639 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (5)].typnam);
@@ -33993,189 +31699,149 @@
 					else
 						(yyval.typnam)->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
 												 makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
-				}
+				;}
     break;
 
   case 1463:
-
-/* Line 1806 of yacc.c  */
 #line 9668 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1464:
-
-/* Line 1806 of yacc.c  */
 #line 9669 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1465:
-
-/* Line 1806 of yacc.c  */
 #line 9670 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1466:
-
-/* Line 1806 of yacc.c  */
 #line 9671 "gram.y"
-    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); }
+    { (yyval.typnam) = (yyvsp[(1) - (1)].typnam); ;}
     break;
 
   case 1467:
-
-/* Line 1806 of yacc.c  */
 #line 9683 "gram.y"
     {
 					(yyval.typnam) = makeTypeName((yyvsp[(1) - (2)].str));
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1468:
-
-/* Line 1806 of yacc.c  */
 #line 9689 "gram.y"
     {
 					(yyval.typnam) = makeTypeNameFromNameList(lcons(makeString((yyvsp[(1) - (3)].str)), (yyvsp[(2) - (3)].list)));
 					(yyval.typnam)->typmods = (yyvsp[(3) - (3)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (3)]);
-				}
+				;}
     break;
 
   case 1469:
-
-/* Line 1806 of yacc.c  */
 #line 9696 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1470:
-
-/* Line 1806 of yacc.c  */
 #line 9697 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1471:
-
-/* Line 1806 of yacc.c  */
 #line 9704 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int4");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1472:
-
-/* Line 1806 of yacc.c  */
 #line 9709 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int4");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1473:
-
-/* Line 1806 of yacc.c  */
 #line 9714 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int2");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1474:
-
-/* Line 1806 of yacc.c  */
 #line 9719 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("int8");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1475:
-
-/* Line 1806 of yacc.c  */
 #line 9724 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("float4");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1476:
-
-/* Line 1806 of yacc.c  */
 #line 9729 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(2) - (2)].typnam);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1477:
-
-/* Line 1806 of yacc.c  */
 #line 9734 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("float8");
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1478:
-
-/* Line 1806 of yacc.c  */
 #line 9739 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("numeric");
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1479:
-
-/* Line 1806 of yacc.c  */
 #line 9745 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("numeric");
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1480:
-
-/* Line 1806 of yacc.c  */
 #line 9751 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("numeric");
 					(yyval.typnam)->typmods = (yyvsp[(2) - (2)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1481:
-
-/* Line 1806 of yacc.c  */
 #line 9757 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("bool");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1482:
-
-/* Line 1806 of yacc.c  */
 #line 9764 "gram.y"
     {
 					/*
@@ -34196,58 +31862,46 @@
 								(errcode(ERRCODE_INVALID_PARAMETER_VALUE),
 								 errmsg("precision for type float must be less than 54 bits"),
 								 parser_errposition((yylsp[(2) - (3)]))));
-				}
+				;}
     break;
 
   case 1483:
-
-/* Line 1806 of yacc.c  */
 #line 9785 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("float8");
-				}
+				;}
     break;
 
   case 1484:
-
-/* Line 1806 of yacc.c  */
 #line 9795 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1485:
-
-/* Line 1806 of yacc.c  */
 #line 9799 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1486:
-
-/* Line 1806 of yacc.c  */
 #line 9807 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1487:
-
-/* Line 1806 of yacc.c  */
 #line 9811 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
 					(yyval.typnam)->typmods = NIL;
-				}
+				;}
     break;
 
   case 1488:
-
-/* Line 1806 of yacc.c  */
 #line 9819 "gram.y"
     {
 					char *typname;
@@ -34256,12 +31910,10 @@
 					(yyval.typnam) = SystemTypeName(typname);
 					(yyval.typnam)->typmods = (yyvsp[(4) - (5)].list);
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1489:
-
-/* Line 1806 of yacc.c  */
 #line 9831 "gram.y"
     {
 					/* bit defaults to bit(1), varbit to no limit */
@@ -34275,39 +31927,31 @@
 						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
 					}
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1490:
-
-/* Line 1806 of yacc.c  */
 #line 9852 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1491:
-
-/* Line 1806 of yacc.c  */
 #line 9856 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1492:
-
-/* Line 1806 of yacc.c  */
 #line 9862 "gram.y"
     {
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
-				}
+				;}
     break;
 
   case 1493:
-
-/* Line 1806 of yacc.c  */
 #line 9866 "gram.y"
     {
 					/* Length was not specified so allow to be unrestricted.
@@ -34318,12 +31962,10 @@
 					 */
 					(yyval.typnam) = (yyvsp[(1) - (1)].typnam);
 					(yyval.typnam)->typmods = NIL;
-				}
+				;}
     break;
 
   case 1494:
-
-/* Line 1806 of yacc.c  */
 #line 9879 "gram.y"
     {
 					if (((yyvsp[(5) - (5)].str) != NULL) && (strcmp((yyvsp[(5) - (5)].str), "sql_text") != 0))
@@ -34340,12 +31982,10 @@
 					(yyval.typnam) = SystemTypeName((yyvsp[(1) - (5)].str));
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1495:
-
-/* Line 1806 of yacc.c  */
 #line 9898 "gram.y"
     {
 					if (((yyvsp[(2) - (2)].str) != NULL) && (strcmp((yyvsp[(2) - (2)].str), "sql_text") != 0))
@@ -34366,82 +32006,60 @@
 						(yyval.typnam)->typmods = list_make1(makeIntConst(1, -1));
 
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1496:
-
-/* Line 1806 of yacc.c  */
 #line 9921 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1497:
-
-/* Line 1806 of yacc.c  */
 #line 9923 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1498:
-
-/* Line 1806 of yacc.c  */
 #line 9925 "gram.y"
-    { (yyval.str) = "varchar"; }
+    { (yyval.str) = "varchar"; ;}
     break;
 
   case 1499:
-
-/* Line 1806 of yacc.c  */
 #line 9927 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1500:
-
-/* Line 1806 of yacc.c  */
 #line 9929 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(3) - (3)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1501:
-
-/* Line 1806 of yacc.c  */
 #line 9931 "gram.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; }
+    { (yyval.str) = (yyvsp[(2) - (2)].boolean) ? "varchar": "bpchar"; ;}
     break;
 
   case 1502:
-
-/* Line 1806 of yacc.c  */
 #line 9935 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1503:
-
-/* Line 1806 of yacc.c  */
 #line 9936 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1504:
-
-/* Line 1806 of yacc.c  */
 #line 9940 "gram.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 1505:
-
-/* Line 1806 of yacc.c  */
 #line 9941 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 1506:
-
-/* Line 1806 of yacc.c  */
 #line 9949 "gram.y"
     {
 					if ((yyvsp[(5) - (5)].boolean))
@@ -34450,12 +32068,10 @@
 						(yyval.typnam) = SystemTypeName("timestamp");
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1507:
-
-/* Line 1806 of yacc.c  */
 #line 9958 "gram.y"
     {
 					if ((yyvsp[(2) - (2)].boolean))
@@ -34463,12 +32079,10 @@
 					else
 						(yyval.typnam) = SystemTypeName("timestamp");
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1508:
-
-/* Line 1806 of yacc.c  */
 #line 9966 "gram.y"
     {
 					if ((yyvsp[(5) - (5)].boolean))
@@ -34477,12 +32091,10 @@
 						(yyval.typnam) = SystemTypeName("time");
 					(yyval.typnam)->typmods = list_make1(makeIntConst((yyvsp[(3) - (5)].ival), (yylsp[(3) - (5)])));
 					(yyval.typnam)->location = (yylsp[(1) - (5)]);
-				}
+				;}
     break;
 
   case 1509:
-
-/* Line 1806 of yacc.c  */
 #line 9975 "gram.y"
     {
 					if ((yyvsp[(2) - (2)].boolean))
@@ -34490,116 +32102,88 @@
 					else
 						(yyval.typnam) = SystemTypeName("time");
 					(yyval.typnam)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1510:
-
-/* Line 1806 of yacc.c  */
 #line 9986 "gram.y"
     {
 					(yyval.typnam) = SystemTypeName("interval");
 					(yyval.typnam)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1511:
-
-/* Line 1806 of yacc.c  */
 #line 9993 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1512:
-
-/* Line 1806 of yacc.c  */
 #line 9994 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1513:
-
-/* Line 1806 of yacc.c  */
 #line 9995 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1514:
-
-/* Line 1806 of yacc.c  */
 #line 10000 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1515:
-
-/* Line 1806 of yacc.c  */
 #line 10002 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MONTH), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1516:
-
-/* Line 1806 of yacc.c  */
 #line 10004 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1517:
-
-/* Line 1806 of yacc.c  */
 #line 10006 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1518:
-
-/* Line 1806 of yacc.c  */
 #line 10008 "gram.y"
-    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); }
+    { (yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(MINUTE), (yylsp[(1) - (1)]))); ;}
     break;
 
   case 1519:
-
-/* Line 1806 of yacc.c  */
 #line 10010 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1520:
-
-/* Line 1806 of yacc.c  */
 #line 10012 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(YEAR) |
 												 INTERVAL_MASK(MONTH), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1521:
-
-/* Line 1806 of yacc.c  */
 #line 10017 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
 												 INTERVAL_MASK(HOUR), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1522:
-
-/* Line 1806 of yacc.c  */
 #line 10022 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(DAY) |
 												 INTERVAL_MASK(HOUR) |
 												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1523:
-
-/* Line 1806 of yacc.c  */
 #line 10028 "gram.y"
     {
 					(yyval.list) = (yyvsp[(3) - (3)].list);
@@ -34607,85 +32191,67 @@
 												INTERVAL_MASK(HOUR) |
 												INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1524:
-
-/* Line 1806 of yacc.c  */
 #line 10036 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(HOUR) |
 												 INTERVAL_MASK(MINUTE), (yylsp[(1) - (3)])));
-				}
+				;}
     break;
 
   case 1525:
-
-/* Line 1806 of yacc.c  */
 #line 10041 "gram.y"
     {
 					(yyval.list) = (yyvsp[(3) - (3)].list);
 					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(HOUR) |
 												INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1526:
-
-/* Line 1806 of yacc.c  */
 #line 10048 "gram.y"
     {
 					(yyval.list) = (yyvsp[(3) - (3)].list);
 					linitial((yyval.list)) = makeIntConst(INTERVAL_MASK(MINUTE) |
 												INTERVAL_MASK(SECOND), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1527:
-
-/* Line 1806 of yacc.c  */
 #line 10054 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1528:
-
-/* Line 1806 of yacc.c  */
 #line 10059 "gram.y"
     {
 					(yyval.list) = list_make1(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (1)])));
-				}
+				;}
     break;
 
   case 1529:
-
-/* Line 1806 of yacc.c  */
 #line 10063 "gram.y"
     {
 					(yyval.list) = list_make2(makeIntConst(INTERVAL_MASK(SECOND), (yylsp[(1) - (4)])),
 									makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
-				}
+				;}
     break;
 
   case 1530:
-
-/* Line 1806 of yacc.c  */
 #line 10092 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1531:
-
-/* Line 1806 of yacc.c  */
 #line 10094 "gram.y"
-    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); }
+    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1532:
-
-/* Line 1806 of yacc.c  */
 #line 10096 "gram.y"
     {
 					CollateClause *n = makeNode(CollateClause);
@@ -34693,12 +32259,10 @@
 					n->collname = (yyvsp[(3) - (3)].list);
 					n->location = (yylsp[(2) - (3)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1533:
-
-/* Line 1806 of yacc.c  */
 #line 10104 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -34711,138 +32275,100 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1534:
-
-/* Line 1806 of yacc.c  */
 #line 10126 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1535:
-
-/* Line 1806 of yacc.c  */
 #line 10128 "gram.y"
-    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1536:
-
-/* Line 1806 of yacc.c  */
 #line 10130 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1537:
-
-/* Line 1806 of yacc.c  */
 #line 10132 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1538:
-
-/* Line 1806 of yacc.c  */
 #line 10134 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1539:
-
-/* Line 1806 of yacc.c  */
 #line 10136 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1540:
-
-/* Line 1806 of yacc.c  */
 #line 10138 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1541:
-
-/* Line 1806 of yacc.c  */
 #line 10140 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1542:
-
-/* Line 1806 of yacc.c  */
 #line 10142 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1543:
-
-/* Line 1806 of yacc.c  */
 #line 10144 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1544:
-
-/* Line 1806 of yacc.c  */
 #line 10146 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1545:
-
-/* Line 1806 of yacc.c  */
 #line 10149 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1546:
-
-/* Line 1806 of yacc.c  */
 #line 10151 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1547:
-
-/* Line 1806 of yacc.c  */
 #line 10153 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
     break;
 
   case 1548:
-
-/* Line 1806 of yacc.c  */
 #line 10156 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1549:
-
-/* Line 1806 of yacc.c  */
 #line 10158 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL, (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1550:
-
-/* Line 1806 of yacc.c  */
 #line 10160 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1551:
-
-/* Line 1806 of yacc.c  */
 #line 10163 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1552:
-
-/* Line 1806 of yacc.c  */
 #line 10165 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -34855,19 +32381,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~", (yyvsp[(1) - (5)].node), (Node *) n, (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1553:
-
-/* Line 1806 of yacc.c  */
 #line 10178 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); ;}
     break;
 
   case 1554:
-
-/* Line 1806 of yacc.c  */
 #line 10180 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -34880,19 +32402,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (6)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~", (yyvsp[(1) - (6)].node), (Node *) n, (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1555:
-
-/* Line 1806 of yacc.c  */
 #line 10193 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1556:
-
-/* Line 1806 of yacc.c  */
 #line 10195 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -34905,19 +32423,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~~*", (yyvsp[(1) - (5)].node), (Node *) n, (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1557:
-
-/* Line 1806 of yacc.c  */
 #line 10208 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)])); ;}
     break;
 
   case 1558:
-
-/* Line 1806 of yacc.c  */
 #line 10210 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -34930,12 +32444,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (6)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~~*", (yyvsp[(1) - (6)].node), (Node *) n, (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1559:
-
-/* Line 1806 of yacc.c  */
 #line 10224 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -34948,12 +32460,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (4)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~", (yyvsp[(1) - (4)].node), (Node *) n, (yylsp[(2) - (4)]));
-				}
+				;}
     break;
 
   case 1560:
-
-/* Line 1806 of yacc.c  */
 #line 10237 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -34966,12 +32476,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (6)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "~", (yyvsp[(1) - (6)].node), (Node *) n, (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1561:
-
-/* Line 1806 of yacc.c  */
 #line 10250 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -34984,12 +32492,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (5)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~", (yyvsp[(1) - (5)].node), (Node *) n, (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1562:
-
-/* Line 1806 of yacc.c  */
 #line 10263 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35002,60 +32508,50 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (7)]);
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "!~", (yyvsp[(1) - (7)].node), (Node *) n, (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1563:
-
-/* Line 1806 of yacc.c  */
 #line 10286 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					n->nulltesttype = IS_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1564:
-
-/* Line 1806 of yacc.c  */
 #line 10293 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (2)].node);
 					n->nulltesttype = IS_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1565:
-
-/* Line 1806 of yacc.c  */
 #line 10300 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					n->nulltesttype = IS_NOT_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1566:
-
-/* Line 1806 of yacc.c  */
 #line 10307 "gram.y"
     {
 					NullTest *n = makeNode(NullTest);
 					n->arg = (Expr *) (yyvsp[(1) - (2)].node);
 					n->nulltesttype = IS_NOT_NULL;
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1567:
-
-/* Line 1806 of yacc.c  */
 #line 10314 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35078,93 +32574,77 @@
 					n->over = NULL;
 					n->location = (yylsp[(2) - (3)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1568:
-
-/* Line 1806 of yacc.c  */
 #line 10337 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					b->booltesttype = IS_TRUE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1569:
-
-/* Line 1806 of yacc.c  */
 #line 10344 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					b->booltesttype = IS_NOT_TRUE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1570:
-
-/* Line 1806 of yacc.c  */
 #line 10351 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					b->booltesttype = IS_FALSE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1571:
-
-/* Line 1806 of yacc.c  */
 #line 10358 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					b->booltesttype = IS_NOT_FALSE;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1572:
-
-/* Line 1806 of yacc.c  */
 #line 10365 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (3)].node);
 					b->booltesttype = IS_UNKNOWN;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1573:
-
-/* Line 1806 of yacc.c  */
 #line 10372 "gram.y"
     {
 					BooleanTest *b = makeNode(BooleanTest);
 					b->arg = (Expr *) (yyvsp[(1) - (4)].node);
 					b->booltesttype = IS_NOT_UNKNOWN;
 					(yyval.node) = (Node *)b;
-				}
+				;}
     break;
 
   case 1574:
-
-/* Line 1806 of yacc.c  */
 #line 10379 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1575:
-
-/* Line 1806 of yacc.c  */
 #line 10383 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
@@ -35172,54 +32652,44 @@
 															  "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)])),
 											 (yylsp[(2) - (6)]));
 
-				}
+				;}
     break;
 
   case 1576:
-
-/* Line 1806 of yacc.c  */
 #line 10391 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (Node *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1577:
-
-/* Line 1806 of yacc.c  */
 #line 10395 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (Node *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1578:
-
-/* Line 1806 of yacc.c  */
 #line 10405 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL,
 						(Node *) makeSimpleA_Expr(AEXPR_OP, ">=", (yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yylsp[(2) - (6)])),
 						(Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)])),
 											 (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1579:
-
-/* Line 1806 of yacc.c  */
 #line 10412 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL,
 						(Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (7)].node), (yyvsp[(5) - (7)].node), (yylsp[(2) - (7)])),
 						(Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (7)].node), (yyvsp[(7) - (7)].node), (yylsp[(2) - (7)])),
 											 (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1580:
-
-/* Line 1806 of yacc.c  */
 #line 10419 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_OR, NIL,
@@ -35232,12 +32702,10 @@
 							(Node *) makeSimpleA_Expr(AEXPR_OP, "<=", (yyvsp[(1) - (6)].node), (yyvsp[(4) - (6)].node), (yylsp[(2) - (6)])),
 											(yylsp[(2) - (6)])),
 											 (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1581:
-
-/* Line 1806 of yacc.c  */
 #line 10432 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_AND, NIL,
@@ -35250,12 +32718,10 @@
 							(Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (7)].node), (yyvsp[(5) - (7)].node), (yylsp[(2) - (7)])),
 											(yylsp[(2) - (7)])),
 											 (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1582:
-
-/* Line 1806 of yacc.c  */
 #line 10445 "gram.y"
     {
 					/* in_expr returns a SubLink or a list of a_exprs */
@@ -35274,12 +32740,10 @@
 						/* generate scalar IN expression */
 						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)]));
 					}
-				}
+				;}
     break;
 
   case 1583:
-
-/* Line 1806 of yacc.c  */
 #line 10464 "gram.y"
     {
 					/* in_expr returns a SubLink or a list of a_exprs */
@@ -35300,12 +32764,10 @@
 						/* generate scalar NOT IN expression */
 						(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_IN, "<>", (yyvsp[(1) - (4)].node), (yyvsp[(4) - (4)].node), (yylsp[(2) - (4)]));
 					}
-				}
+				;}
     break;
 
   case 1584:
-
-/* Line 1806 of yacc.c  */
 #line 10485 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -35315,24 +32777,20 @@
 					n->subselect = (yyvsp[(4) - (4)].node);
 					n->location = (yylsp[(2) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1585:
-
-/* Line 1806 of yacc.c  */
 #line 10495 "gram.y"
     {
 					if ((yyvsp[(3) - (6)].ival) == ANY_SUBLINK)
 						(yyval.node) = (Node *) makeA_Expr(AEXPR_OP_ANY, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
 					else
 						(yyval.node) = (Node *) makeA_Expr(AEXPR_OP_ALL, (yyvsp[(2) - (6)].list), (yyvsp[(1) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1586:
-
-/* Line 1806 of yacc.c  */
 #line 10502 "gram.y"
     {
 					/* Not sure how to get rid of the parentheses
@@ -35348,219 +32806,165 @@
 							(errcode(ERRCODE_FEATURE_NOT_SUPPORTED),
 							 errmsg("UNIQUE predicate is not yet implemented"),
 							 parser_errposition((yylsp[(1) - (2)]))));
-				}
+				;}
     break;
 
   case 1587:
-
-/* Line 1806 of yacc.c  */
 #line 10518 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 									 list_make1((yyvsp[(1) - (3)].node)), (yylsp[(2) - (3)]));
-				}
+				;}
     break;
 
   case 1588:
-
-/* Line 1806 of yacc.c  */
 #line 10523 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
 											 makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 														 list_make1((yyvsp[(1) - (4)].node)), (yylsp[(2) - (4)])),
 											 (yylsp[(2) - (4)]));
-				}
+				;}
     break;
 
   case 1589:
-
-/* Line 1806 of yacc.c  */
 #line 10541 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1590:
-
-/* Line 1806 of yacc.c  */
 #line 10543 "gram.y"
-    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); }
+    { (yyval.node) = makeTypeCast((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].typnam), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1591:
-
-/* Line 1806 of yacc.c  */
 #line 10545 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1592:
-
-/* Line 1806 of yacc.c  */
 #line 10547 "gram.y"
-    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = doNegate((yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1593:
-
-/* Line 1806 of yacc.c  */
 #line 10549 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "+", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1594:
-
-/* Line 1806 of yacc.c  */
 #line 10551 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "-", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1595:
-
-/* Line 1806 of yacc.c  */
 #line 10553 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "*", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1596:
-
-/* Line 1806 of yacc.c  */
 #line 10555 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "/", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1597:
-
-/* Line 1806 of yacc.c  */
 #line 10557 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "%", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1598:
-
-/* Line 1806 of yacc.c  */
 #line 10559 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "^", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1599:
-
-/* Line 1806 of yacc.c  */
 #line 10561 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "<", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1600:
-
-/* Line 1806 of yacc.c  */
 #line 10563 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, ">", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1601:
-
-/* Line 1806 of yacc.c  */
 #line 10565 "gram.y"
-    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OP, "=", (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1602:
-
-/* Line 1806 of yacc.c  */
 #line 10567 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (3)].list), (yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yylsp[(2) - (3)])); ;}
     break;
 
   case 1603:
-
-/* Line 1806 of yacc.c  */
 #line 10569 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(1) - (2)].list), NULL, (yyvsp[(2) - (2)].node), (yylsp[(1) - (2)])); ;}
     break;
 
   case 1604:
-
-/* Line 1806 of yacc.c  */
 #line 10571 "gram.y"
-    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); }
+    { (yyval.node) = (Node *) makeA_Expr(AEXPR_OP, (yyvsp[(2) - (2)].list), (yyvsp[(1) - (2)].node), NULL, (yylsp[(2) - (2)])); ;}
     break;
 
   case 1605:
-
-/* Line 1806 of yacc.c  */
 #line 10573 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[(1) - (5)].node), (yyvsp[(5) - (5)].node), (yylsp[(2) - (5)]));
-				}
+				;}
     break;
 
   case 1606:
-
-/* Line 1806 of yacc.c  */
 #line 10577 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL,
 						NULL, (Node *) makeSimpleA_Expr(AEXPR_DISTINCT, "=", (yyvsp[(1) - (6)].node), (yyvsp[(6) - (6)].node), (yylsp[(2) - (6)])), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1607:
-
-/* Line 1806 of yacc.c  */
 #line 10582 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "=", (yyvsp[(1) - (6)].node), (Node *) (yyvsp[(5) - (6)].list), (yylsp[(2) - (6)]));
-				}
+				;}
     break;
 
   case 1608:
-
-/* Line 1806 of yacc.c  */
 #line 10586 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_OF, "<>", (yyvsp[(1) - (7)].node), (Node *) (yyvsp[(6) - (7)].list), (yylsp[(2) - (7)]));
-				}
+				;}
     break;
 
   case 1609:
-
-/* Line 1806 of yacc.c  */
 #line 10590 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 									 list_make1((yyvsp[(1) - (3)].node)), (yylsp[(2) - (3)]));
-				}
+				;}
     break;
 
   case 1610:
-
-/* Line 1806 of yacc.c  */
 #line 10595 "gram.y"
     {
 					(yyval.node) = (Node *) makeA_Expr(AEXPR_NOT, NIL, NULL,
 											 makeXmlExpr(IS_DOCUMENT, NULL, NIL,
 														 list_make1((yyvsp[(1) - (4)].node)), (yylsp[(2) - (4)])),
 											 (yylsp[(2) - (4)]));
-				}
+				;}
     break;
 
   case 1611:
-
-/* Line 1806 of yacc.c  */
 #line 10611 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1612:
-
-/* Line 1806 of yacc.c  */
 #line 10612 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1613:
-
-/* Line 1806 of yacc.c  */
 #line 10614 "gram.y"
     {
 					ParamRef *p = makeNode(ParamRef);
@@ -35575,12 +32979,10 @@
 					}
 					else
 						(yyval.node) = (Node *) p;
-				}
+				;}
     break;
 
   case 1614:
-
-/* Line 1806 of yacc.c  */
 #line 10629 "gram.y"
     {
 					if ((yyvsp[(4) - (4)].list))
@@ -35592,26 +32994,20 @@
 					}
 					else
 						(yyval.node) = (yyvsp[(2) - (4)].node);
-				}
+				;}
     break;
 
   case 1615:
-
-/* Line 1806 of yacc.c  */
 #line 10641 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1616:
-
-/* Line 1806 of yacc.c  */
 #line 10643 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1617:
-
-/* Line 1806 of yacc.c  */
 #line 10645 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -35621,12 +33017,10 @@
 					n->subselect = (yyvsp[(1) - (1)].node);
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1618:
-
-/* Line 1806 of yacc.c  */
 #line 10655 "gram.y"
     {
 					/*
@@ -35649,12 +33043,10 @@
 					a->arg = (Node *)n;
 					a->indirection = check_indirection((yyvsp[(2) - (2)].list), yyscanner);
 					(yyval.node) = (Node *)a;
-				}
+				;}
     break;
 
   case 1619:
-
-/* Line 1806 of yacc.c  */
 #line 10678 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -35664,12 +33056,10 @@
 					n->subselect = (yyvsp[(2) - (2)].node);
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1620:
-
-/* Line 1806 of yacc.c  */
 #line 10688 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
@@ -35679,12 +33069,10 @@
 					n->subselect = (yyvsp[(2) - (2)].node);
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1621:
-
-/* Line 1806 of yacc.c  */
 #line 10698 "gram.y"
     {
 					A_ArrayExpr *n = (A_ArrayExpr *) (yyvsp[(2) - (2)].node);
@@ -35692,12 +33080,10 @@
 					/* point outermost A_ArrayExpr to the ARRAY keyword */
 					n->location = (yylsp[(1) - (2)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1622:
-
-/* Line 1806 of yacc.c  */
 #line 10706 "gram.y"
     {
 					RowExpr *r = makeNode(RowExpr);
@@ -35706,12 +33092,10 @@
 					r->colnames = NIL;	/* to be filled in during analysis */
 					r->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)r;
-				}
+				;}
     break;
 
   case 1623:
-
-/* Line 1806 of yacc.c  */
 #line 10725 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35724,12 +33108,10 @@
 					n->over = (yyvsp[(4) - (4)].windef);
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1624:
-
-/* Line 1806 of yacc.c  */
 #line 10738 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35742,12 +33124,10 @@
 					n->over = (yyvsp[(5) - (5)].windef);
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1625:
-
-/* Line 1806 of yacc.c  */
 #line 10751 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35760,12 +33140,10 @@
 					n->over = (yyvsp[(6) - (6)].windef);
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1626:
-
-/* Line 1806 of yacc.c  */
 #line 10764 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35778,12 +33156,10 @@
 					n->over = (yyvsp[(8) - (8)].windef);
 					n->location = (yylsp[(1) - (8)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1627:
-
-/* Line 1806 of yacc.c  */
 #line 10777 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35796,12 +33172,10 @@
 					n->over = (yyvsp[(6) - (6)].windef);
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1628:
-
-/* Line 1806 of yacc.c  */
 #line 10790 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35818,12 +33192,10 @@
 					n->over = (yyvsp[(7) - (7)].windef);
 					n->location = (yylsp[(1) - (7)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1629:
-
-/* Line 1806 of yacc.c  */
 #line 10807 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35836,12 +33208,10 @@
 					n->over = (yyvsp[(7) - (7)].windef);
 					n->location = (yylsp[(1) - (7)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1630:
-
-/* Line 1806 of yacc.c  */
 #line 10820 "gram.y"
     {
 					/*
@@ -35864,12 +33234,10 @@
 					n->over = (yyvsp[(5) - (5)].windef);
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1631:
-
-/* Line 1806 of yacc.c  */
 #line 10843 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -35882,12 +33250,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1632:
-
-/* Line 1806 of yacc.c  */
 #line 10856 "gram.y"
     {
 					/*
@@ -35913,12 +33279,10 @@
 					Node *n;
 					n = makeStringConstCast("now", -1, SystemTypeName("text"));
 					(yyval.node) = makeTypeCast(n, SystemTypeName("date"), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1633:
-
-/* Line 1806 of yacc.c  */
 #line 10882 "gram.y"
     {
 					/*
@@ -35928,12 +33292,10 @@
 					Node *n;
 					n = makeStringConstCast("now", -1, SystemTypeName("text"));
 					(yyval.node) = makeTypeCast(n, SystemTypeName("timetz"), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1634:
-
-/* Line 1806 of yacc.c  */
 #line 10892 "gram.y"
     {
 					/*
@@ -35946,12 +33308,10 @@
 					d = SystemTypeName("timetz");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast(n, d, (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1635:
-
-/* Line 1806 of yacc.c  */
 #line 10905 "gram.y"
     {
 					/*
@@ -35968,12 +33328,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1636:
-
-/* Line 1806 of yacc.c  */
 #line 10922 "gram.y"
     {
 					/*
@@ -35986,12 +33344,10 @@
 					d = SystemTypeName("timestamptz");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast(n, d, (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1637:
-
-/* Line 1806 of yacc.c  */
 #line 10935 "gram.y"
     {
 					/*
@@ -36001,12 +33357,10 @@
 					Node *n;
 					n = makeStringConstCast("now", -1, SystemTypeName("text"));
 					(yyval.node) = makeTypeCast((Node *)n, SystemTypeName("time"), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1638:
-
-/* Line 1806 of yacc.c  */
 #line 10945 "gram.y"
     {
 					/*
@@ -36019,12 +33373,10 @@
 					d = SystemTypeName("time");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast((Node *)n, d, (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1639:
-
-/* Line 1806 of yacc.c  */
 #line 10958 "gram.y"
     {
 					/*
@@ -36034,12 +33386,10 @@
 					Node *n;
 					n = makeStringConstCast("now", -1, SystemTypeName("text"));
 					(yyval.node) = makeTypeCast(n, SystemTypeName("timestamp"), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1640:
-
-/* Line 1806 of yacc.c  */
 #line 10968 "gram.y"
     {
 					/*
@@ -36052,12 +33402,10 @@
 					d = SystemTypeName("timestamp");
 					d->typmods = list_make1(makeIntConst((yyvsp[(3) - (4)].ival), (yylsp[(3) - (4)])));
 					(yyval.node) = makeTypeCast(n, d, (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1641:
-
-/* Line 1806 of yacc.c  */
 #line 10981 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36070,12 +33418,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1642:
-
-/* Line 1806 of yacc.c  */
 #line 10994 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36088,12 +33434,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1643:
-
-/* Line 1806 of yacc.c  */
 #line 11007 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36106,12 +33450,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1644:
-
-/* Line 1806 of yacc.c  */
 #line 11020 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36124,12 +33466,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1645:
-
-/* Line 1806 of yacc.c  */
 #line 11033 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36142,12 +33482,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1646:
-
-/* Line 1806 of yacc.c  */
 #line 11046 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36160,19 +33498,15 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1647:
-
-/* Line 1806 of yacc.c  */
 #line 11059 "gram.y"
-    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); }
+    { (yyval.node) = makeTypeCast((yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].typnam), (yylsp[(1) - (6)])); ;}
     break;
 
   case 1648:
-
-/* Line 1806 of yacc.c  */
 #line 11061 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36185,12 +33519,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1649:
-
-/* Line 1806 of yacc.c  */
 #line 11074 "gram.y"
     {
 					/* overlay(A PLACING B FROM C FOR D) is converted to
@@ -36208,12 +33540,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1650:
-
-/* Line 1806 of yacc.c  */
 #line 11092 "gram.y"
     {
 					/* position(A in B) is converted to position(B, A) */
@@ -36227,12 +33557,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1651:
-
-/* Line 1806 of yacc.c  */
 #line 11106 "gram.y"
     {
 					/* substring(A from B for C) is converted to
@@ -36248,12 +33576,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1652:
-
-/* Line 1806 of yacc.c  */
 #line 11122 "gram.y"
     {
 					/* TREAT(expr AS target) converts expr of a particular type to target,
@@ -36275,12 +33601,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1653:
-
-/* Line 1806 of yacc.c  */
 #line 11144 "gram.y"
     {
 					/* various trim expressions are defined in SQL92
@@ -36296,12 +33620,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1654:
-
-/* Line 1806 of yacc.c  */
 #line 11160 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36314,12 +33636,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1655:
-
-/* Line 1806 of yacc.c  */
 #line 11173 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36332,12 +33652,10 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1656:
-
-/* Line 1806 of yacc.c  */
 #line 11186 "gram.y"
     {
 					FuncCall *n = makeNode(FuncCall);
@@ -36350,33 +33668,27 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1657:
-
-/* Line 1806 of yacc.c  */
 #line 11199 "gram.y"
     {
 					(yyval.node) = (Node *) makeSimpleA_Expr(AEXPR_NULLIF, "=", (yyvsp[(3) - (6)].node), (yyvsp[(5) - (6)].node), (yylsp[(1) - (6)]));
-				}
+				;}
     break;
 
   case 1658:
-
-/* Line 1806 of yacc.c  */
 #line 11203 "gram.y"
     {
 					CoalesceExpr *c = makeNode(CoalesceExpr);
 					c->args = (yyvsp[(3) - (4)].list);
 					c->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)c;
-				}
+				;}
     break;
 
   case 1659:
-
-/* Line 1806 of yacc.c  */
 #line 11210 "gram.y"
     {
 					MinMaxExpr *v = makeNode(MinMaxExpr);
@@ -36384,12 +33696,10 @@
 					v->op = IS_GREATEST;
 					v->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)v;
-				}
+				;}
     break;
 
   case 1660:
-
-/* Line 1806 of yacc.c  */
 #line 11218 "gram.y"
     {
 					MinMaxExpr *v = makeNode(MinMaxExpr);
@@ -36397,57 +33707,45 @@
 					v->op = IS_LEAST;
 					v->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)v;
-				}
+				;}
     break;
 
   case 1661:
-
-/* Line 1806 of yacc.c  */
 #line 11226 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLCONCAT, NULL, NIL, (yyvsp[(3) - (4)].list), (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1662:
-
-/* Line 1806 of yacc.c  */
 #line 11230 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (5)].str), NIL, NIL, (yylsp[(1) - (5)]));
-				}
+				;}
     break;
 
   case 1663:
-
-/* Line 1806 of yacc.c  */
 #line 11234 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (7)].str), (yyvsp[(6) - (7)].list), NIL, (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1664:
-
-/* Line 1806 of yacc.c  */
 #line 11238 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (7)].str), NIL, (yyvsp[(6) - (7)].list), (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1665:
-
-/* Line 1806 of yacc.c  */
 #line 11242 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLELEMENT, (yyvsp[(4) - (9)].str), (yyvsp[(6) - (9)].list), (yyvsp[(8) - (9)].list), (yylsp[(1) - (9)]));
-				}
+				;}
     break;
 
   case 1666:
-
-/* Line 1806 of yacc.c  */
 #line 11246 "gram.y"
     {
 					/* xmlexists(A PASSING [BY REF] B [BY REF]) is
@@ -36462,21 +33760,17 @@
 					n->over = NULL;
 					n->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1667:
-
-/* Line 1806 of yacc.c  */
 #line 11261 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLFOREST, NULL, (yyvsp[(3) - (4)].list), NIL, (yylsp[(1) - (4)]));
-				}
+				;}
     break;
 
   case 1668:
-
-/* Line 1806 of yacc.c  */
 #line 11265 "gram.y"
     {
 					XmlExpr *x = (XmlExpr *)
@@ -36485,40 +33779,32 @@
 									(yylsp[(1) - (6)]));
 					x->xmloption = (yyvsp[(3) - (6)].ival);
 					(yyval.node) = (Node *)x;
-				}
+				;}
     break;
 
   case 1669:
-
-/* Line 1806 of yacc.c  */
 #line 11274 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[(4) - (5)].str), NULL, NIL, (yylsp[(1) - (5)]));
-				}
+				;}
     break;
 
   case 1670:
-
-/* Line 1806 of yacc.c  */
 #line 11278 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLPI, (yyvsp[(4) - (7)].str), NULL, list_make1((yyvsp[(6) - (7)].node)), (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1671:
-
-/* Line 1806 of yacc.c  */
 #line 11282 "gram.y"
     {
 					(yyval.node) = makeXmlExpr(IS_XMLROOT, NULL, NIL,
 									 list_make3((yyvsp[(3) - (7)].node), (yyvsp[(5) - (7)].node), (yyvsp[(6) - (7)].node)), (yylsp[(1) - (7)]));
-				}
+				;}
     break;
 
   case 1672:
-
-/* Line 1806 of yacc.c  */
 #line 11287 "gram.y"
     {
 					XmlSerialize *n = makeNode(XmlSerialize);
@@ -36527,75 +33813,55 @@
 					n->typeName = (yyvsp[(6) - (7)].typnam);
 					n->location = (yylsp[(1) - (7)]);
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1673:
-
-/* Line 1806 of yacc.c  */
 #line 11301 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1674:
-
-/* Line 1806 of yacc.c  */
 #line 11303 "gram.y"
-    { (yyval.node) = makeNullAConst(-1); }
+    { (yyval.node) = makeNullAConst(-1); ;}
     break;
 
   case 1675:
-
-/* Line 1806 of yacc.c  */
 #line 11307 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_YES, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_YES, -1); ;}
     break;
 
   case 1676:
-
-/* Line 1806 of yacc.c  */
 #line 11309 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_NO, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_NO, -1); ;}
     break;
 
   case 1677:
-
-/* Line 1806 of yacc.c  */
 #line 11311 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_NO_VALUE, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_NO_VALUE, -1); ;}
     break;
 
   case 1678:
-
-/* Line 1806 of yacc.c  */
 #line 11313 "gram.y"
-    { (yyval.node) = makeIntConst(XML_STANDALONE_OMITTED, -1); }
+    { (yyval.node) = makeIntConst(XML_STANDALONE_OMITTED, -1); ;}
     break;
 
   case 1679:
-
-/* Line 1806 of yacc.c  */
 #line 11316 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1680:
-
-/* Line 1806 of yacc.c  */
 #line 11319 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1681:
-
-/* Line 1806 of yacc.c  */
 #line 11320 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1682:
-
-/* Line 1806 of yacc.c  */
 #line 11324 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -36603,12 +33869,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *) (yyvsp[(1) - (3)].node);
 					(yyval.target)->location = (yylsp[(1) - (3)]);
-				}
+				;}
     break;
 
   case 1683:
-
-/* Line 1806 of yacc.c  */
 #line 11332 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -36616,129 +33880,97 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *) (yyvsp[(1) - (1)].node);
 					(yyval.target)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1684:
-
-/* Line 1806 of yacc.c  */
 #line 11341 "gram.y"
-    { (yyval.ival) = XMLOPTION_DOCUMENT; }
+    { (yyval.ival) = XMLOPTION_DOCUMENT; ;}
     break;
 
   case 1685:
-
-/* Line 1806 of yacc.c  */
 #line 11342 "gram.y"
-    { (yyval.ival) = XMLOPTION_CONTENT; }
+    { (yyval.ival) = XMLOPTION_CONTENT; ;}
     break;
 
   case 1686:
-
-/* Line 1806 of yacc.c  */
 #line 11345 "gram.y"
-    { (yyval.boolean) = TRUE; }
+    { (yyval.boolean) = TRUE; ;}
     break;
 
   case 1687:
-
-/* Line 1806 of yacc.c  */
 #line 11346 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1688:
-
-/* Line 1806 of yacc.c  */
 #line 11347 "gram.y"
-    { (yyval.boolean) = FALSE; }
+    { (yyval.boolean) = FALSE; ;}
     break;
 
   case 1689:
-
-/* Line 1806 of yacc.c  */
 #line 11353 "gram.y"
     {
 					(yyval.node) = (yyvsp[(2) - (2)].node);
-				}
+				;}
     break;
 
   case 1690:
-
-/* Line 1806 of yacc.c  */
 #line 11357 "gram.y"
     {
 					(yyval.node) = (yyvsp[(2) - (4)].node);
-				}
+				;}
     break;
 
   case 1691:
-
-/* Line 1806 of yacc.c  */
 #line 11361 "gram.y"
     {
 					(yyval.node) = (yyvsp[(4) - (4)].node);
-				}
+				;}
     break;
 
   case 1692:
-
-/* Line 1806 of yacc.c  */
 #line 11365 "gram.y"
     {
 					(yyval.node) = (yyvsp[(4) - (6)].node);
-				}
+				;}
     break;
 
   case 1693:
-
-/* Line 1806 of yacc.c  */
 #line 11375 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1694:
-
-/* Line 1806 of yacc.c  */
 #line 11376 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1695:
-
-/* Line 1806 of yacc.c  */
 #line 11380 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].windef)); ;}
     break;
 
   case 1696:
-
-/* Line 1806 of yacc.c  */
 #line 11382 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].windef)); ;}
     break;
 
   case 1697:
-
-/* Line 1806 of yacc.c  */
 #line 11387 "gram.y"
     {
 					WindowDef *n = (yyvsp[(3) - (3)].windef);
 					n->name = (yyvsp[(1) - (3)].str);
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1698:
-
-/* Line 1806 of yacc.c  */
 #line 11395 "gram.y"
-    { (yyval.windef) = (yyvsp[(2) - (2)].windef); }
+    { (yyval.windef) = (yyvsp[(2) - (2)].windef); ;}
     break;
 
   case 1699:
-
-/* Line 1806 of yacc.c  */
 #line 11397 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -36751,19 +33983,15 @@
 					n->endOffset = NULL;
 					n->location = (yylsp[(2) - (2)]);
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1700:
-
-/* Line 1806 of yacc.c  */
 #line 11410 "gram.y"
-    { (yyval.windef) = NULL; }
+    { (yyval.windef) = NULL; ;}
     break;
 
   case 1701:
-
-/* Line 1806 of yacc.c  */
 #line 11415 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -36777,40 +34005,30 @@
 					n->endOffset = (yyvsp[(5) - (6)].windef)->endOffset;
 					n->location = (yylsp[(1) - (6)]);
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1702:
-
-/* Line 1806 of yacc.c  */
 #line 11440 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1703:
-
-/* Line 1806 of yacc.c  */
 #line 11441 "gram.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 1704:
-
-/* Line 1806 of yacc.c  */
 #line 11444 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (3)].list); }
+    { (yyval.list) = (yyvsp[(3) - (3)].list); ;}
     break;
 
   case 1705:
-
-/* Line 1806 of yacc.c  */
 #line 11445 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1706:
-
-/* Line 1806 of yacc.c  */
 #line 11457 "gram.y"
     {
 					WindowDef *n = (yyvsp[(2) - (2)].windef);
@@ -36828,23 +34046,19 @@
 								 errmsg("RANGE FOLLOWING is only supported with UNBOUNDED"),
 								 parser_errposition((yylsp[(1) - (2)]))));
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1707:
-
-/* Line 1806 of yacc.c  */
 #line 11475 "gram.y"
     {
 					WindowDef *n = (yyvsp[(2) - (2)].windef);
 					n->frameOptions |= FRAMEOPTION_NONDEFAULT | FRAMEOPTION_ROWS;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1708:
-
-/* Line 1806 of yacc.c  */
 #line 11481 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -36852,12 +34066,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1709:
-
-/* Line 1806 of yacc.c  */
 #line 11491 "gram.y"
     {
 					WindowDef *n = (yyvsp[(1) - (1)].windef);
@@ -36874,12 +34086,10 @@
 								 parser_errposition((yylsp[(1) - (1)]))));
 					n->frameOptions |= FRAMEOPTION_END_CURRENT_ROW;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1710:
-
-/* Line 1806 of yacc.c  */
 #line 11508 "gram.y"
     {
 					WindowDef *n1 = (yyvsp[(2) - (4)].windef);
@@ -36916,12 +34126,10 @@
 					n1->frameOptions = frameOptions;
 					n1->endOffset = n2->startOffset;
 					(yyval.windef) = n1;
-				}
+				;}
     break;
 
   case 1711:
-
-/* Line 1806 of yacc.c  */
 #line 11553 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -36929,12 +34137,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1712:
-
-/* Line 1806 of yacc.c  */
 #line 11561 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -36942,12 +34148,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1713:
-
-/* Line 1806 of yacc.c  */
 #line 11569 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -36955,12 +34159,10 @@
 					n->startOffset = NULL;
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1714:
-
-/* Line 1806 of yacc.c  */
 #line 11577 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -36968,12 +34170,10 @@
 					n->startOffset = (yyvsp[(1) - (2)].node);
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1715:
-
-/* Line 1806 of yacc.c  */
 #line 11585 "gram.y"
     {
 					WindowDef *n = makeNode(WindowDef);
@@ -36981,246 +34181,180 @@
 					n->startOffset = (yyvsp[(1) - (2)].node);
 					n->endOffset = NULL;
 					(yyval.windef) = n;
-				}
+				;}
     break;
 
   case 1716:
-
-/* Line 1806 of yacc.c  */
 #line 11605 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1717:
-
-/* Line 1806 of yacc.c  */
 #line 11606 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1718:
-
-/* Line 1806 of yacc.c  */
 #line 11607 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); }
+    { (yyval.list) = lappend((yyvsp[(2) - (5)].list), (yyvsp[(4) - (5)].node)); ;}
     break;
 
   case 1719:
-
-/* Line 1806 of yacc.c  */
 #line 11610 "gram.y"
-    { (yyval.ival) = ANY_SUBLINK; }
+    { (yyval.ival) = ANY_SUBLINK; ;}
     break;
 
   case 1720:
-
-/* Line 1806 of yacc.c  */
 #line 11611 "gram.y"
-    { (yyval.ival) = ANY_SUBLINK; }
+    { (yyval.ival) = ANY_SUBLINK; ;}
     break;
 
   case 1721:
-
-/* Line 1806 of yacc.c  */
 #line 11612 "gram.y"
-    { (yyval.ival) = ALL_SUBLINK; }
+    { (yyval.ival) = ALL_SUBLINK; ;}
     break;
 
   case 1722:
-
-/* Line 1806 of yacc.c  */
 #line 11615 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1723:
-
-/* Line 1806 of yacc.c  */
 #line 11616 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1724:
-
-/* Line 1806 of yacc.c  */
 #line 11619 "gram.y"
-    { (yyval.str) = "+"; }
+    { (yyval.str) = "+"; ;}
     break;
 
   case 1725:
-
-/* Line 1806 of yacc.c  */
 #line 11620 "gram.y"
-    { (yyval.str) = "-"; }
+    { (yyval.str) = "-"; ;}
     break;
 
   case 1726:
-
-/* Line 1806 of yacc.c  */
 #line 11621 "gram.y"
-    { (yyval.str) = "*"; }
+    { (yyval.str) = "*"; ;}
     break;
 
   case 1727:
-
-/* Line 1806 of yacc.c  */
 #line 11622 "gram.y"
-    { (yyval.str) = "/"; }
+    { (yyval.str) = "/"; ;}
     break;
 
   case 1728:
-
-/* Line 1806 of yacc.c  */
 #line 11623 "gram.y"
-    { (yyval.str) = "%"; }
+    { (yyval.str) = "%"; ;}
     break;
 
   case 1729:
-
-/* Line 1806 of yacc.c  */
 #line 11624 "gram.y"
-    { (yyval.str) = "^"; }
+    { (yyval.str) = "^"; ;}
     break;
 
   case 1730:
-
-/* Line 1806 of yacc.c  */
 #line 11625 "gram.y"
-    { (yyval.str) = "<"; }
+    { (yyval.str) = "<"; ;}
     break;
 
   case 1731:
-
-/* Line 1806 of yacc.c  */
 #line 11626 "gram.y"
-    { (yyval.str) = ">"; }
+    { (yyval.str) = ">"; ;}
     break;
 
   case 1732:
-
-/* Line 1806 of yacc.c  */
 #line 11627 "gram.y"
-    { (yyval.str) = "="; }
+    { (yyval.str) = "="; ;}
     break;
 
   case 1733:
-
-/* Line 1806 of yacc.c  */
 #line 11631 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1734:
-
-/* Line 1806 of yacc.c  */
 #line 11633 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1735:
-
-/* Line 1806 of yacc.c  */
 #line 11638 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1736:
-
-/* Line 1806 of yacc.c  */
 #line 11640 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1737:
-
-/* Line 1806 of yacc.c  */
 #line 11645 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1738:
-
-/* Line 1806 of yacc.c  */
 #line 11647 "gram.y"
-    { (yyval.list) = (yyvsp[(3) - (4)].list); }
+    { (yyval.list) = (yyvsp[(3) - (4)].list); ;}
     break;
 
   case 1739:
-
-/* Line 1806 of yacc.c  */
 #line 11649 "gram.y"
-    { (yyval.list) = list_make1(makeString("~~")); }
+    { (yyval.list) = list_make1(makeString("~~")); ;}
     break;
 
   case 1740:
-
-/* Line 1806 of yacc.c  */
 #line 11651 "gram.y"
-    { (yyval.list) = list_make1(makeString("!~~")); }
+    { (yyval.list) = list_make1(makeString("!~~")); ;}
     break;
 
   case 1741:
-
-/* Line 1806 of yacc.c  */
 #line 11653 "gram.y"
-    { (yyval.list) = list_make1(makeString("~~*")); }
+    { (yyval.list) = list_make1(makeString("~~*")); ;}
     break;
 
   case 1742:
-
-/* Line 1806 of yacc.c  */
 #line 11655 "gram.y"
-    { (yyval.list) = list_make1(makeString("!~~*")); }
+    { (yyval.list) = list_make1(makeString("!~~*")); ;}
     break;
 
   case 1743:
-
-/* Line 1806 of yacc.c  */
 #line 11667 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 1744:
-
-/* Line 1806 of yacc.c  */
 #line 11671 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1745:
-
-/* Line 1806 of yacc.c  */
 #line 11678 "gram.y"
     {
 					(yyval.list) = list_make1((yyvsp[(1) - (1)].node));
-				}
+				;}
     break;
 
   case 1746:
-
-/* Line 1806 of yacc.c  */
 #line 11682 "gram.y"
     {
 					(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1747:
-
-/* Line 1806 of yacc.c  */
 #line 11688 "gram.y"
     {
 					(yyval.node) = (yyvsp[(1) - (1)].node);
-				}
+				;}
     break;
 
   case 1748:
-
-/* Line 1806 of yacc.c  */
 #line 11692 "gram.y"
     {
 					NamedArgExpr *na = makeNode(NamedArgExpr);
@@ -37229,206 +34363,154 @@
 					na->argnumber = -1;		/* until determined */
 					na->location = (yylsp[(1) - (3)]);
 					(yyval.node) = (Node *) na;
-				}
+				;}
     break;
 
   case 1749:
-
-/* Line 1806 of yacc.c  */
 #line 11702 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].typnam)); ;}
     break;
 
   case 1750:
-
-/* Line 1806 of yacc.c  */
 #line 11703 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].typnam)); ;}
     break;
 
   case 1751:
-
-/* Line 1806 of yacc.c  */
 #line 11707 "gram.y"
     {
 					(yyval.node) = makeAArrayExpr((yyvsp[(2) - (3)].list), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1752:
-
-/* Line 1806 of yacc.c  */
 #line 11711 "gram.y"
     {
 					(yyval.node) = makeAArrayExpr((yyvsp[(2) - (3)].list), (yylsp[(1) - (3)]));
-				}
+				;}
     break;
 
   case 1753:
-
-/* Line 1806 of yacc.c  */
 #line 11715 "gram.y"
     {
 					(yyval.node) = makeAArrayExpr(NIL, (yylsp[(1) - (2)]));
-				}
+				;}
     break;
 
   case 1754:
-
-/* Line 1806 of yacc.c  */
 #line 11720 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1755:
-
-/* Line 1806 of yacc.c  */
 #line 11721 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1756:
-
-/* Line 1806 of yacc.c  */
 #line 11727 "gram.y"
     {
 					(yyval.list) = list_make2(makeStringConst((yyvsp[(1) - (3)].str), (yylsp[(1) - (3)])), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1757:
-
-/* Line 1806 of yacc.c  */
 #line 11730 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1758:
-
-/* Line 1806 of yacc.c  */
 #line 11737 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1759:
-
-/* Line 1806 of yacc.c  */
 #line 11738 "gram.y"
-    { (yyval.str) = "year"; }
+    { (yyval.str) = "year"; ;}
     break;
 
   case 1760:
-
-/* Line 1806 of yacc.c  */
 #line 11739 "gram.y"
-    { (yyval.str) = "month"; }
+    { (yyval.str) = "month"; ;}
     break;
 
   case 1761:
-
-/* Line 1806 of yacc.c  */
 #line 11740 "gram.y"
-    { (yyval.str) = "day"; }
+    { (yyval.str) = "day"; ;}
     break;
 
   case 1762:
-
-/* Line 1806 of yacc.c  */
 #line 11741 "gram.y"
-    { (yyval.str) = "hour"; }
+    { (yyval.str) = "hour"; ;}
     break;
 
   case 1763:
-
-/* Line 1806 of yacc.c  */
 #line 11742 "gram.y"
-    { (yyval.str) = "minute"; }
+    { (yyval.str) = "minute"; ;}
     break;
 
   case 1764:
-
-/* Line 1806 of yacc.c  */
 #line 11743 "gram.y"
-    { (yyval.str) = "second"; }
+    { (yyval.str) = "second"; ;}
     break;
 
   case 1765:
-
-/* Line 1806 of yacc.c  */
 #line 11744 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1766:
-
-/* Line 1806 of yacc.c  */
 #line 11755 "gram.y"
     {
 					(yyval.list) = list_make4((yyvsp[(1) - (4)].node), (yyvsp[(2) - (4)].node), (yyvsp[(3) - (4)].node), (yyvsp[(4) - (4)].node));
-				}
+				;}
     break;
 
   case 1767:
-
-/* Line 1806 of yacc.c  */
 #line 11759 "gram.y"
     {
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1768:
-
-/* Line 1806 of yacc.c  */
 #line 11766 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1769:
-
-/* Line 1806 of yacc.c  */
 #line 11772 "gram.y"
-    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); }
+    { (yyval.list) = list_make2((yyvsp[(3) - (3)].node), (yyvsp[(1) - (3)].node)); ;}
     break;
 
   case 1770:
-
-/* Line 1806 of yacc.c  */
 #line 11773 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1771:
-
-/* Line 1806 of yacc.c  */
 #line 11790 "gram.y"
     {
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(2) - (3)].node), (yyvsp[(3) - (3)].node));
-				}
+				;}
     break;
 
   case 1772:
-
-/* Line 1806 of yacc.c  */
 #line 11794 "gram.y"
     {
 					/* not legal per SQL99, but might as well allow it */
 					(yyval.list) = list_make3((yyvsp[(1) - (3)].node), (yyvsp[(3) - (3)].node), (yyvsp[(2) - (3)].node));
-				}
+				;}
     break;
 
   case 1773:
-
-/* Line 1806 of yacc.c  */
 #line 11799 "gram.y"
     {
 					(yyval.list) = list_make2((yyvsp[(1) - (2)].node), (yyvsp[(2) - (2)].node));
-				}
+				;}
     break;
 
   case 1774:
-
-/* Line 1806 of yacc.c  */
 #line 11803 "gram.y"
     {
 					/*
@@ -37443,82 +34525,62 @@
 					(yyval.list) = list_make3((yyvsp[(1) - (2)].node), makeIntConst(1, -1),
 									makeTypeCast((yyvsp[(2) - (2)].node),
 												 SystemTypeName("int4"), -1));
-				}
+				;}
     break;
 
   case 1775:
-
-/* Line 1806 of yacc.c  */
 #line 11818 "gram.y"
     {
 					(yyval.list) = (yyvsp[(1) - (1)].list);
-				}
+				;}
     break;
 
   case 1776:
-
-/* Line 1806 of yacc.c  */
 #line 11822 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1777:
-
-/* Line 1806 of yacc.c  */
 #line 11826 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1778:
-
-/* Line 1806 of yacc.c  */
 #line 11829 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1779:
-
-/* Line 1806 of yacc.c  */
 #line 11832 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(3) - (3)].list), (yyvsp[(1) - (3)].node)); ;}
     break;
 
   case 1780:
-
-/* Line 1806 of yacc.c  */
 #line 11833 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (2)].list); }
+    { (yyval.list) = (yyvsp[(2) - (2)].list); ;}
     break;
 
   case 1781:
-
-/* Line 1806 of yacc.c  */
 #line 11834 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 1782:
-
-/* Line 1806 of yacc.c  */
 #line 11838 "gram.y"
     {
 					SubLink *n = makeNode(SubLink);
 					n->subselect = (yyvsp[(1) - (1)].node);
 					/* other fields will be filled later */
 					(yyval.node) = (Node *)n;
-				}
+				;}
     break;
 
   case 1783:
-
-/* Line 1806 of yacc.c  */
 #line 11844 "gram.y"
-    { (yyval.node) = (Node *)(yyvsp[(2) - (3)].list); }
+    { (yyval.node) = (Node *)(yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1784:
-
-/* Line 1806 of yacc.c  */
 #line 11855 "gram.y"
     {
 					CaseExpr *c = makeNode(CaseExpr);
@@ -37528,26 +34590,20 @@
 					c->defresult = (Expr *) (yyvsp[(4) - (5)].node);
 					c->location = (yylsp[(1) - (5)]);
 					(yyval.node) = (Node *)c;
-				}
+				;}
     break;
 
   case 1785:
-
-/* Line 1806 of yacc.c  */
 #line 11868 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1786:
-
-/* Line 1806 of yacc.c  */
 #line 11869 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1787:
-
-/* Line 1806 of yacc.c  */
 #line 11874 "gram.y"
     {
 					CaseWhen *w = makeNode(CaseWhen);
@@ -37555,181 +34611,137 @@
 					w->result = (Expr *) (yyvsp[(4) - (4)].node);
 					w->location = (yylsp[(1) - (4)]);
 					(yyval.node) = (Node *)w;
-				}
+				;}
     break;
 
   case 1788:
-
-/* Line 1806 of yacc.c  */
 #line 11884 "gram.y"
-    { (yyval.node) = (yyvsp[(2) - (2)].node); }
+    { (yyval.node) = (yyvsp[(2) - (2)].node); ;}
     break;
 
   case 1789:
-
-/* Line 1806 of yacc.c  */
 #line 11885 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1790:
-
-/* Line 1806 of yacc.c  */
 #line 11888 "gram.y"
-    { (yyval.node) = (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1791:
-
-/* Line 1806 of yacc.c  */
 #line 11889 "gram.y"
-    { (yyval.node) = NULL; }
+    { (yyval.node) = NULL; ;}
     break;
 
   case 1792:
-
-/* Line 1806 of yacc.c  */
 #line 11893 "gram.y"
     {
 					(yyval.node) = makeColumnRef((yyvsp[(1) - (1)].str), NIL, (yylsp[(1) - (1)]), yyscanner);
-				}
+				;}
     break;
 
   case 1793:
-
-/* Line 1806 of yacc.c  */
 #line 11897 "gram.y"
     {
 					(yyval.node) = makeColumnRef((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].list), (yylsp[(1) - (2)]), yyscanner);
-				}
+				;}
     break;
 
   case 1794:
-
-/* Line 1806 of yacc.c  */
 #line 11904 "gram.y"
     {
 					(yyval.node) = (Node *) makeString((yyvsp[(2) - (2)].str));
-				}
+				;}
     break;
 
   case 1795:
-
-/* Line 1806 of yacc.c  */
 #line 11908 "gram.y"
     {
 					(yyval.node) = (Node *) makeNode(A_Star);
-				}
+				;}
     break;
 
   case 1796:
-
-/* Line 1806 of yacc.c  */
 #line 11912 "gram.y"
     {
 					A_Indices *ai = makeNode(A_Indices);
 					ai->lidx = NULL;
 					ai->uidx = (yyvsp[(2) - (3)].node);
 					(yyval.node) = (Node *) ai;
-				}
+				;}
     break;
 
   case 1797:
-
-/* Line 1806 of yacc.c  */
 #line 11919 "gram.y"
     {
 					A_Indices *ai = makeNode(A_Indices);
 					ai->lidx = (yyvsp[(2) - (5)].node);
 					ai->uidx = (yyvsp[(4) - (5)].node);
 					(yyval.node) = (Node *) ai;
-				}
+				;}
     break;
 
   case 1798:
-
-/* Line 1806 of yacc.c  */
 #line 11928 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1799:
-
-/* Line 1806 of yacc.c  */
 #line 11929 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1800:
-
-/* Line 1806 of yacc.c  */
 #line 11933 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 1801:
-
-/* Line 1806 of yacc.c  */
 #line 11934 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].node)); ;}
     break;
 
   case 1804:
-
-/* Line 1806 of yacc.c  */
 #line 11949 "gram.y"
-    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].node); }
+    { (yyval.node) = (Node *) (yyvsp[(1) - (1)].node); ;}
     break;
 
   case 1805:
-
-/* Line 1806 of yacc.c  */
 #line 11951 "gram.y"
     {
 					SetToDefault *n = makeNode(SetToDefault);
 					n->location = (yylsp[(1) - (1)]);
 					(yyval.node) = (Node *) n;
-				}
+				;}
     break;
 
   case 1806:
-
-/* Line 1806 of yacc.c  */
 #line 11959 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].node)); ;}
     break;
 
   case 1807:
-
-/* Line 1806 of yacc.c  */
 #line 11960 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].node)); ;}
     break;
 
   case 1808:
-
-/* Line 1806 of yacc.c  */
 #line 11968 "gram.y"
-    { (yyval.list) = (yyvsp[(2) - (3)].list); }
+    { (yyval.list) = (yyvsp[(2) - (3)].list); ;}
     break;
 
   case 1809:
-
-/* Line 1806 of yacc.c  */
 #line 11979 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].target)); ;}
     break;
 
   case 1810:
-
-/* Line 1806 of yacc.c  */
 #line 11980 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].target)); ;}
     break;
 
   case 1811:
-
-/* Line 1806 of yacc.c  */
 #line 11984 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -37737,12 +34749,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)(yyvsp[(1) - (3)].node);
 					(yyval.target)->location = (yylsp[(1) - (3)]);
-				}
+				;}
     break;
 
   case 1812:
-
-/* Line 1806 of yacc.c  */
 #line 12000 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -37750,12 +34760,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)(yyvsp[(1) - (2)].node);
 					(yyval.target)->location = (yylsp[(1) - (2)]);
-				}
+				;}
     break;
 
   case 1813:
-
-/* Line 1806 of yacc.c  */
 #line 12008 "gram.y"
     {
 					(yyval.target) = makeNode(ResTarget);
@@ -37763,12 +34771,10 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)(yyvsp[(1) - (1)].node);
 					(yyval.target)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1814:
-
-/* Line 1806 of yacc.c  */
 #line 12016 "gram.y"
     {
 					ColumnRef *n = makeNode(ColumnRef);
@@ -37780,35 +34786,27 @@
 					(yyval.target)->indirection = NIL;
 					(yyval.target)->val = (Node *)n;
 					(yyval.target)->location = (yylsp[(1) - (1)]);
-				}
+				;}
     break;
 
   case 1815:
-
-/* Line 1806 of yacc.c  */
 #line 12037 "gram.y"
-    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); }
+    { (yyval.list) = list_make1((yyvsp[(1) - (1)].range)); ;}
     break;
 
   case 1816:
-
-/* Line 1806 of yacc.c  */
 #line 12038 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].range)); ;}
     break;
 
   case 1817:
-
-/* Line 1806 of yacc.c  */
 #line 12050 "gram.y"
     {
 					(yyval.range) = makeRangeVar(NULL, (yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1818:
-
-/* Line 1806 of yacc.c  */
 #line 12054 "gram.y"
     {
 					check_qualified_name((yyvsp[(2) - (2)].list), yyscanner);
@@ -37833,121 +34831,91 @@
 									 parser_errposition((yylsp[(1) - (2)]))));
 							break;
 					}
-				}
+				;}
     break;
 
   case 1819:
-
-/* Line 1806 of yacc.c  */
 #line 12081 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1820:
-
-/* Line 1806 of yacc.c  */
 #line 12083 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 1821:
-
-/* Line 1806 of yacc.c  */
 #line 12087 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1822:
-
-/* Line 1806 of yacc.c  */
 #line 12090 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1823:
-
-/* Line 1806 of yacc.c  */
 #line 12093 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1824:
-
-/* Line 1806 of yacc.c  */
 #line 12095 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1825:
-
-/* Line 1806 of yacc.c  */
 #line 12097 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1826:
-
-/* Line 1806 of yacc.c  */
 #line 12099 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1827:
-
-/* Line 1806 of yacc.c  */
 #line 12110 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1828:
-
-/* Line 1806 of yacc.c  */
 #line 12112 "gram.y"
     {
 						(yyval.list) = check_func_name(lcons(makeString((yyvsp[(1) - (2)].str)), (yyvsp[(2) - (2)].list)),
 											 yyscanner);
-					}
+					;}
     break;
 
   case 1829:
-
-/* Line 1806 of yacc.c  */
 #line 12123 "gram.y"
     {
 					(yyval.node) = makeIntConst((yyvsp[(1) - (1)].ival), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1830:
-
-/* Line 1806 of yacc.c  */
 #line 12127 "gram.y"
     {
 					(yyval.node) = makeFloatConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1831:
-
-/* Line 1806 of yacc.c  */
 #line 12131 "gram.y"
     {
 					(yyval.node) = makeStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1832:
-
-/* Line 1806 of yacc.c  */
 #line 12135 "gram.y"
     {
 					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1833:
-
-/* Line 1806 of yacc.c  */
 #line 12139 "gram.y"
     {
 					/* This is a bit constant per SQL99:
@@ -37956,24 +34924,20 @@
 					 * <bit string literal> or a <hex string literal>.
 					 */
 					(yyval.node) = makeBitStringConst((yyvsp[(1) - (1)].str), (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1834:
-
-/* Line 1806 of yacc.c  */
 #line 12148 "gram.y"
     {
 					/* generic type 'literal' syntax */
 					TypeName *t = makeTypeNameFromNameList((yyvsp[(1) - (2)].list));
 					t->location = (yylsp[(1) - (2)]);
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), t);
-				}
+				;}
     break;
 
   case 1835:
-
-/* Line 1806 of yacc.c  */
 #line 12155 "gram.y"
     {
 					/* generic syntax with a type modifier */
@@ -37998,32 +34962,26 @@
 					t->typmods = (yyvsp[(3) - (5)].list);
 					t->location = (yylsp[(1) - (5)]);
 					(yyval.node) = makeStringConstCast((yyvsp[(5) - (5)].str), (yylsp[(5) - (5)]), t);
-				}
+				;}
     break;
 
   case 1836:
-
-/* Line 1806 of yacc.c  */
 #line 12180 "gram.y"
     {
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (2)].str), (yylsp[(2) - (2)]), (yyvsp[(1) - (2)].typnam));
-				}
+				;}
     break;
 
   case 1837:
-
-/* Line 1806 of yacc.c  */
 #line 12184 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (3)].typnam);
 					t->typmods = (yyvsp[(3) - (3)].list);
 					(yyval.node) = makeStringConstCast((yyvsp[(2) - (3)].str), (yylsp[(2) - (3)]), t);
-				}
+				;}
     break;
 
   case 1838:
-
-/* Line 1806 of yacc.c  */
 #line 12190 "gram.y"
     {
 					TypeName *t = (yyvsp[(1) - (6)].typnam);
@@ -38040,214 +34998,150 @@
 						t->typmods = list_make2(makeIntConst(INTERVAL_FULL_RANGE, -1),
 												makeIntConst((yyvsp[(3) - (6)].ival), (yylsp[(3) - (6)])));
 					(yyval.node) = makeStringConstCast((yyvsp[(5) - (6)].str), (yylsp[(5) - (6)]), t);
-				}
+				;}
     break;
 
   case 1839:
-
-/* Line 1806 of yacc.c  */
 #line 12207 "gram.y"
     {
 					(yyval.node) = makeBoolAConst(TRUE, (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1840:
-
-/* Line 1806 of yacc.c  */
 #line 12211 "gram.y"
     {
 					(yyval.node) = makeBoolAConst(FALSE, (yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1841:
-
-/* Line 1806 of yacc.c  */
 #line 12215 "gram.y"
     {
 					(yyval.node) = makeNullAConst((yylsp[(1) - (1)]));
-				}
+				;}
     break;
 
   case 1842:
-
-/* Line 1806 of yacc.c  */
 #line 12220 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (1)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
     break;
 
   case 1843:
-
-/* Line 1806 of yacc.c  */
 #line 12221 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1844:
-
-/* Line 1806 of yacc.c  */
 #line 12222 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1845:
-
-/* Line 1806 of yacc.c  */
 #line 12225 "gram.y"
-    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); }
+    { (yyval.list) = list_make1(makeString((yyvsp[(1) - (1)].str))); ;}
     break;
 
   case 1846:
-
-/* Line 1806 of yacc.c  */
 #line 12227 "gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); }
+    { (yyval.list) = lappend((yyvsp[(1) - (3)].list), makeString((yyvsp[(3) - (3)].str))); ;}
     break;
 
   case 1847:
-
-/* Line 1806 of yacc.c  */
 #line 12230 "gram.y"
-    { (yyval.ival) = (yyvsp[(1) - (1)].ival); }
+    { (yyval.ival) = (yyvsp[(1) - (1)].ival); ;}
     break;
 
   case 1848:
-
-/* Line 1806 of yacc.c  */
 #line 12231 "gram.y"
-    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); }
+    { (yyval.ival) = + (yyvsp[(2) - (2)].ival); ;}
     break;
 
   case 1849:
-
-/* Line 1806 of yacc.c  */
 #line 12232 "gram.y"
-    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); }
+    { (yyval.ival) = - (yyvsp[(2) - (2)].ival); ;}
     break;
 
   case 1850:
-
-/* Line 1806 of yacc.c  */
 #line 12248 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1851:
-
-/* Line 1806 of yacc.c  */
 #line 12249 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1852:
-
-/* Line 1806 of yacc.c  */
 #line 12250 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1853:
-
-/* Line 1806 of yacc.c  */
 #line 12255 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1854:
-
-/* Line 1806 of yacc.c  */
 #line 12256 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1855:
-
-/* Line 1806 of yacc.c  */
 #line 12257 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1856:
-
-/* Line 1806 of yacc.c  */
 #line 12262 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1857:
-
-/* Line 1806 of yacc.c  */
 #line 12263 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1858:
-
-/* Line 1806 of yacc.c  */
 #line 12264 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1859:
-
-/* Line 1806 of yacc.c  */
 #line 12265 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1860:
-
-/* Line 1806 of yacc.c  */
 #line 12271 "gram.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1861:
-
-/* Line 1806 of yacc.c  */
 #line 12272 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1862:
-
-/* Line 1806 of yacc.c  */
 #line 12273 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1863:
-
-/* Line 1806 of yacc.c  */
 #line 12274 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
   case 1864:
-
-/* Line 1806 of yacc.c  */
 #line 12275 "gram.y"
-    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); }
+    { (yyval.str) = pstrdup((yyvsp[(1) - (1)].keyword)); ;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 38238 "gram.c"
+/* Line 1267 of yacc.c.  */
+#line 35143 "gram.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -38276,10 +35170,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -38287,44 +35177,45 @@
 #if ! YYERROR_VERBOSE
       yyerror (&yylloc, yyscanner, YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (&yylloc, yyscanner, yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (&yylloc, yyscanner, yymsg);
+	  }
+	else
+	  {
+	    yyerror (&yylloc, yyscanner, YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
-  yyerror_range[1] = yylloc;
+  yyerror_range[0] = yylloc;
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -38341,7 +35232,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -38357,7 +35248,7 @@
   if (/*CONSTCOND*/ 0)
      goto yyerrorlab;
 
-  yyerror_range[1] = yylsp[1-yylen];
+  yyerror_range[0] = yylsp[1-yylen];
   /* Do not reclaim the symbols of the rule which action triggered
      this YYERROR.  */
   YYPOPSTACK (yylen);
@@ -38376,7 +35267,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -38391,7 +35282,7 @@
       if (yyssp == yyss)
 	YYABORT;
 
-      yyerror_range[1] = *yylsp;
+      yyerror_range[0] = *yylsp;
       yydestruct ("Error: popping",
 		  yystos[yystate], yyvsp, yylsp, yyscanner);
       YYPOPSTACK (1);
@@ -38399,12 +35290,15 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
-  yyerror_range[2] = yylloc;
+  yyerror_range[1] = yylloc;
   /* Using YYLLOC is tempting, but would change the location of
-     the lookahead.  YYLOC is available though.  */
-  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
+     the look-ahead.  YYLOC is available though.  */
+  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
   *++yylsp = yyloc;
 
   /* Shift the error token.  */
@@ -38428,7 +35322,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -38439,14 +35333,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, &yylloc, yyscanner);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, &yylloc, yyscanner);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -38470,8 +35359,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 12728 "gram.y"
 
 
diff -Naur postgresql-9.2.13/src/backend/parser/gram.h postgresql/src/backend/parser/gram.h
--- postgresql-9.2.13/src/backend/parser/gram.h	2015-06-09 12:48:18.000000000 -0700
+++ postgresql/src/backend/parser/gram.h	2015-07-01 18:06:54.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton interface for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,11 +29,10 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -451,16 +453,427 @@
      UMINUS = 669
    };
 #endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define ABORT_P 269
+#define ABSOLUTE_P 270
+#define ACCESS 271
+#define ACTION 272
+#define ADD_P 273
+#define ADMIN 274
+#define AFTER 275
+#define AGGREGATE 276
+#define ALL 277
+#define ALSO 278
+#define ALTER 279
+#define ALWAYS 280
+#define ANALYSE 281
+#define ANALYZE 282
+#define AND 283
+#define ANY 284
+#define ARRAY 285
+#define AS 286
+#define ASC 287
+#define ASSERTION 288
+#define ASSIGNMENT 289
+#define ASYMMETRIC 290
+#define AT 291
+#define ATTRIBUTE 292
+#define AUTHORIZATION 293
+#define BACKWARD 294
+#define BEFORE 295
+#define BEGIN_P 296
+#define BETWEEN 297
+#define BIGINT 298
+#define BINARY 299
+#define BIT 300
+#define BOOLEAN_P 301
+#define BOTH 302
+#define BY 303
+#define CACHE 304
+#define CALLED 305
+#define CASCADE 306
+#define CASCADED 307
+#define CASE 308
+#define CAST 309
+#define CATALOG_P 310
+#define CHAIN 311
+#define CHAR_P 312
+#define CHARACTER 313
+#define CHARACTERISTICS 314
+#define CHECK 315
+#define CHECKPOINT 316
+#define CLASS 317
+#define CLOSE 318
+#define CLUSTER 319
+#define COALESCE 320
+#define COLLATE 321
+#define COLLATION 322
+#define COLUMN 323
+#define COMMENT 324
+#define COMMENTS 325
+#define COMMIT 326
+#define COMMITTED 327
+#define CONCURRENTLY 328
+#define CONFIGURATION 329
+#define CONNECTION 330
+#define CONSTRAINT 331
+#define CONSTRAINTS 332
+#define CONTENT_P 333
+#define CONTINUE_P 334
+#define CONVERSION_P 335
+#define COPY 336
+#define COST 337
+#define CREATE 338
+#define CROSS 339
+#define CSV 340
+#define CURRENT_P 341
+#define CURRENT_CATALOG 342
+#define CURRENT_DATE 343
+#define CURRENT_ROLE 344
+#define CURRENT_SCHEMA 345
+#define CURRENT_TIME 346
+#define CURRENT_TIMESTAMP 347
+#define CURRENT_USER 348
+#define CURSOR 349
+#define CYCLE 350
+#define DATA_P 351
+#define DATABASE 352
+#define DAY_P 353
+#define DEALLOCATE 354
+#define DEC 355
+#define DECIMAL_P 356
+#define DECLARE 357
+#define DEFAULT 358
+#define DEFAULTS 359
+#define DEFERRABLE 360
+#define DEFERRED 361
+#define DEFINER 362
+#define DELETE_P 363
+#define DELIMITER 364
+#define DELIMITERS 365
+#define DESC 366
+#define DICTIONARY 367
+#define DISABLE_P 368
+#define DISCARD 369
+#define DISTINCT 370
+#define DO 371
+#define DOCUMENT_P 372
+#define DOMAIN_P 373
+#define DOUBLE_P 374
+#define DROP 375
+#define EACH 376
+#define ELSE 377
+#define ENABLE_P 378
+#define ENCODING 379
+#define ENCRYPTED 380
+#define END_P 381
+#define ENUM_P 382
+#define ESCAPE 383
+#define EXCEPT 384
+#define EXCLUDE 385
+#define EXCLUDING 386
+#define EXCLUSIVE 387
+#define EXECUTE 388
+#define EXISTS 389
+#define EXPLAIN 390
+#define EXTENSION 391
+#define EXTERNAL 392
+#define EXTRACT 393
+#define FALSE_P 394
+#define FAMILY 395
+#define FETCH 396
+#define FIRST_P 397
+#define FLOAT_P 398
+#define FOLLOWING 399
+#define FOR 400
+#define FORCE 401
+#define FOREIGN 402
+#define FORWARD 403
+#define FREEZE 404
+#define FROM 405
+#define FULL 406
+#define FUNCTION 407
+#define FUNCTIONS 408
+#define GLOBAL 409
+#define GRANT 410
+#define GRANTED 411
+#define GREATEST 412
+#define GROUP_P 413
+#define HANDLER 414
+#define HAVING 415
+#define HEADER_P 416
+#define HOLD 417
+#define HOUR_P 418
+#define IDENTITY_P 419
+#define IF_P 420
+#define ILIKE 421
+#define IMMEDIATE 422
+#define IMMUTABLE 423
+#define IMPLICIT_P 424
+#define IN_P 425
+#define INCLUDING 426
+#define INCREMENT 427
+#define INDEX 428
+#define INDEXES 429
+#define INHERIT 430
+#define INHERITS 431
+#define INITIALLY 432
+#define INLINE_P 433
+#define INNER_P 434
+#define INOUT 435
+#define INPUT_P 436
+#define INSENSITIVE 437
+#define INSERT 438
+#define INSTEAD 439
+#define INT_P 440
+#define INTEGER 441
+#define INTERSECT 442
+#define INTERVAL 443
+#define INTO 444
+#define INVOKER 445
+#define IS 446
+#define ISNULL 447
+#define ISOLATION 448
+#define JOIN 449
+#define KEY 450
+#define LABEL 451
+#define LANGUAGE 452
+#define LARGE_P 453
+#define LAST_P 454
+#define LC_COLLATE_P 455
+#define LC_CTYPE_P 456
+#define LEADING 457
+#define LEAKPROOF 458
+#define LEAST 459
+#define LEFT 460
+#define LEVEL 461
+#define LIKE 462
+#define LIMIT 463
+#define LISTEN 464
+#define LOAD 465
+#define LOCAL 466
+#define LOCALTIME 467
+#define LOCALTIMESTAMP 468
+#define LOCATION 469
+#define LOCK_P 470
+#define MAPPING 471
+#define MATCH 472
+#define MAXVALUE 473
+#define MINUTE_P 474
+#define MINVALUE 475
+#define MODE 476
+#define MONTH_P 477
+#define MOVE 478
+#define NAME_P 479
+#define NAMES 480
+#define NATIONAL 481
+#define NATURAL 482
+#define NCHAR 483
+#define NEXT 484
+#define NO 485
+#define NONE 486
+#define NOT 487
+#define NOTHING 488
+#define NOTIFY 489
+#define NOTNULL 490
+#define NOWAIT 491
+#define NULL_P 492
+#define NULLIF 493
+#define NULLS_P 494
+#define NUMERIC 495
+#define OBJECT_P 496
+#define OF 497
+#define OFF 498
+#define OFFSET 499
+#define OIDS 500
+#define ON 501
+#define ONLY 502
+#define OPERATOR 503
+#define OPTION 504
+#define OPTIONS 505
+#define OR 506
+#define ORDER 507
+#define OUT_P 508
+#define OUTER_P 509
+#define OVER 510
+#define OVERLAPS 511
+#define OVERLAY 512
+#define OWNED 513
+#define OWNER 514
+#define PARSER 515
+#define PARTIAL 516
+#define PARTITION 517
+#define PASSING 518
+#define PASSWORD 519
+#define PLACING 520
+#define PLANS 521
+#define POSITION 522
+#define PRECEDING 523
+#define PRECISION 524
+#define PRESERVE 525
+#define PREPARE 526
+#define PREPARED 527
+#define PRIMARY 528
+#define PRIOR 529
+#define PRIVILEGES 530
+#define PROCEDURAL 531
+#define PROCEDURE 532
+#define QUOTE 533
+#define RANGE 534
+#define READ 535
+#define REAL 536
+#define REASSIGN 537
+#define RECHECK 538
+#define RECURSIVE 539
+#define REF 540
+#define REFERENCES 541
+#define REINDEX 542
+#define RELATIVE_P 543
+#define RELEASE 544
+#define RENAME 545
+#define REPEATABLE 546
+#define REPLACE 547
+#define REPLICA 548
+#define RESET 549
+#define RESTART 550
+#define RESTRICT 551
+#define RETURNING 552
+#define RETURNS 553
+#define REVOKE 554
+#define RIGHT 555
+#define ROLE 556
+#define ROLLBACK 557
+#define ROW 558
+#define ROWS 559
+#define RULE 560
+#define SAVEPOINT 561
+#define SCHEMA 562
+#define SCROLL 563
+#define SEARCH 564
+#define SECOND_P 565
+#define SECURITY 566
+#define SELECT 567
+#define SEQUENCE 568
+#define SEQUENCES 569
+#define SERIALIZABLE 570
+#define SERVER 571
+#define SESSION 572
+#define SESSION_USER 573
+#define SET 574
+#define SETOF 575
+#define SHARE 576
+#define SHOW 577
+#define SIMILAR 578
+#define SIMPLE 579
+#define SMALLINT 580
+#define SNAPSHOT 581
+#define SOME 582
+#define STABLE 583
+#define STANDALONE_P 584
+#define START 585
+#define STATEMENT 586
+#define STATISTICS 587
+#define STDIN 588
+#define STDOUT 589
+#define STORAGE 590
+#define STRICT_P 591
+#define STRIP_P 592
+#define SUBSTRING 593
+#define SYMMETRIC 594
+#define SYSID 595
+#define SYSTEM_P 596
+#define TABLE 597
+#define TABLES 598
+#define TABLESPACE 599
+#define TEMP 600
+#define TEMPLATE 601
+#define TEMPORARY 602
+#define TEXT_P 603
+#define THEN 604
+#define TIME 605
+#define TIMESTAMP 606
+#define TO 607
+#define TRAILING 608
+#define TRANSACTION 609
+#define TREAT 610
+#define TRIGGER 611
+#define TRIM 612
+#define TRUE_P 613
+#define TRUNCATE 614
+#define TRUSTED 615
+#define TYPE_P 616
+#define TYPES_P 617
+#define UNBOUNDED 618
+#define UNCOMMITTED 619
+#define UNENCRYPTED 620
+#define UNION 621
+#define UNIQUE 622
+#define UNKNOWN 623
+#define UNLISTEN 624
+#define UNLOGGED 625
+#define UNTIL 626
+#define UPDATE 627
+#define USER 628
+#define USING 629
+#define VACUUM 630
+#define VALID 631
+#define VALIDATE 632
+#define VALIDATOR 633
+#define VALUE_P 634
+#define VALUES 635
+#define VARCHAR 636
+#define VARIADIC 637
+#define VARYING 638
+#define VERBOSE 639
+#define VERSION_P 640
+#define VIEW 641
+#define VOLATILE 642
+#define WHEN 643
+#define WHERE 644
+#define WHITESPACE_P 645
+#define WINDOW 646
+#define WITH 647
+#define WITHOUT 648
+#define WORK 649
+#define WRAPPER 650
+#define WRITE 651
+#define XML_P 652
+#define XMLATTRIBUTES 653
+#define XMLCONCAT 654
+#define XMLELEMENT 655
+#define XMLEXISTS 656
+#define XMLFOREST 657
+#define XMLPARSE 658
+#define XMLPI 659
+#define XMLROOT 660
+#define XMLSERIALIZE 661
+#define YEAR_P 662
+#define YES_P 663
+#define ZONE 664
+#define NULLS_FIRST 665
+#define NULLS_LAST 666
+#define WITH_TIME 667
+#define POSTFIXOP 668
+#define UMINUS 669
+
 
 
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 2068 of yacc.c  */
 #line 158 "gram.y"
-
+{
 	core_YYSTYPE		core_yystype;
 	/* these fields must match core_YYSTYPE: */
 	int					ival;
@@ -495,15 +908,13 @@
 	AccessPriv			*accesspriv;
 	InsertStmt			*istmt;
 	VariableSetStmt		*vsetstmt;
-
-
-
-/* Line 2068 of yacc.c  */
-#line 503 "gram.h"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 1529 of yacc.c.  */
+#line 914 "gram.tab.h"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
@@ -522,4 +933,3 @@
 #endif
 
 
-
diff -Naur postgresql-9.2.13/src/backend/replication/repl_gram.c postgresql/src/backend/replication/repl_gram.c
--- postgresql-9.2.13/src/backend/replication/repl_gram.c	2015-06-09 12:48:18.000000000 -0700
+++ postgresql/src/backend/replication/repl_gram.c	2015-07-01 18:03:43.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,53 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         replication_yyparse
-#define yylex           replication_yylex
-#define yyerror         replication_yyerror
-#define yylval          replication_yylval
-#define yychar          replication_yychar
-#define yydebug         replication_yydebug
-#define yynerrs         replication_yynerrs
+#define yyparse replication_yyparse
+#define yylex   replication_yylex
+#define yyerror replication_yyerror
+#define yylval  replication_yylval
+#define yychar  replication_yychar
+#define yydebug replication_yydebug
+#define yynerrs replication_yynerrs
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     SCONST = 258,
+     RECPTR = 259,
+     K_BASE_BACKUP = 260,
+     K_IDENTIFY_SYSTEM = 261,
+     K_LABEL = 262,
+     K_PROGRESS = 263,
+     K_FAST = 264,
+     K_NOWAIT = 265,
+     K_WAL = 266,
+     K_START_REPLICATION = 267
+   };
+#endif
+/* Tokens.  */
+#define SCONST 258
+#define RECPTR 259
+#define K_BASE_BACKUP 260
+#define K_IDENTIFY_SYSTEM 261
+#define K_LABEL 262
+#define K_PROGRESS 263
+#define K_FAST 264
+#define K_NOWAIT 265
+#define K_WAL 266
+#define K_START_REPLICATION 267
 
 
-/* Copy the first part of user declarations.  */
 
-/* Line 268 of yacc.c  */
+
+/* Copy the first part of user declarations.  */
 #line 1 "repl_gram.y"
 
 /*-------------------------------------------------------------------------
@@ -127,9 +155,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 132 "repl_gram.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -148,35 +173,10 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     SCONST = 258,
-     RECPTR = 259,
-     K_BASE_BACKUP = 260,
-     K_IDENTIFY_SYSTEM = 261,
-     K_LABEL = 262,
-     K_PROGRESS = 263,
-     K_FAST = 264,
-     K_NOWAIT = 265,
-     K_WAL = 266,
-     K_START_REPLICATION = 267
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 56 "repl_gram.y"
-
+{
 		char					*str;
 		bool					boolval;
 
@@ -184,23 +184,22 @@
 		Node					*node;
 		List					*list;
 		DefElem					*defelt;
-
-
-
-/* Line 293 of yacc.c  */
-#line 192 "repl_gram.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 190 "repl_gram.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 204 "repl_gram.c"
+/* Line 216 of yacc.c.  */
+#line 203 "repl_gram.tab.c"
 
 #ifdef short
 # undef short
@@ -275,14 +274,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -303,11 +302,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -330,24 +329,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -363,9 +362,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -376,27 +375,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -414,7 +392,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  11
@@ -532,8 +527,8 @@
        2,     0,     2,     1,     1,     1,     1,     2
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -566,7 +561,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -574,12 +570,6 @@
       16,    17,    18
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-10))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        5,     6,     4,     0,    13,     3,    -1,    12,     7,     8,
@@ -607,18 +597,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -628,6 +609,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -669,10 +651,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -776,20 +767,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -823,11 +811,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -864,6 +852,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -966,142 +955,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1133,9 +1095,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1151,16 +1114,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1187,37 +1152,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1225,28 +1167,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1276,6 +1241,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1283,6 +1249,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1305,8 +1272,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1317,6 +1285,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1326,9 +1295,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1337,16 +1303,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1372,22 +1338,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1427,101 +1397,79 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 87 "repl_gram.y"
     {
 					replication_parse_result = (yyvsp[(1) - (2)].node);
-				}
+				;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 107 "repl_gram.y"
     {
 					(yyval.node) = (Node *) makeNode(IdentifySystemCmd);
-				}
+				;}
     break;
 
   case 9:
-
-/* Line 1806 of yacc.c  */
 #line 117 "repl_gram.y"
     {
 					BaseBackupCmd *cmd = (BaseBackupCmd *) makeNode(BaseBackupCmd);
 					cmd->options = (yyvsp[(2) - (2)].list);
 					(yyval.node) = (Node *) cmd;
-				}
+				;}
     break;
 
   case 10:
-
-/* Line 1806 of yacc.c  */
 #line 124 "repl_gram.y"
-    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); }
+    { (yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].defelt)); ;}
     break;
 
   case 11:
-
-/* Line 1806 of yacc.c  */
 #line 125 "repl_gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 12:
-
-/* Line 1806 of yacc.c  */
 #line 129 "repl_gram.y"
     {
 				  (yyval.defelt) = makeDefElem("label",
 						   (Node *)makeString((yyvsp[(2) - (2)].str)));
-				}
+				;}
     break;
 
   case 13:
-
-/* Line 1806 of yacc.c  */
 #line 134 "repl_gram.y"
     {
 				  (yyval.defelt) = makeDefElem("progress",
 						   (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 14:
-
-/* Line 1806 of yacc.c  */
 #line 139 "repl_gram.y"
     {
 				  (yyval.defelt) = makeDefElem("fast",
 						   (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 144 "repl_gram.y"
     {
 				  (yyval.defelt) = makeDefElem("wal",
 						   (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 16:
-
-/* Line 1806 of yacc.c  */
 #line 149 "repl_gram.y"
     {
 				  (yyval.defelt) = makeDefElem("nowait",
 						   (Node *)makeInteger(TRUE));
-				}
+				;}
     break;
 
   case 17:
-
-/* Line 1806 of yacc.c  */
 #line 160 "repl_gram.y"
     {
 					StartReplicationCmd *cmd;
@@ -1530,26 +1478,14 @@
 					cmd->startpoint = (yyvsp[(2) - (2)].recptr);
 
 					(yyval.node) = (Node *) cmd;
-				}
+				;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1540 "repl_gram.c"
+/* Line 1267 of yacc.c.  */
+#line 1487 "repl_gram.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1558,6 +1494,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -1577,10 +1514,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -1588,36 +1521,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -1625,7 +1559,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -1642,7 +1576,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -1676,7 +1610,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -1699,6 +1633,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -1723,7 +1660,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -1734,14 +1671,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -1765,8 +1697,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 169 "repl_gram.y"
 
 
diff -Naur postgresql-9.2.13/src/backend/replication/repl_gram.h postgresql/src/backend/replication/repl_gram.h
--- postgresql-9.2.13/src/backend/replication/repl_gram.h	2015-06-09 12:48:18.000000000 -0700
+++ postgresql/src/backend/replication/repl_gram.h	2015-07-01 18:03:43.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton interface for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,11 +29,10 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -49,16 +51,25 @@
      K_START_REPLICATION = 267
    };
 #endif
+/* Tokens.  */
+#define SCONST 258
+#define RECPTR 259
+#define K_BASE_BACKUP 260
+#define K_IDENTIFY_SYSTEM 261
+#define K_LABEL 262
+#define K_PROGRESS 263
+#define K_FAST 264
+#define K_NOWAIT 265
+#define K_WAL 266
+#define K_START_REPLICATION 267
+
 
 
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 2068 of yacc.c  */
 #line 56 "repl_gram.y"
-
+{
 		char					*str;
 		bool					boolval;
 
@@ -66,17 +77,14 @@
 		Node					*node;
 		List					*list;
 		DefElem					*defelt;
-
-
-
-/* Line 2068 of yacc.c  */
-#line 74 "repl_gram.h"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 1529 of yacc.c.  */
+#line 83 "repl_gram.tab.h"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 extern YYSTYPE replication_yylval;
 
-
diff -Naur postgresql-9.2.13/src/interfaces/ecpg/preproc/preproc.c postgresql/src/interfaces/ecpg/preproc/preproc.c
--- postgresql-9.2.13/src/interfaces/ecpg/preproc/preproc.c	2015-06-09 12:48:20.000000000 -0700
+++ postgresql/src/interfaces/ecpg/preproc/preproc.c	2015-07-01 18:06:02.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,605 +55,18 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 1
 
 /* Substitute the variable and function names.  */
-#define yyparse         base_yyparse
-#define yylex           base_yylex
-#define yyerror         base_yyerror
-#define yylval          base_yylval
-#define yychar          base_yychar
-#define yydebug         base_yydebug
-#define yynerrs         base_yynerrs
-#define yylloc          base_yylloc
-
-/* Copy the first part of user declarations.  */
-
-/* Line 268 of yacc.c  */
-#line 5 "preproc.y"
-
-#include "postgres_fe.h"
-
-#include "extern.h"
-#include "ecpg_config.h"
-#include <unistd.h>
-
-/* Location tracking support --- simpler than bison's default */
-#define YYLLOC_DEFAULT(Current, Rhs, N) \
-	do { \
-		if (N)						\
-			(Current) = (Rhs)[1];	\
-		else						\
-			(Current) = (Rhs)[0];	\
-	} while (0)
-
-/*
- * The %name-prefix option below will make bison call base_yylex, but we
- * really want it to call filtered_base_yylex (see parser.c).
- */
-#define base_yylex filtered_base_yylex
-
-/*
- * This is only here so the string gets into the POT.  Bison uses it
- * internally.
- */
-#define bison_gettext_dummy gettext_noop("syntax error")
-
-/*
- * Variables containing simple states.
- */
-int struct_level = 0;
-int braces_open; /* brace level counter */
-char *current_function;
-int ecpg_internal_var = 0;
-char	*connection = NULL;
-char	*input_filename = NULL;
-
-static int	FoundInto = 0;
-static int	initializer = 0;
-static int	pacounter = 1;
-static char	pacounter_buffer[sizeof(int) * CHAR_BIT * 10 / 3]; /* a rough guess at the size we need */
-static struct this_type actual_type[STRUCT_DEPTH];
-static char *actual_startline[STRUCT_DEPTH];
-static int	varchar_counter = 1;
-
-/* temporarily store struct members while creating the data structure */
-struct ECPGstruct_member *struct_member_list[STRUCT_DEPTH] = { NULL };
-
-/* also store struct type so we can do a sizeof() later */
-static char *ECPGstruct_sizeof = NULL;
-
-/* for forward declarations we have to store some data as well */
-static char *forward_name = NULL;
-
-struct ECPGtype ecpg_no_indicator = {ECPGt_NO_INDICATOR, NULL, NULL, NULL, {NULL}, 0};
-struct variable no_indicator = {"no_indicator", &ecpg_no_indicator, 0, NULL};
-
-struct ECPGtype ecpg_query = {ECPGt_char_variable, NULL, NULL, NULL, {NULL}, 0};
-
-/*
- * Handle parsing errors and warnings
- */
-void
-mmerror(int error_code, enum errortype type, const char *error, ...)
-{
-	va_list ap;
-
-	/* internationalize the error message string */
-	error = _(error);
-
-	fprintf(stderr, "%s:%d: ", input_filename, yylineno);
-
-	switch(type)
-	{
-		case ET_WARNING:
-			fprintf(stderr, _("WARNING: "));
-			break;
-		case ET_ERROR:
-		case ET_FATAL:
-			fprintf(stderr, _("ERROR: "));
-			break;
-	}
-
-	va_start(ap, error);
-	vfprintf(stderr, error, ap);
-	va_end(ap);
-
-	fprintf(stderr, "\n");
-
-	switch(type)
-	{
-		case ET_WARNING:
-			break;
-		case ET_ERROR:
-			ret_value = error_code;
-			break;
-		case ET_FATAL:
-			if (yyin)
-				fclose(yyin);
-			if (yyout)
-				fclose(yyout);
-
-			if (strcmp(output_filename, "-") != 0 && unlink(output_filename) != 0)
-				fprintf(stderr, _("could not remove output file \"%s\"\n"), output_filename);
-			exit(error_code);
-	}
-}
-
-/*
- * string concatenation
- */
-
-static char *
-cat2_str(char *str1, char *str2)
-{
-	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 2);
-
-	strcpy(res_str, str1);
-	if (strlen(str1) != 0 && strlen(str2) != 0)
-		strcat(res_str, " ");
-	strcat(res_str, str2);
-	free(str1);
-	free(str2);
-	return(res_str);
-}
-
-static char *
-cat_str(int count, ...)
-{
-	va_list		args;
-	int			i;
-	char		*res_str;
-
-	va_start(args, count);
-
-	res_str = va_arg(args, char *);
-
-	/* now add all other strings */
-	for (i = 1; i < count; i++)
-		res_str = cat2_str(res_str, va_arg(args, char *));
-
-	va_end(args);
-
-	return(res_str);
-}
-
-static char *
-make2_str(char *str1, char *str2)
-{
-	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 1);
-
-	strcpy(res_str, str1);
-	strcat(res_str, str2);
-	free(str1);
-	free(str2);
-	return(res_str);
-}
-
-static char *
-make3_str(char *str1, char *str2, char *str3)
-{
-	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) +strlen(str3) + 1);
-
-	strcpy(res_str, str1);
-	strcat(res_str, str2);
-	strcat(res_str, str3);
-	free(str1);
-	free(str2);
-	free(str3);
-	return(res_str);
-}
-
-/* and the rest */
-static char *
-make_name(void)
-{
-	return mm_strdup(yytext);
-}
-
-static char *
-create_questionmarks(char *name, bool array)
-{
-	struct variable *p = find_variable(name);
-	int count;
-	char *result = EMPTY;
-
-	/* In case we have a struct, we have to print as many "?" as there are attributes in the struct
-	 * An array is only allowed together with an element argument
-	 * This is essantially only used for inserts, but using a struct as input parameter is an error anywhere else
-	 * so we don't have to worry here. */
-
-	if (p->type->type == ECPGt_struct || (array && p->type->type == ECPGt_array && p->type->u.element->type == ECPGt_struct))
-	{
-		struct ECPGstruct_member *m;
-
-		if (p->type->type == ECPGt_struct)
-			m = p->type->u.members;
-		else
-			m = p->type->u.element->u.members;
-
-		for (count = 0; m != NULL; m=m->next, count++);
-	}
-	else
-		count = 1;
-
-	for (; count > 0; count --)
-	{
-		sprintf(pacounter_buffer, "$%d", pacounter++);
-		result = cat_str(3, result, mm_strdup(pacounter_buffer), mm_strdup(" , "));
-	}
-
-	/* removed the trailing " ," */
-
-	result[strlen(result)-3] = '\0';
-	return(result);
-}
-
-static char *
-adjust_outofscope_cursor_vars(struct cursor *cur)
-{
-	/* Informix accepts DECLARE with variables that are out of scope when OPEN is called.
-	 * For instance you can DECLARE a cursor in one function, and OPEN/FETCH/CLOSE
-	 * it in another functions. This is very useful for e.g. event-driver programming,
-	 * but may also lead to dangerous programming. The limitation when this is allowed
-	 * and doesn't cause problems have to be documented, like the allocated variables
-	 * must not be realloc()'ed.
-	 *
-	 * We have to change the variables to our own struct and just store the pointer
-	 * instead of the variable. Do it only for local variables, not for globals.
-	 */
-
-	char *result = EMPTY;
-	int insert;
-
-	for (insert = 1; insert >= 0; insert--)
-	{
-		struct arguments *list;
-		struct arguments *ptr;
-		struct arguments *newlist = NULL;
-		struct variable *newvar, *newind;
-
-		list = (insert ? cur->argsinsert : cur->argsresult);
-
-		for (ptr = list; ptr != NULL; ptr = ptr->next)
-		{
-			char var_text[20];
-			char *original_var;
-			bool skip_set_var = false;
-			bool var_ptr = false;
-
-			/* change variable name to "ECPGget_var(<counter>)" */
-			original_var = ptr->variable->name;
-			sprintf(var_text, "%d))", ecpg_internal_var);
-
-			/* Don't emit ECPGset_var() calls for global variables */
-			if (ptr->variable->brace_level == 0)
-			{
-				newvar = ptr->variable;
-				skip_set_var = true;
-			}
-			else if ((ptr->variable->type->type == ECPGt_char_variable)
-					 && (strncmp(ptr->variable->name, "ECPGprepared_statement", strlen("ECPGprepared_statement")) == 0))
-			{
-				newvar = ptr->variable;
-				skip_set_var = true;
-			}
-			else if ((ptr->variable->type->type != ECPGt_varchar
-					  && ptr->variable->type->type != ECPGt_char
-					  && ptr->variable->type->type != ECPGt_unsigned_char
-					  && ptr->variable->type->type != ECPGt_string)
-					 && atoi(ptr->variable->type->size) > 1)
-			{
-				newvar = new_variable(cat_str(4, mm_strdup("("),
-											  mm_strdup(ecpg_type_name(ptr->variable->type->u.element->type)),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text)),
-									  ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type,
-																			   mm_strdup("1"),
-																			   ptr->variable->type->u.element->counter),
-														  ptr->variable->type->size),
-									  0);
-			}
-			else if ((ptr->variable->type->type == ECPGt_varchar
-					  || ptr->variable->type->type == ECPGt_char
-					  || ptr->variable->type->type == ECPGt_unsigned_char
-					  || ptr->variable->type->type == ECPGt_string)
-					 && atoi(ptr->variable->type->size) > 1)
-			{
-				newvar = new_variable(cat_str(4, mm_strdup("("),
-											  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text)),
-									  ECPGmake_simple_type(ptr->variable->type->type,
-														   ptr->variable->type->size,
-														   ptr->variable->type->counter),
-									  0);
-				if (ptr->variable->type->type == ECPGt_varchar)
-					var_ptr = true;
-			}
-			else if (ptr->variable->type->type == ECPGt_struct
-					 || ptr->variable->type->type == ECPGt_union)
-			{
-				newvar = new_variable(cat_str(5, mm_strdup("(*("),
-											  mm_strdup(ptr->variable->type->type_name),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text),
-											  mm_strdup(")")),
-									  ECPGmake_struct_type(ptr->variable->type->u.members,
-														   ptr->variable->type->type,
-														   ptr->variable->type->type_name,
-														   ptr->variable->type->struct_sizeof),
-									  0);
-				var_ptr = true;
-			}
-			else if (ptr->variable->type->type == ECPGt_array)
-			{
-				if (ptr->variable->type->u.element->type == ECPGt_struct
-					|| ptr->variable->type->u.element->type == ECPGt_union)
-				{
-					newvar = new_variable(cat_str(5, mm_strdup("(*("),
-											  mm_strdup(ptr->variable->type->u.element->type_name),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text),
-											  mm_strdup(")")),
-										  ECPGmake_struct_type(ptr->variable->type->u.element->u.members,
-															   ptr->variable->type->u.element->type,
-															   ptr->variable->type->u.element->type_name,
-															   ptr->variable->type->u.element->struct_sizeof),
-										  0);
-				}
-				else
-				{
-					newvar = new_variable(cat_str(4, mm_strdup("("),
-												  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
-												  mm_strdup(" *)(ECPGget_var("),
-												  mm_strdup(var_text)),
-										  ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type,
-																				   ptr->variable->type->u.element->size,
-																				   ptr->variable->type->u.element->counter),
-															  ptr->variable->type->size),
-										  0);
-					var_ptr = true;
-				}
-			}
-			else
-			{
-				newvar = new_variable(cat_str(4, mm_strdup("*("),
-											  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text)),
-									  ECPGmake_simple_type(ptr->variable->type->type,
-														   ptr->variable->type->size,
-														   ptr->variable->type->counter),
-									  0);
-				var_ptr = true;
-			}
-
-			/* create call to "ECPGset_var(<counter>, <connection>, <pointer>. <line number>)" */
-			if (!skip_set_var)
-			{
-				sprintf(var_text, "%d, %s", ecpg_internal_var++, var_ptr ? "&(" : "(");
-				result = cat_str(5, result, mm_strdup("ECPGset_var("),
-								 mm_strdup(var_text), mm_strdup(original_var),
-								 mm_strdup("), __LINE__);\n"));
-			}
-
-			/* now the indicator if there is one and it's not a global variable */
-			if ((ptr->indicator->type->type == ECPGt_NO_INDICATOR) || (ptr->indicator->brace_level == 0))
-			{
-				newind = ptr->indicator;
-			}
-			else
-			{
-				/* change variable name to "ECPGget_var(<counter>)" */
-				original_var = ptr->indicator->name;
-				sprintf(var_text, "%d))", ecpg_internal_var);
-				var_ptr = false;
-
-				if (ptr->indicator->type->type == ECPGt_struct
-					|| ptr->indicator->type->type == ECPGt_union)
-				{
-					newind = new_variable(cat_str(5, mm_strdup("(*("),
-											  mm_strdup(ptr->indicator->type->type_name),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text),
-											  mm_strdup(")")),
-										  ECPGmake_struct_type(ptr->indicator->type->u.members,
-															   ptr->indicator->type->type,
-															   ptr->indicator->type->type_name,
-															   ptr->indicator->type->struct_sizeof),
-										  0);
-					var_ptr = true;
-				}
-				else if (ptr->indicator->type->type == ECPGt_array)
-				{
-					if (ptr->indicator->type->u.element->type == ECPGt_struct
-						|| ptr->indicator->type->u.element->type == ECPGt_union)
-					{
-						newind = new_variable(cat_str(5, mm_strdup("(*("),
-											  mm_strdup(ptr->indicator->type->u.element->type_name),
-											  mm_strdup(" *)(ECPGget_var("),
-											  mm_strdup(var_text),
-											  mm_strdup(")")),
-											  ECPGmake_struct_type(ptr->indicator->type->u.element->u.members,
-																   ptr->indicator->type->u.element->type,
-																   ptr->indicator->type->u.element->type_name,
-																   ptr->indicator->type->u.element->struct_sizeof),
-											  0);
-					}
-					else
-					{
-						newind = new_variable(cat_str(4, mm_strdup("("),
-													  mm_strdup(ecpg_type_name(ptr->indicator->type->u.element->type)),
-													  mm_strdup(" *)(ECPGget_var("), mm_strdup(var_text)),
-											  ECPGmake_array_type(ECPGmake_simple_type(ptr->indicator->type->u.element->type,
-																					   ptr->indicator->type->u.element->size,
-																					   ptr->indicator->type->u.element->counter),
-																  ptr->indicator->type->size),
-											  0);
-						var_ptr = true;
-					}
-				}
-				else if (atoi(ptr->indicator->type->size) > 1)
-				{
-					newind = new_variable(cat_str(4, mm_strdup("("),
-												  mm_strdup(ecpg_type_name(ptr->indicator->type->type)),
-												  mm_strdup(" *)(ECPGget_var("),
-												  mm_strdup(var_text)),
-										  ECPGmake_simple_type(ptr->indicator->type->type,
-															   ptr->indicator->type->size,
-															   ptr->variable->type->counter),
-										  0);
-				}
-				else
-				{
-					newind = new_variable(cat_str(4, mm_strdup("*("),
-												  mm_strdup(ecpg_type_name(ptr->indicator->type->type)),
-												  mm_strdup(" *)(ECPGget_var("),
-												  mm_strdup(var_text)),
-										  ECPGmake_simple_type(ptr->indicator->type->type,
-															   ptr->indicator->type->size,
-															   ptr->variable->type->counter),
-										  0);
-					var_ptr = true;
-				}
-
-				/* create call to "ECPGset_var(<counter>, <pointer>. <line number>)" */
-				sprintf(var_text, "%d, %s", ecpg_internal_var++, var_ptr ? "&(" : "(");
-				result = cat_str(5, result, mm_strdup("ECPGset_var("),
-								 mm_strdup(var_text), mm_strdup(original_var),
-								 mm_strdup("), __LINE__);\n"));
-			}
-
-			add_variable_to_tail(&newlist, newvar, newind);
-		}
-
-		if (insert)
-			cur->argsinsert_oos = newlist;
-		else
-			cur->argsresult_oos = newlist;
-	}
-
-	return result;
-}
-
-/* This tests whether the cursor was declared and opened in the same function. */
-#define SAMEFUNC(cur)	\
-	((cur->function == NULL) ||		\
-	 (cur->function != NULL && strcmp(cur->function, current_function) == 0))
-
-static struct cursor *
-add_additional_variables(char *name, bool insert)
-{
-	struct cursor *ptr;
-	struct arguments *p;
-	int (* strcmp_fn)(const char *, const char *) = ((name[0] == ':' || name[0] == '"') ? strcmp : pg_strcasecmp);
-
-	for (ptr = cur; ptr != NULL; ptr=ptr->next)
-	{
-		if (strcmp_fn(ptr->name, name) == 0)
-			break;
-	}
-
-	if (ptr == NULL)
-	{
-		mmerror(PARSE_ERROR, ET_ERROR, "cursor \"%s\" does not exist", name);
-		return NULL;
-	}
-
-	if (insert)
-	{
-		/* add all those input variables that were given earlier
-		 * note that we have to append here but have to keep the existing order */
-		for (p = (SAMEFUNC(ptr) ? ptr->argsinsert : ptr->argsinsert_oos); p; p = p->next)
-			add_variable_to_tail(&argsinsert, p->variable, p->indicator);
-	}
-
-	/* add all those output variables that were given earlier */
-	for (p = (SAMEFUNC(ptr) ? ptr->argsresult : ptr->argsresult_oos); p; p = p->next)
-		add_variable_to_tail(&argsresult, p->variable, p->indicator);
-
-	return ptr;
-}
-
-static void
-add_typedef(char *name, char *dimension, char *length, enum ECPGttype type_enum,
-			char *type_dimension, char *type_index, int initializer, int array)
-{
-	/* add entry to list */
-	struct typedefs *ptr, *this;
-
-	if ((type_enum == ECPGt_struct ||
-		 type_enum == ECPGt_union) &&
-		initializer == 1)
-		mmerror(PARSE_ERROR, ET_ERROR, "initializer not allowed in type definition");
-	else if (INFORMIX_MODE && strcmp(name, "string") == 0)
-		mmerror(PARSE_ERROR, ET_ERROR, "type name \"string\" is reserved in Informix mode");
-	else
-	{
-		for (ptr = types; ptr != NULL; ptr = ptr->next)
-		{
-			if (strcmp(name, ptr->name) == 0)
-				/* re-definition is a bug */
-				mmerror(PARSE_ERROR, ET_ERROR, "type \"%s\" is already defined", name);
-		}
-		adjust_array(type_enum, &dimension, &length, type_dimension, type_index, array, true);
-
-		this = (struct typedefs *) mm_alloc(sizeof(struct typedefs));
-
-		/* initial definition */
-		this->next = types;
-		this->name = name;
-		this->brace_level = braces_open;
-		this->type = (struct this_type *) mm_alloc(sizeof(struct this_type));
-		this->type->type_enum = type_enum;
-		this->type->type_str = mm_strdup(name);
-		this->type->type_dimension = dimension; /* dimension of array */
-		this->type->type_index = length;	/* length of string */
-		this->type->type_sizeof = ECPGstruct_sizeof;
-		this->struct_member_list = (type_enum == ECPGt_struct || type_enum == ECPGt_union) ?
-		ECPGstruct_member_dup(struct_member_list[struct_level]) : NULL;
-
-		if (type_enum != ECPGt_varchar &&
-			type_enum != ECPGt_char &&
-			type_enum != ECPGt_unsigned_char &&
-			type_enum != ECPGt_string &&
-			atoi(this->type->type_index) >= 0)
-			mmerror(PARSE_ERROR, ET_ERROR, "multidimensional arrays for simple data types are not supported");
-
-		types = this;
-	}
-}
-
-
-/* Line 268 of yacc.c  */
-#line 635 "preproc.c"
-
-/* Enabling traces.  */
-#ifndef YYDEBUG
-# define YYDEBUG 0
-#endif
-
-/* Enabling verbose error messages.  */
-#ifdef YYERROR_VERBOSE
-# undef YYERROR_VERBOSE
-# define YYERROR_VERBOSE 1
-#else
-# define YYERROR_VERBOSE 0
-#endif
-
-/* Enabling the token table.  */
-#ifndef YYTOKEN_TABLE
-# define YYTOKEN_TABLE 0
-#endif
-
+#define yyparse base_yyparse
+#define yylex   base_yylex
+#define yyerror base_yyerror
+#define yylval  base_yylval
+#define yychar  base_yychar
+#define yydebug base_yydebug
+#define yynerrs base_yynerrs
+#define yylloc base_yylloc
 
 /* Tokens.  */
 #ifndef YYTOKENTYPE
@@ -1149,16 +565,1079 @@
      UMINUS = 746
    };
 #endif
+/* Tokens.  */
+#define SQL_ALLOCATE 258
+#define SQL_AUTOCOMMIT 259
+#define SQL_BOOL 260
+#define SQL_BREAK 261
+#define SQL_CALL 262
+#define SQL_CARDINALITY 263
+#define SQL_CONNECT 264
+#define SQL_COUNT 265
+#define SQL_DATETIME_INTERVAL_CODE 266
+#define SQL_DATETIME_INTERVAL_PRECISION 267
+#define SQL_DESCRIBE 268
+#define SQL_DESCRIPTOR 269
+#define SQL_DISCONNECT 270
+#define SQL_FOUND 271
+#define SQL_FREE 272
+#define SQL_GET 273
+#define SQL_GO 274
+#define SQL_GOTO 275
+#define SQL_IDENTIFIED 276
+#define SQL_INDICATOR 277
+#define SQL_KEY_MEMBER 278
+#define SQL_LENGTH 279
+#define SQL_LONG 280
+#define SQL_NULLABLE 281
+#define SQL_OCTET_LENGTH 282
+#define SQL_OPEN 283
+#define SQL_OUTPUT 284
+#define SQL_REFERENCE 285
+#define SQL_RETURNED_LENGTH 286
+#define SQL_RETURNED_OCTET_LENGTH 287
+#define SQL_SCALE 288
+#define SQL_SECTION 289
+#define SQL_SHORT 290
+#define SQL_SIGNED 291
+#define SQL_SQL 292
+#define SQL_SQLERROR 293
+#define SQL_SQLPRINT 294
+#define SQL_SQLWARNING 295
+#define SQL_START 296
+#define SQL_STOP 297
+#define SQL_STRUCT 298
+#define SQL_UNSIGNED 299
+#define SQL_VAR 300
+#define SQL_WHENEVER 301
+#define S_ADD 302
+#define S_AND 303
+#define S_ANYTHING 304
+#define S_AUTO 305
+#define S_CONST 306
+#define S_DEC 307
+#define S_DIV 308
+#define S_DOTPOINT 309
+#define S_EQUAL 310
+#define S_EXTERN 311
+#define S_INC 312
+#define S_LSHIFT 313
+#define S_MEMPOINT 314
+#define S_MEMBER 315
+#define S_MOD 316
+#define S_MUL 317
+#define S_NEQUAL 318
+#define S_OR 319
+#define S_REGISTER 320
+#define S_RSHIFT 321
+#define S_STATIC 322
+#define S_SUB 323
+#define S_VOLATILE 324
+#define S_TYPEDEF 325
+#define CSTRING 326
+#define CVARIABLE 327
+#define CPP_LINE 328
+#define IP 329
+#define DOLCONST 330
+#define ECONST 331
+#define NCONST 332
+#define UCONST 333
+#define UIDENT 334
+#define IDENT 335
+#define FCONST 336
+#define SCONST 337
+#define BCONST 338
+#define XCONST 339
+#define Op 340
+#define ICONST 341
+#define PARAM 342
+#define TYPECAST 343
+#define DOT_DOT 344
+#define COLON_EQUALS 345
+#define ABORT_P 346
+#define ABSOLUTE_P 347
+#define ACCESS 348
+#define ACTION 349
+#define ADD_P 350
+#define ADMIN 351
+#define AFTER 352
+#define AGGREGATE 353
+#define ALL 354
+#define ALSO 355
+#define ALTER 356
+#define ALWAYS 357
+#define ANALYSE 358
+#define ANALYZE 359
+#define AND 360
+#define ANY 361
+#define ARRAY 362
+#define AS 363
+#define ASC 364
+#define ASSERTION 365
+#define ASSIGNMENT 366
+#define ASYMMETRIC 367
+#define AT 368
+#define ATTRIBUTE 369
+#define AUTHORIZATION 370
+#define BACKWARD 371
+#define BEFORE 372
+#define BEGIN_P 373
+#define BETWEEN 374
+#define BIGINT 375
+#define BINARY 376
+#define BIT 377
+#define BOOLEAN_P 378
+#define BOTH 379
+#define BY 380
+#define CACHE 381
+#define CALLED 382
+#define CASCADE 383
+#define CASCADED 384
+#define CASE 385
+#define CAST 386
+#define CATALOG_P 387
+#define CHAIN 388
+#define CHAR_P 389
+#define CHARACTER 390
+#define CHARACTERISTICS 391
+#define CHECK 392
+#define CHECKPOINT 393
+#define CLASS 394
+#define CLOSE 395
+#define CLUSTER 396
+#define COALESCE 397
+#define COLLATE 398
+#define COLLATION 399
+#define COLUMN 400
+#define COMMENT 401
+#define COMMENTS 402
+#define COMMIT 403
+#define COMMITTED 404
+#define CONCURRENTLY 405
+#define CONFIGURATION 406
+#define CONNECTION 407
+#define CONSTRAINT 408
+#define CONSTRAINTS 409
+#define CONTENT_P 410
+#define CONTINUE_P 411
+#define CONVERSION_P 412
+#define COPY 413
+#define COST 414
+#define CREATE 415
+#define CROSS 416
+#define CSV 417
+#define CURRENT_P 418
+#define CURRENT_CATALOG 419
+#define CURRENT_DATE 420
+#define CURRENT_ROLE 421
+#define CURRENT_SCHEMA 422
+#define CURRENT_TIME 423
+#define CURRENT_TIMESTAMP 424
+#define CURRENT_USER 425
+#define CURSOR 426
+#define CYCLE 427
+#define DATA_P 428
+#define DATABASE 429
+#define DAY_P 430
+#define DEALLOCATE 431
+#define DEC 432
+#define DECIMAL_P 433
+#define DECLARE 434
+#define DEFAULT 435
+#define DEFAULTS 436
+#define DEFERRABLE 437
+#define DEFERRED 438
+#define DEFINER 439
+#define DELETE_P 440
+#define DELIMITER 441
+#define DELIMITERS 442
+#define DESC 443
+#define DICTIONARY 444
+#define DISABLE_P 445
+#define DISCARD 446
+#define DISTINCT 447
+#define DO 448
+#define DOCUMENT_P 449
+#define DOMAIN_P 450
+#define DOUBLE_P 451
+#define DROP 452
+#define EACH 453
+#define ELSE 454
+#define ENABLE_P 455
+#define ENCODING 456
+#define ENCRYPTED 457
+#define END_P 458
+#define ENUM_P 459
+#define ESCAPE 460
+#define EXCEPT 461
+#define EXCLUDE 462
+#define EXCLUDING 463
+#define EXCLUSIVE 464
+#define EXECUTE 465
+#define EXISTS 466
+#define EXPLAIN 467
+#define EXTENSION 468
+#define EXTERNAL 469
+#define EXTRACT 470
+#define FALSE_P 471
+#define FAMILY 472
+#define FETCH 473
+#define FIRST_P 474
+#define FLOAT_P 475
+#define FOLLOWING 476
+#define FOR 477
+#define FORCE 478
+#define FOREIGN 479
+#define FORWARD 480
+#define FREEZE 481
+#define FROM 482
+#define FULL 483
+#define FUNCTION 484
+#define FUNCTIONS 485
+#define GLOBAL 486
+#define GRANT 487
+#define GRANTED 488
+#define GREATEST 489
+#define GROUP_P 490
+#define HANDLER 491
+#define HAVING 492
+#define HEADER_P 493
+#define HOLD 494
+#define HOUR_P 495
+#define IDENTITY_P 496
+#define IF_P 497
+#define ILIKE 498
+#define IMMEDIATE 499
+#define IMMUTABLE 500
+#define IMPLICIT_P 501
+#define IN_P 502
+#define INCLUDING 503
+#define INCREMENT 504
+#define INDEX 505
+#define INDEXES 506
+#define INHERIT 507
+#define INHERITS 508
+#define INITIALLY 509
+#define INLINE_P 510
+#define INNER_P 511
+#define INOUT 512
+#define INPUT_P 513
+#define INSENSITIVE 514
+#define INSERT 515
+#define INSTEAD 516
+#define INT_P 517
+#define INTEGER 518
+#define INTERSECT 519
+#define INTERVAL 520
+#define INTO 521
+#define INVOKER 522
+#define IS 523
+#define ISNULL 524
+#define ISOLATION 525
+#define JOIN 526
+#define KEY 527
+#define LABEL 528
+#define LANGUAGE 529
+#define LARGE_P 530
+#define LAST_P 531
+#define LC_COLLATE_P 532
+#define LC_CTYPE_P 533
+#define LEADING 534
+#define LEAKPROOF 535
+#define LEAST 536
+#define LEFT 537
+#define LEVEL 538
+#define LIKE 539
+#define LIMIT 540
+#define LISTEN 541
+#define LOAD 542
+#define LOCAL 543
+#define LOCALTIME 544
+#define LOCALTIMESTAMP 545
+#define LOCATION 546
+#define LOCK_P 547
+#define MAPPING 548
+#define MATCH 549
+#define MAXVALUE 550
+#define MINUTE_P 551
+#define MINVALUE 552
+#define MODE 553
+#define MONTH_P 554
+#define MOVE 555
+#define NAME_P 556
+#define NAMES 557
+#define NATIONAL 558
+#define NATURAL 559
+#define NCHAR 560
+#define NEXT 561
+#define NO 562
+#define NONE 563
+#define NOT 564
+#define NOTHING 565
+#define NOTIFY 566
+#define NOTNULL 567
+#define NOWAIT 568
+#define NULL_P 569
+#define NULLIF 570
+#define NULLS_P 571
+#define NUMERIC 572
+#define OBJECT_P 573
+#define OF 574
+#define OFF 575
+#define OFFSET 576
+#define OIDS 577
+#define ON 578
+#define ONLY 579
+#define OPERATOR 580
+#define OPTION 581
+#define OPTIONS 582
+#define OR 583
+#define ORDER 584
+#define OUT_P 585
+#define OUTER_P 586
+#define OVER 587
+#define OVERLAPS 588
+#define OVERLAY 589
+#define OWNED 590
+#define OWNER 591
+#define PARSER 592
+#define PARTIAL 593
+#define PARTITION 594
+#define PASSING 595
+#define PASSWORD 596
+#define PLACING 597
+#define PLANS 598
+#define POSITION 599
+#define PRECEDING 600
+#define PRECISION 601
+#define PRESERVE 602
+#define PREPARE 603
+#define PREPARED 604
+#define PRIMARY 605
+#define PRIOR 606
+#define PRIVILEGES 607
+#define PROCEDURAL 608
+#define PROCEDURE 609
+#define QUOTE 610
+#define RANGE 611
+#define READ 612
+#define REAL 613
+#define REASSIGN 614
+#define RECHECK 615
+#define RECURSIVE 616
+#define REF 617
+#define REFERENCES 618
+#define REINDEX 619
+#define RELATIVE_P 620
+#define RELEASE 621
+#define RENAME 622
+#define REPEATABLE 623
+#define REPLACE 624
+#define REPLICA 625
+#define RESET 626
+#define RESTART 627
+#define RESTRICT 628
+#define RETURNING 629
+#define RETURNS 630
+#define REVOKE 631
+#define RIGHT 632
+#define ROLE 633
+#define ROLLBACK 634
+#define ROW 635
+#define ROWS 636
+#define RULE 637
+#define SAVEPOINT 638
+#define SCHEMA 639
+#define SCROLL 640
+#define SEARCH 641
+#define SECOND_P 642
+#define SECURITY 643
+#define SELECT 644
+#define SEQUENCE 645
+#define SEQUENCES 646
+#define SERIALIZABLE 647
+#define SERVER 648
+#define SESSION 649
+#define SESSION_USER 650
+#define SET 651
+#define SETOF 652
+#define SHARE 653
+#define SHOW 654
+#define SIMILAR 655
+#define SIMPLE 656
+#define SMALLINT 657
+#define SNAPSHOT 658
+#define SOME 659
+#define STABLE 660
+#define STANDALONE_P 661
+#define START 662
+#define STATEMENT 663
+#define STATISTICS 664
+#define STDIN 665
+#define STDOUT 666
+#define STORAGE 667
+#define STRICT_P 668
+#define STRIP_P 669
+#define SUBSTRING 670
+#define SYMMETRIC 671
+#define SYSID 672
+#define SYSTEM_P 673
+#define TABLE 674
+#define TABLES 675
+#define TABLESPACE 676
+#define TEMP 677
+#define TEMPLATE 678
+#define TEMPORARY 679
+#define TEXT_P 680
+#define THEN 681
+#define TIME 682
+#define TIMESTAMP 683
+#define TO 684
+#define TRAILING 685
+#define TRANSACTION 686
+#define TREAT 687
+#define TRIGGER 688
+#define TRIM 689
+#define TRUE_P 690
+#define TRUNCATE 691
+#define TRUSTED 692
+#define TYPE_P 693
+#define TYPES_P 694
+#define UNBOUNDED 695
+#define UNCOMMITTED 696
+#define UNENCRYPTED 697
+#define UNION 698
+#define UNIQUE 699
+#define UNKNOWN 700
+#define UNLISTEN 701
+#define UNLOGGED 702
+#define UNTIL 703
+#define UPDATE 704
+#define USER 705
+#define USING 706
+#define VACUUM 707
+#define VALID 708
+#define VALIDATE 709
+#define VALIDATOR 710
+#define VALUE_P 711
+#define VALUES 712
+#define VARCHAR 713
+#define VARIADIC 714
+#define VARYING 715
+#define VERBOSE 716
+#define VERSION_P 717
+#define VIEW 718
+#define VOLATILE 719
+#define WHEN 720
+#define WHERE 721
+#define WHITESPACE_P 722
+#define WINDOW 723
+#define WITH 724
+#define WITHOUT 725
+#define WORK 726
+#define WRAPPER 727
+#define WRITE 728
+#define XML_P 729
+#define XMLATTRIBUTES 730
+#define XMLCONCAT 731
+#define XMLELEMENT 732
+#define XMLEXISTS 733
+#define XMLFOREST 734
+#define XMLPARSE 735
+#define XMLPI 736
+#define XMLROOT 737
+#define XMLSERIALIZE 738
+#define YEAR_P 739
+#define YES_P 740
+#define ZONE 741
+#define NULLS_FIRST 742
+#define NULLS_LAST 743
+#define WITH_TIME 744
+#define POSTFIXOP 745
+#define UMINUS 746
+
+
+
+
+/* Copy the first part of user declarations.  */
+#line 5 "preproc.y"
+
+#include "postgres_fe.h"
+
+#include "extern.h"
+#include "ecpg_config.h"
+#include <unistd.h>
+
+/* Location tracking support --- simpler than bison's default */
+#define YYLLOC_DEFAULT(Current, Rhs, N) \
+	do { \
+		if (N)						\
+			(Current) = (Rhs)[1];	\
+		else						\
+			(Current) = (Rhs)[0];	\
+	} while (0)
+
+/*
+ * The %name-prefix option below will make bison call base_yylex, but we
+ * really want it to call filtered_base_yylex (see parser.c).
+ */
+#define base_yylex filtered_base_yylex
+
+/*
+ * This is only here so the string gets into the POT.  Bison uses it
+ * internally.
+ */
+#define bison_gettext_dummy gettext_noop("syntax error")
+
+/*
+ * Variables containing simple states.
+ */
+int struct_level = 0;
+int braces_open; /* brace level counter */
+char *current_function;
+int ecpg_internal_var = 0;
+char	*connection = NULL;
+char	*input_filename = NULL;
+
+static int	FoundInto = 0;
+static int	initializer = 0;
+static int	pacounter = 1;
+static char	pacounter_buffer[sizeof(int) * CHAR_BIT * 10 / 3]; /* a rough guess at the size we need */
+static struct this_type actual_type[STRUCT_DEPTH];
+static char *actual_startline[STRUCT_DEPTH];
+static int	varchar_counter = 1;
+
+/* temporarily store struct members while creating the data structure */
+struct ECPGstruct_member *struct_member_list[STRUCT_DEPTH] = { NULL };
+
+/* also store struct type so we can do a sizeof() later */
+static char *ECPGstruct_sizeof = NULL;
+
+/* for forward declarations we have to store some data as well */
+static char *forward_name = NULL;
+
+struct ECPGtype ecpg_no_indicator = {ECPGt_NO_INDICATOR, NULL, NULL, NULL, {NULL}, 0};
+struct variable no_indicator = {"no_indicator", &ecpg_no_indicator, 0, NULL};
+
+struct ECPGtype ecpg_query = {ECPGt_char_variable, NULL, NULL, NULL, {NULL}, 0};
+
+/*
+ * Handle parsing errors and warnings
+ */
+void
+mmerror(int error_code, enum errortype type, const char *error, ...)
+{
+	va_list ap;
+
+	/* internationalize the error message string */
+	error = _(error);
+
+	fprintf(stderr, "%s:%d: ", input_filename, yylineno);
+
+	switch(type)
+	{
+		case ET_WARNING:
+			fprintf(stderr, _("WARNING: "));
+			break;
+		case ET_ERROR:
+		case ET_FATAL:
+			fprintf(stderr, _("ERROR: "));
+			break;
+	}
+
+	va_start(ap, error);
+	vfprintf(stderr, error, ap);
+	va_end(ap);
+
+	fprintf(stderr, "\n");
+
+	switch(type)
+	{
+		case ET_WARNING:
+			break;
+		case ET_ERROR:
+			ret_value = error_code;
+			break;
+		case ET_FATAL:
+			if (yyin)
+				fclose(yyin);
+			if (yyout)
+				fclose(yyout);
+
+			if (strcmp(output_filename, "-") != 0 && unlink(output_filename) != 0)
+				fprintf(stderr, _("could not remove output file \"%s\"\n"), output_filename);
+			exit(error_code);
+	}
+}
+
+/*
+ * string concatenation
+ */
+
+static char *
+cat2_str(char *str1, char *str2)
+{
+	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 2);
+
+	strcpy(res_str, str1);
+	if (strlen(str1) != 0 && strlen(str2) != 0)
+		strcat(res_str, " ");
+	strcat(res_str, str2);
+	free(str1);
+	free(str2);
+	return(res_str);
+}
+
+static char *
+cat_str(int count, ...)
+{
+	va_list		args;
+	int			i;
+	char		*res_str;
+
+	va_start(args, count);
+
+	res_str = va_arg(args, char *);
+
+	/* now add all other strings */
+	for (i = 1; i < count; i++)
+		res_str = cat2_str(res_str, va_arg(args, char *));
+
+	va_end(args);
+
+	return(res_str);
+}
+
+static char *
+make2_str(char *str1, char *str2)
+{
+	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) + 1);
+
+	strcpy(res_str, str1);
+	strcat(res_str, str2);
+	free(str1);
+	free(str2);
+	return(res_str);
+}
+
+static char *
+make3_str(char *str1, char *str2, char *str3)
+{
+	char * res_str	= (char *)mm_alloc(strlen(str1) + strlen(str2) +strlen(str3) + 1);
+
+	strcpy(res_str, str1);
+	strcat(res_str, str2);
+	strcat(res_str, str3);
+	free(str1);
+	free(str2);
+	free(str3);
+	return(res_str);
+}
+
+/* and the rest */
+static char *
+make_name(void)
+{
+	return mm_strdup(yytext);
+}
+
+static char *
+create_questionmarks(char *name, bool array)
+{
+	struct variable *p = find_variable(name);
+	int count;
+	char *result = EMPTY;
+
+	/* In case we have a struct, we have to print as many "?" as there are attributes in the struct
+	 * An array is only allowed together with an element argument
+	 * This is essantially only used for inserts, but using a struct as input parameter is an error anywhere else
+	 * so we don't have to worry here. */
+
+	if (p->type->type == ECPGt_struct || (array && p->type->type == ECPGt_array && p->type->u.element->type == ECPGt_struct))
+	{
+		struct ECPGstruct_member *m;
+
+		if (p->type->type == ECPGt_struct)
+			m = p->type->u.members;
+		else
+			m = p->type->u.element->u.members;
+
+		for (count = 0; m != NULL; m=m->next, count++);
+	}
+	else
+		count = 1;
+
+	for (; count > 0; count --)
+	{
+		sprintf(pacounter_buffer, "$%d", pacounter++);
+		result = cat_str(3, result, mm_strdup(pacounter_buffer), mm_strdup(" , "));
+	}
+
+	/* removed the trailing " ," */
+
+	result[strlen(result)-3] = '\0';
+	return(result);
+}
+
+static char *
+adjust_outofscope_cursor_vars(struct cursor *cur)
+{
+	/* Informix accepts DECLARE with variables that are out of scope when OPEN is called.
+	 * For instance you can DECLARE a cursor in one function, and OPEN/FETCH/CLOSE
+	 * it in another functions. This is very useful for e.g. event-driver programming,
+	 * but may also lead to dangerous programming. The limitation when this is allowed
+	 * and doesn't cause problems have to be documented, like the allocated variables
+	 * must not be realloc()'ed.
+	 *
+	 * We have to change the variables to our own struct and just store the pointer
+	 * instead of the variable. Do it only for local variables, not for globals.
+	 */
+
+	char *result = EMPTY;
+	int insert;
+
+	for (insert = 1; insert >= 0; insert--)
+	{
+		struct arguments *list;
+		struct arguments *ptr;
+		struct arguments *newlist = NULL;
+		struct variable *newvar, *newind;
+
+		list = (insert ? cur->argsinsert : cur->argsresult);
+
+		for (ptr = list; ptr != NULL; ptr = ptr->next)
+		{
+			char var_text[20];
+			char *original_var;
+			bool skip_set_var = false;
+			bool var_ptr = false;
+
+			/* change variable name to "ECPGget_var(<counter>)" */
+			original_var = ptr->variable->name;
+			sprintf(var_text, "%d))", ecpg_internal_var);
+
+			/* Don't emit ECPGset_var() calls for global variables */
+			if (ptr->variable->brace_level == 0)
+			{
+				newvar = ptr->variable;
+				skip_set_var = true;
+			}
+			else if ((ptr->variable->type->type == ECPGt_char_variable)
+					 && (strncmp(ptr->variable->name, "ECPGprepared_statement", strlen("ECPGprepared_statement")) == 0))
+			{
+				newvar = ptr->variable;
+				skip_set_var = true;
+			}
+			else if ((ptr->variable->type->type != ECPGt_varchar
+					  && ptr->variable->type->type != ECPGt_char
+					  && ptr->variable->type->type != ECPGt_unsigned_char
+					  && ptr->variable->type->type != ECPGt_string)
+					 && atoi(ptr->variable->type->size) > 1)
+			{
+				newvar = new_variable(cat_str(4, mm_strdup("("),
+											  mm_strdup(ecpg_type_name(ptr->variable->type->u.element->type)),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text)),
+									  ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type,
+																			   mm_strdup("1"),
+																			   ptr->variable->type->u.element->counter),
+														  ptr->variable->type->size),
+									  0);
+			}
+			else if ((ptr->variable->type->type == ECPGt_varchar
+					  || ptr->variable->type->type == ECPGt_char
+					  || ptr->variable->type->type == ECPGt_unsigned_char
+					  || ptr->variable->type->type == ECPGt_string)
+					 && atoi(ptr->variable->type->size) > 1)
+			{
+				newvar = new_variable(cat_str(4, mm_strdup("("),
+											  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text)),
+									  ECPGmake_simple_type(ptr->variable->type->type,
+														   ptr->variable->type->size,
+														   ptr->variable->type->counter),
+									  0);
+				if (ptr->variable->type->type == ECPGt_varchar)
+					var_ptr = true;
+			}
+			else if (ptr->variable->type->type == ECPGt_struct
+					 || ptr->variable->type->type == ECPGt_union)
+			{
+				newvar = new_variable(cat_str(5, mm_strdup("(*("),
+											  mm_strdup(ptr->variable->type->type_name),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text),
+											  mm_strdup(")")),
+									  ECPGmake_struct_type(ptr->variable->type->u.members,
+														   ptr->variable->type->type,
+														   ptr->variable->type->type_name,
+														   ptr->variable->type->struct_sizeof),
+									  0);
+				var_ptr = true;
+			}
+			else if (ptr->variable->type->type == ECPGt_array)
+			{
+				if (ptr->variable->type->u.element->type == ECPGt_struct
+					|| ptr->variable->type->u.element->type == ECPGt_union)
+				{
+					newvar = new_variable(cat_str(5, mm_strdup("(*("),
+											  mm_strdup(ptr->variable->type->u.element->type_name),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text),
+											  mm_strdup(")")),
+										  ECPGmake_struct_type(ptr->variable->type->u.element->u.members,
+															   ptr->variable->type->u.element->type,
+															   ptr->variable->type->u.element->type_name,
+															   ptr->variable->type->u.element->struct_sizeof),
+										  0);
+				}
+				else
+				{
+					newvar = new_variable(cat_str(4, mm_strdup("("),
+												  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
+												  mm_strdup(" *)(ECPGget_var("),
+												  mm_strdup(var_text)),
+										  ECPGmake_array_type(ECPGmake_simple_type(ptr->variable->type->u.element->type,
+																				   ptr->variable->type->u.element->size,
+																				   ptr->variable->type->u.element->counter),
+															  ptr->variable->type->size),
+										  0);
+					var_ptr = true;
+				}
+			}
+			else
+			{
+				newvar = new_variable(cat_str(4, mm_strdup("*("),
+											  mm_strdup(ecpg_type_name(ptr->variable->type->type)),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text)),
+									  ECPGmake_simple_type(ptr->variable->type->type,
+														   ptr->variable->type->size,
+														   ptr->variable->type->counter),
+									  0);
+				var_ptr = true;
+			}
+
+			/* create call to "ECPGset_var(<counter>, <connection>, <pointer>. <line number>)" */
+			if (!skip_set_var)
+			{
+				sprintf(var_text, "%d, %s", ecpg_internal_var++, var_ptr ? "&(" : "(");
+				result = cat_str(5, result, mm_strdup("ECPGset_var("),
+								 mm_strdup(var_text), mm_strdup(original_var),
+								 mm_strdup("), __LINE__);\n"));
+			}
+
+			/* now the indicator if there is one and it's not a global variable */
+			if ((ptr->indicator->type->type == ECPGt_NO_INDICATOR) || (ptr->indicator->brace_level == 0))
+			{
+				newind = ptr->indicator;
+			}
+			else
+			{
+				/* change variable name to "ECPGget_var(<counter>)" */
+				original_var = ptr->indicator->name;
+				sprintf(var_text, "%d))", ecpg_internal_var);
+				var_ptr = false;
+
+				if (ptr->indicator->type->type == ECPGt_struct
+					|| ptr->indicator->type->type == ECPGt_union)
+				{
+					newind = new_variable(cat_str(5, mm_strdup("(*("),
+											  mm_strdup(ptr->indicator->type->type_name),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text),
+											  mm_strdup(")")),
+										  ECPGmake_struct_type(ptr->indicator->type->u.members,
+															   ptr->indicator->type->type,
+															   ptr->indicator->type->type_name,
+															   ptr->indicator->type->struct_sizeof),
+										  0);
+					var_ptr = true;
+				}
+				else if (ptr->indicator->type->type == ECPGt_array)
+				{
+					if (ptr->indicator->type->u.element->type == ECPGt_struct
+						|| ptr->indicator->type->u.element->type == ECPGt_union)
+					{
+						newind = new_variable(cat_str(5, mm_strdup("(*("),
+											  mm_strdup(ptr->indicator->type->u.element->type_name),
+											  mm_strdup(" *)(ECPGget_var("),
+											  mm_strdup(var_text),
+											  mm_strdup(")")),
+											  ECPGmake_struct_type(ptr->indicator->type->u.element->u.members,
+																   ptr->indicator->type->u.element->type,
+																   ptr->indicator->type->u.element->type_name,
+																   ptr->indicator->type->u.element->struct_sizeof),
+											  0);
+					}
+					else
+					{
+						newind = new_variable(cat_str(4, mm_strdup("("),
+													  mm_strdup(ecpg_type_name(ptr->indicator->type->u.element->type)),
+													  mm_strdup(" *)(ECPGget_var("), mm_strdup(var_text)),
+											  ECPGmake_array_type(ECPGmake_simple_type(ptr->indicator->type->u.element->type,
+																					   ptr->indicator->type->u.element->size,
+																					   ptr->indicator->type->u.element->counter),
+																  ptr->indicator->type->size),
+											  0);
+						var_ptr = true;
+					}
+				}
+				else if (atoi(ptr->indicator->type->size) > 1)
+				{
+					newind = new_variable(cat_str(4, mm_strdup("("),
+												  mm_strdup(ecpg_type_name(ptr->indicator->type->type)),
+												  mm_strdup(" *)(ECPGget_var("),
+												  mm_strdup(var_text)),
+										  ECPGmake_simple_type(ptr->indicator->type->type,
+															   ptr->indicator->type->size,
+															   ptr->variable->type->counter),
+										  0);
+				}
+				else
+				{
+					newind = new_variable(cat_str(4, mm_strdup("*("),
+												  mm_strdup(ecpg_type_name(ptr->indicator->type->type)),
+												  mm_strdup(" *)(ECPGget_var("),
+												  mm_strdup(var_text)),
+										  ECPGmake_simple_type(ptr->indicator->type->type,
+															   ptr->indicator->type->size,
+															   ptr->variable->type->counter),
+										  0);
+					var_ptr = true;
+				}
+
+				/* create call to "ECPGset_var(<counter>, <pointer>. <line number>)" */
+				sprintf(var_text, "%d, %s", ecpg_internal_var++, var_ptr ? "&(" : "(");
+				result = cat_str(5, result, mm_strdup("ECPGset_var("),
+								 mm_strdup(var_text), mm_strdup(original_var),
+								 mm_strdup("), __LINE__);\n"));
+			}
+
+			add_variable_to_tail(&newlist, newvar, newind);
+		}
+
+		if (insert)
+			cur->argsinsert_oos = newlist;
+		else
+			cur->argsresult_oos = newlist;
+	}
+
+	return result;
+}
+
+/* This tests whether the cursor was declared and opened in the same function. */
+#define SAMEFUNC(cur)	\
+	((cur->function == NULL) ||		\
+	 (cur->function != NULL && strcmp(cur->function, current_function) == 0))
+
+static struct cursor *
+add_additional_variables(char *name, bool insert)
+{
+	struct cursor *ptr;
+	struct arguments *p;
+	int (* strcmp_fn)(const char *, const char *) = ((name[0] == ':' || name[0] == '"') ? strcmp : pg_strcasecmp);
+
+	for (ptr = cur; ptr != NULL; ptr=ptr->next)
+	{
+		if (strcmp_fn(ptr->name, name) == 0)
+			break;
+	}
+
+	if (ptr == NULL)
+	{
+		mmerror(PARSE_ERROR, ET_ERROR, "cursor \"%s\" does not exist", name);
+		return NULL;
+	}
+
+	if (insert)
+	{
+		/* add all those input variables that were given earlier
+		 * note that we have to append here but have to keep the existing order */
+		for (p = (SAMEFUNC(ptr) ? ptr->argsinsert : ptr->argsinsert_oos); p; p = p->next)
+			add_variable_to_tail(&argsinsert, p->variable, p->indicator);
+	}
+
+	/* add all those output variables that were given earlier */
+	for (p = (SAMEFUNC(ptr) ? ptr->argsresult : ptr->argsresult_oos); p; p = p->next)
+		add_variable_to_tail(&argsresult, p->variable, p->indicator);
+
+	return ptr;
+}
+
+static void
+add_typedef(char *name, char *dimension, char *length, enum ECPGttype type_enum,
+			char *type_dimension, char *type_index, int initializer, int array)
+{
+	/* add entry to list */
+	struct typedefs *ptr, *this;
+
+	if ((type_enum == ECPGt_struct ||
+		 type_enum == ECPGt_union) &&
+		initializer == 1)
+		mmerror(PARSE_ERROR, ET_ERROR, "initializer not allowed in type definition");
+	else if (INFORMIX_MODE && strcmp(name, "string") == 0)
+		mmerror(PARSE_ERROR, ET_ERROR, "type name \"string\" is reserved in Informix mode");
+	else
+	{
+		for (ptr = types; ptr != NULL; ptr = ptr->next)
+		{
+			if (strcmp(name, ptr->name) == 0)
+				/* re-definition is a bug */
+				mmerror(PARSE_ERROR, ET_ERROR, "type \"%s\" is already defined", name);
+		}
+		adjust_array(type_enum, &dimension, &length, type_dimension, type_index, array, true);
+
+		this = (struct typedefs *) mm_alloc(sizeof(struct typedefs));
+
+		/* initial definition */
+		this->next = types;
+		this->name = name;
+		this->brace_level = braces_open;
+		this->type = (struct this_type *) mm_alloc(sizeof(struct this_type));
+		this->type->type_enum = type_enum;
+		this->type->type_str = mm_strdup(name);
+		this->type->type_dimension = dimension; /* dimension of array */
+		this->type->type_index = length;	/* length of string */
+		this->type->type_sizeof = ECPGstruct_sizeof;
+		this->struct_member_list = (type_enum == ECPGt_struct || type_enum == ECPGt_union) ?
+		ECPGstruct_member_dup(struct_member_list[struct_level]) : NULL;
+
+		if (type_enum != ECPGt_varchar &&
+			type_enum != ECPGt_char &&
+			type_enum != ECPGt_unsigned_char &&
+			type_enum != ECPGt_string &&
+			atoi(this->type->type_index) >= 0)
+			mmerror(PARSE_ERROR, ET_ERROR, "multidimensional arrays for simple data types are not supported");
+
+		types = this;
+	}
+}
+
+
+/* Enabling traces.  */
+#ifndef YYDEBUG
+# define YYDEBUG 0
+#endif
 
+/* Enabling verbose error messages.  */
+#ifdef YYERROR_VERBOSE
+# undef YYERROR_VERBOSE
+# define YYERROR_VERBOSE 1
+#else
+# define YYERROR_VERBOSE 0
+#endif
 
+/* Enabling the token table.  */
+#ifndef YYTOKEN_TABLE
+# define YYTOKEN_TABLE 0
+#endif
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 564 "preproc.y"
-
+{
 	double	dval;
 	char	*str;
 	int		ival;
@@ -1171,15 +1650,13 @@
 	struct	fetch_desc	descriptor;
 	struct  su_symbol	struct_union;
 	struct	prep		prep;
-
-
-
-/* Line 293 of yacc.c  */
-#line 1179 "preproc.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 1656 "preproc.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 #if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
@@ -1199,8 +1676,8 @@
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 1204 "preproc.c"
+/* Line 216 of yacc.c.  */
+#line 1681 "preproc.tab.c"
 
 #ifdef short
 # undef short
@@ -1275,14 +1752,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -1303,11 +1780,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -1330,24 +1807,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -1364,9 +1841,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-  YYLTYPE yyls_alloc;
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+    YYLTYPE yyls;
 };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
@@ -1378,27 +1855,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
       + 2 * YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -1416,7 +1872,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  3
@@ -3240,19 +3713,19 @@
   "attr_name", "index_name", "file_name", "func_name", "AexprConst",
   "Iconst", "RoleId", "role_list", "SignedIconst", "NonReservedWord",
   "unreserved_keyword", "col_name_keyword", "type_func_name_keyword",
-  "reserved_keyword", "statements", "statement", "CreateAsStmt", "$@1",
+  "reserved_keyword", "statements", "statement", "CreateAsStmt", "@1",
   "at", "ECPGConnect", "connection_target", "opt_database_name",
   "db_prefix", "server", "opt_server", "server_name", "opt_port",
   "opt_connection_name", "opt_user", "ora_user", "user_name",
   "char_variable", "opt_options", "connect_options", "opt_opt_value",
   "prepared_name", "ECPGCursorStmt", "ECPGExecuteImmediateStmt",
   "ECPGVarDeclaration", "single_vt_declaration", "precision", "opt_scale",
-  "ecpg_interval", "ECPGDeclaration", "$@2", "sql_startdeclare",
+  "ecpg_interval", "ECPGDeclaration", "@2", "sql_startdeclare",
   "sql_enddeclare", "var_type_declarations", "vt_declarations",
-  "variable_declarations", "type_declaration", "$@3", "var_declaration",
-  "$@4", "$@5", "opt_bit_field", "storage_declaration", "storage_clause",
+  "variable_declarations", "type_declaration", "@3", "var_declaration",
+  "@4", "@5", "opt_bit_field", "storage_declaration", "storage_clause",
   "storage_modifier", "var_type", "enum_type", "enum_definition",
-  "struct_union_type_with_symbol", "$@6", "struct_union_type", "$@7",
+  "struct_union_type_with_symbol", "@6", "struct_union_type", "@7",
   "s_struct_union_symbol", "s_struct_union", "simple_type",
   "unsigned_type", "signed_type", "opt_signed", "variable_list",
   "variable", "opt_initializer", "opt_pointer", "ECPGDeclare",
@@ -3267,8 +3740,8 @@
   "ECPGGetDescriptor", "ECPGGetDescItems", "ECPGGetDescItem",
   "ECPGSetDescriptor", "ECPGSetDescItems", "ECPGSetDescItem",
   "AllConstVar", "descriptor_item", "ECPGSetAutocommit", "on_off",
-  "ECPGSetConnection", "ECPGTypedef", "$@8", "opt_reference", "ECPGVar",
-  "$@9", "ECPGWhenever", "action", "ECPGKeywords", "ECPGKeywords_vanames",
+  "ECPGSetConnection", "ECPGTypedef", "@8", "opt_reference", "ECPGVar",
+  "@9", "ECPGWhenever", "action", "ECPGKeywords", "ECPGKeywords_vanames",
   "ECPGKeywords_rest", "ECPGTypeName", "symbol", "ECPGColId", "ColId",
   "type_function_name", "ColLabel", "ECPGColLabel", "ECPGColLabelCommon",
   "ECPGCKeywords", "all_unreserved_keyword", "ECPGunreserved_interval",
@@ -3899,8 +4372,8 @@
        2,     1,     1,     1,     0,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint16 yydefact[] =
 {
@@ -5055,7 +5528,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -2577
 static const yytype_int16 yytable[] =
 {
@@ -15585,12 +16059,6 @@
        0,   653,   654
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-4326))
-
-#define yytable_value_is_error(yytable_value) \
-  ((yytable_value) == (-2577))
-
 static const yytype_int16 yycheck[] =
 {
        2,   880,   359,    78,   117,   246,   209,  1368,    78,  1098,
@@ -26633,18 +27101,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -26654,6 +27113,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -26816,20 +27276,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -26864,11 +27321,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       , &(yylsp[(yyi + 1) - (yynrhs)])		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -26905,6 +27362,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -27007,142 +27465,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -27176,9 +27607,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -27194,17 +27626,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
-/* Location data for the lookahead symbol.  */
-YYLTYPE yylloc;
-
 /* Number of syntax errors so far.  */
 int yynerrs;
+/* Location data for the look-ahead symbol.  */
+YYLTYPE yylloc;
+
 
 
 /*----------.
@@ -27233,47 +27666,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-       `yyls': related to locations.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    /* The location stack.  */
-    YYLTYPE yylsa[YYINITDEPTH];
-    YYLTYPE *yyls;
-    YYLTYPE *yylsp;
-
-    /* The locations where the error started and ended.  */
-    YYLTYPE yyerror_range[3];
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-  YYLTYPE yyloc;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -27281,37 +27681,63 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+  /* The location stack.  */
+  YYLTYPE yylsa[YYINITDEPTH];
+  YYLTYPE *yyls = yylsa;
+  YYLTYPE *yylsp;
+  /* The locations where the error started and ended.  */
+  YYLTYPE yyerror_range[2];
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+  YYLTYPE yyloc;
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yyls = yylsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
   yylsp = yyls;
-
 #if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
   /* Initialize the default location before parsing starts.  */
   yylloc.first_line   = yylloc.last_line   = 1;
-  yylloc.first_column = yylloc.last_column = 1;
+  yylloc.first_column = yylloc.last_column = 0;
 #endif
 
   goto yysetstate;
@@ -27350,7 +27776,6 @@
 		    &yyvs1, yysize * sizeof (*yyvsp),
 		    &yyls1, yysize * sizeof (*yylsp),
 		    &yystacksize);
-
 	yyls = yyls1;
 	yyss = yyss1;
 	yyvs = yyvs1;
@@ -27372,9 +27797,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
-	YYSTACK_RELOCATE (yyls_alloc, yyls);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+	YYSTACK_RELOCATE (yyls);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -27395,9 +27820,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -27406,16 +27828,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -27441,22 +27863,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -27497,190 +27923,136 @@
   switch (yyn)
     {
         case 3:
-
-/* Line 1806 of yacc.c  */
 #line 1470 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 1472 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 1474 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 1476 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 1478 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 1480 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 9:
-
-/* Line 1806 of yacc.c  */
 #line 1482 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 10:
-
-/* Line 1806 of yacc.c  */
 #line 1484 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 11:
-
-/* Line 1806 of yacc.c  */
 #line 1486 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 12:
-
-/* Line 1806 of yacc.c  */
 #line 1488 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 13:
-
-/* Line 1806 of yacc.c  */
 #line 1490 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 14:
-
-/* Line 1806 of yacc.c  */
 #line 1492 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 1494 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 16:
-
-/* Line 1806 of yacc.c  */
 #line 1496 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 17:
-
-/* Line 1806 of yacc.c  */
 #line 1498 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 18:
-
-/* Line 1806 of yacc.c  */
 #line 1500 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 1502 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 1504 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 1506 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 1508 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 23:
-
-/* Line 1806 of yacc.c  */
 #line 1510 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 24:
-
-/* Line 1806 of yacc.c  */
 #line 1512 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 25:
-
-/* Line 1806 of yacc.c  */
 #line 1514 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 26:
-
-/* Line 1806 of yacc.c  */
 #line 1516 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 27:
-
-/* Line 1806 of yacc.c  */
 #line 1518 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 28:
-
-/* Line 1806 of yacc.c  */
 #line 1520 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 29:
-
-/* Line 1806 of yacc.c  */
 #line 1522 "preproc.y"
     {
 		if (INFORMIX_MODE)
@@ -27698,615 +28070,445 @@
 		}
 
 		output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal);
-	}
+	;}
     break;
 
   case 30:
-
-/* Line 1806 of yacc.c  */
 #line 1540 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 31:
-
-/* Line 1806 of yacc.c  */
 #line 1542 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 32:
-
-/* Line 1806 of yacc.c  */
 #line 1544 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 33:
-
-/* Line 1806 of yacc.c  */
 #line 1546 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 34:
-
-/* Line 1806 of yacc.c  */
 #line 1548 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 35:
-
-/* Line 1806 of yacc.c  */
 #line 1550 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 36:
-
-/* Line 1806 of yacc.c  */
 #line 1552 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 37:
-
-/* Line 1806 of yacc.c  */
 #line 1554 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 38:
-
-/* Line 1806 of yacc.c  */
 #line 1556 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 39:
-
-/* Line 1806 of yacc.c  */
 #line 1558 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 40:
-
-/* Line 1806 of yacc.c  */
 #line 1560 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 41:
-
-/* Line 1806 of yacc.c  */
 #line 1562 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 42:
-
-/* Line 1806 of yacc.c  */
 #line 1564 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 43:
-
-/* Line 1806 of yacc.c  */
 #line 1566 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 44:
-
-/* Line 1806 of yacc.c  */
 #line 1568 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 45:
-
-/* Line 1806 of yacc.c  */
 #line 1570 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 46:
-
-/* Line 1806 of yacc.c  */
 #line 1572 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 47:
-
-/* Line 1806 of yacc.c  */
 #line 1574 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 48:
-
-/* Line 1806 of yacc.c  */
 #line 1576 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 49:
-
-/* Line 1806 of yacc.c  */
 #line 1578 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 50:
-
-/* Line 1806 of yacc.c  */
 #line 1580 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 51:
-
-/* Line 1806 of yacc.c  */
 #line 1582 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 52:
-
-/* Line 1806 of yacc.c  */
 #line 1584 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 53:
-
-/* Line 1806 of yacc.c  */
 #line 1586 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 54:
-
-/* Line 1806 of yacc.c  */
 #line 1588 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 55:
-
-/* Line 1806 of yacc.c  */
 #line 1590 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 56:
-
-/* Line 1806 of yacc.c  */
 #line 1592 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 57:
-
-/* Line 1806 of yacc.c  */
 #line 1594 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 58:
-
-/* Line 1806 of yacc.c  */
 #line 1596 "preproc.y"
     {
 		output_deallocate_prepare_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 59:
-
-/* Line 1806 of yacc.c  */
 #line 1600 "preproc.y"
-    { output_simple_statement((yyvsp[(1) - (1)].str)); }
+    { output_simple_statement((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 60:
-
-/* Line 1806 of yacc.c  */
 #line 1602 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 61:
-
-/* Line 1806 of yacc.c  */
 #line 1604 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 62:
-
-/* Line 1806 of yacc.c  */
 #line 1606 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); ;}
     break;
 
   case 63:
-
-/* Line 1806 of yacc.c  */
 #line 1608 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 64:
-
-/* Line 1806 of yacc.c  */
 #line 1610 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 65:
-
-/* Line 1806 of yacc.c  */
 #line 1612 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 66:
-
-/* Line 1806 of yacc.c  */
 #line 1614 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 67:
-
-/* Line 1806 of yacc.c  */
 #line 1616 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 68:
-
-/* Line 1806 of yacc.c  */
 #line 1618 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 69:
-
-/* Line 1806 of yacc.c  */
 #line 1620 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 70:
-
-/* Line 1806 of yacc.c  */
 #line 1622 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 71:
-
-/* Line 1806 of yacc.c  */
 #line 1624 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 72:
-
-/* Line 1806 of yacc.c  */
 #line 1626 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 73:
-
-/* Line 1806 of yacc.c  */
 #line 1628 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 74:
-
-/* Line 1806 of yacc.c  */
 #line 1630 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 75:
-
-/* Line 1806 of yacc.c  */
 #line 1632 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 76:
-
-/* Line 1806 of yacc.c  */
 #line 1634 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 77:
-
-/* Line 1806 of yacc.c  */
 #line 1636 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 78:
-
-/* Line 1806 of yacc.c  */
 #line 1638 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 79:
-
-/* Line 1806 of yacc.c  */
 #line 1640 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 80:
-
-/* Line 1806 of yacc.c  */
 #line 1642 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 81:
-
-/* Line 1806 of yacc.c  */
 #line 1644 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_execute); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_execute); ;}
     break;
 
   case 82:
-
-/* Line 1806 of yacc.c  */
 #line 1646 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 83:
-
-/* Line 1806 of yacc.c  */
 #line 1648 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_normal); ;}
     break;
 
   case 84:
-
-/* Line 1806 of yacc.c  */
 #line 1650 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 85:
-
-/* Line 1806 of yacc.c  */
 #line 1652 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 86:
-
-/* Line 1806 of yacc.c  */
 #line 1654 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 87:
-
-/* Line 1806 of yacc.c  */
 #line 1656 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 88:
-
-/* Line 1806 of yacc.c  */
 #line 1658 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 89:
-
-/* Line 1806 of yacc.c  */
 #line 1660 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 90:
-
-/* Line 1806 of yacc.c  */
 #line 1662 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 91:
-
-/* Line 1806 of yacc.c  */
 #line 1664 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 92:
-
-/* Line 1806 of yacc.c  */
 #line 1666 "preproc.y"
     {
 		if ((yyvsp[(1) - (1)].prep).type == NULL || strlen((yyvsp[(1) - (1)].prep).type) == 0)
 			output_prepare_statement((yyvsp[(1) - (1)].prep).name, (yyvsp[(1) - (1)].prep).stmt);
 		else
 			output_statement(cat_str(5, mm_strdup("prepare"), (yyvsp[(1) - (1)].prep).name, (yyvsp[(1) - (1)].prep).type, mm_strdup("as"), (yyvsp[(1) - (1)].prep).stmt), 0, ECPGst_normal);
-	}
+	;}
     break;
 
   case 93:
-
-/* Line 1806 of yacc.c  */
 #line 1673 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 94:
-
-/* Line 1806 of yacc.c  */
 #line 1675 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 95:
-
-/* Line 1806 of yacc.c  */
 #line 1677 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 96:
-
-/* Line 1806 of yacc.c  */
 #line 1679 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 97:
-
-/* Line 1806 of yacc.c  */
 #line 1681 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 98:
-
-/* Line 1806 of yacc.c  */
 #line 1683 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 99:
-
-/* Line 1806 of yacc.c  */
 #line 1685 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 100:
-
-/* Line 1806 of yacc.c  */
 #line 1687 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 101:
-
-/* Line 1806 of yacc.c  */
 #line 1689 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 102:
-
-/* Line 1806 of yacc.c  */
 #line 1691 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 103:
-
-/* Line 1806 of yacc.c  */
 #line 1693 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 104:
-
-/* Line 1806 of yacc.c  */
 #line 1695 "preproc.y"
     {
 		fprintf(yyout, "{ ECPGtrans(__LINE__, %s, \"%s\");", connection ? connection : "NULL", (yyvsp[(1) - (1)].str));
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 105:
-
-/* Line 1806 of yacc.c  */
 #line 1701 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 106:
-
-/* Line 1806 of yacc.c  */
 #line 1703 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 107:
-
-/* Line 1806 of yacc.c  */
 #line 1705 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); }
+    { output_statement((yyvsp[(1) - (1)].str), 1, ECPGst_prepnormal); ;}
     break;
 
   case 108:
-
-/* Line 1806 of yacc.c  */
 #line 1707 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 109:
-
-/* Line 1806 of yacc.c  */
 #line 1709 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 110:
-
-/* Line 1806 of yacc.c  */
 #line 1711 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 111:
-
-/* Line 1806 of yacc.c  */
 #line 1713 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 112:
-
-/* Line 1806 of yacc.c  */
 #line 1715 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_normal); ;}
     break;
 
   case 113:
-
-/* Line 1806 of yacc.c  */
 #line 1717 "preproc.y"
     {
 		fprintf(yyout,"ECPGallocate_desc(__LINE__, %s);",(yyvsp[(1) - (1)].str));
 		whenever_action(0);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 114:
-
-/* Line 1806 of yacc.c  */
 #line 1723 "preproc.y"
     {
 		if (connection)
@@ -28316,41 +28518,33 @@
 		reset_variables();
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 115:
-
-/* Line 1806 of yacc.c  */
 #line 1733 "preproc.y"
     {
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 116:
-
-/* Line 1806 of yacc.c  */
 #line 1737 "preproc.y"
     {
 		fprintf(yyout,"ECPGdeallocate_desc(__LINE__, %s);",(yyvsp[(1) - (1)].str));
 		whenever_action(0);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 117:
-
-/* Line 1806 of yacc.c  */
 #line 1743 "preproc.y"
     {
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 118:
-
-/* Line 1806 of yacc.c  */
 #line 1747 "preproc.y"
     {
 		fprintf(yyout, "{ ECPGdescribe(__LINE__, %d, %s,", compat, (yyvsp[(1) - (1)].str));
@@ -28360,12 +28554,10 @@
 		output_line_number();
 
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 119:
-
-/* Line 1806 of yacc.c  */
 #line 1757 "preproc.y"
     {
 		if (connection)
@@ -28375,19 +28567,15 @@
 				(yyvsp[(1) - (1)].str) ? (yyvsp[(1) - (1)].str) : "\"CURRENT\"");
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 120:
-
-/* Line 1806 of yacc.c  */
 #line 1766 "preproc.y"
-    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_exec_immediate); }
+    { output_statement((yyvsp[(1) - (1)].str), 0, ECPGst_exec_immediate); ;}
     break;
 
   case 121:
-
-/* Line 1806 of yacc.c  */
 #line 1768 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
@@ -28401,35 +28589,29 @@
 
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 122:
-
-/* Line 1806 of yacc.c  */
 #line 1782 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].descriptor).name, connection);
 		output_get_descr((yyvsp[(1) - (1)].descriptor).name, (yyvsp[(1) - (1)].descriptor).str);
 		free((yyvsp[(1) - (1)].descriptor).name);
 		free((yyvsp[(1) - (1)].descriptor).str);
-	}
+	;}
     break;
 
   case 123:
-
-/* Line 1806 of yacc.c  */
 #line 1789 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].str), connection);
 		output_get_descr_header((yyvsp[(1) - (1)].str));
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 124:
-
-/* Line 1806 of yacc.c  */
 #line 1795 "preproc.y"
     {
 		struct cursor *ptr;
@@ -28440,23 +28622,19 @@
 			output_statement(mm_strdup(ptr->command), 0, ECPGst_normal);
 			ptr->opened = true;
 		}
-	}
+	;}
     break;
 
   case 125:
-
-/* Line 1806 of yacc.c  */
 #line 1806 "preproc.y"
     {
 		fprintf(yyout, "{ ECPGsetcommit(__LINE__, \"%s\", %s);", (yyvsp[(1) - (1)].str), connection ? connection : "NULL");
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 126:
-
-/* Line 1806 of yacc.c  */
 #line 1812 "preproc.y"
     {
 		if (connection)
@@ -28465,35 +28643,29 @@
 		fprintf(yyout, "{ ECPGsetconn(__LINE__, %s);", (yyvsp[(1) - (1)].str));
 		whenever_action(2);
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 127:
-
-/* Line 1806 of yacc.c  */
 #line 1821 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].descriptor).name, connection);
 		output_set_descr((yyvsp[(1) - (1)].descriptor).name, (yyvsp[(1) - (1)].descriptor).str);
 		free((yyvsp[(1) - (1)].descriptor).name);
 		free((yyvsp[(1) - (1)].descriptor).str);
-	}
+	;}
     break;
 
   case 128:
-
-/* Line 1806 of yacc.c  */
 #line 1828 "preproc.y"
     {
 		lookup_descriptor((yyvsp[(1) - (1)].str), connection);
 		output_set_descr_header((yyvsp[(1) - (1)].str));
 		free((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 129:
-
-/* Line 1806 of yacc.c  */
 #line 1834 "preproc.y"
     {
 		if (connection)
@@ -28502,722 +28674,562 @@
 		fprintf(yyout, "%s", (yyvsp[(1) - (1)].str));
 		free((yyvsp[(1) - (1)].str));
 		output_line_number();
-	}
+	;}
     break;
 
   case 130:
-
-/* Line 1806 of yacc.c  */
 #line 1843 "preproc.y"
     {
 		if (connection)
 			mmerror(PARSE_ERROR, ET_ERROR, "AT option not allowed in VAR statement");
 
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 131:
-
-/* Line 1806 of yacc.c  */
 #line 1850 "preproc.y"
     {
 		if (connection)
 			mmerror(PARSE_ERROR, ET_ERROR, "AT option not allowed in WHENEVER statement");
 
 		output_simple_statement((yyvsp[(1) - (1)].str));
-	}
+	;}
     break;
 
   case 132:
-
-/* Line 1806 of yacc.c  */
 #line 1857 "preproc.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 133:
-
-/* Line 1806 of yacc.c  */
 #line 1863 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create role"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 134:
-
-/* Line 1806 of yacc.c  */
 #line 1871 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with");
-}
+;}
     break;
 
   case 135:
-
-/* Line 1806 of yacc.c  */
 #line 1875 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 136:
-
-/* Line 1806 of yacc.c  */
 #line 1882 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 137:
-
-/* Line 1806 of yacc.c  */
 #line 1886 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 138:
-
-/* Line 1806 of yacc.c  */
 #line 1893 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 139:
-
-/* Line 1806 of yacc.c  */
 #line 1897 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 140:
-
-/* Line 1806 of yacc.c  */
 #line 1904 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("password"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 141:
-
-/* Line 1806 of yacc.c  */
 #line 1908 "preproc.y"
     { 
  (yyval.str) = mm_strdup("password null");
-}
+;}
     break;
 
   case 142:
-
-/* Line 1806 of yacc.c  */
 #line 1912 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("encrypted password"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 143:
-
-/* Line 1806 of yacc.c  */
 #line 1916 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("unencrypted password"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 144:
-
-/* Line 1806 of yacc.c  */
 #line 1920 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inherit");
-}
+;}
     break;
 
   case 145:
-
-/* Line 1806 of yacc.c  */
 #line 1924 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("connection limit"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 146:
-
-/* Line 1806 of yacc.c  */
 #line 1928 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("valid until"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 147:
-
-/* Line 1806 of yacc.c  */
 #line 1932 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("user"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 148:
-
-/* Line 1806 of yacc.c  */
 #line 1936 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 149:
-
-/* Line 1806 of yacc.c  */
 #line 1944 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 150:
-
-/* Line 1806 of yacc.c  */
 #line 1948 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("sysid"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 151:
-
-/* Line 1806 of yacc.c  */
 #line 1952 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("admin"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 152:
-
-/* Line 1806 of yacc.c  */
 #line 1956 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("role"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 153:
-
-/* Line 1806 of yacc.c  */
 #line 1960 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("in role"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 154:
-
-/* Line 1806 of yacc.c  */
 #line 1964 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("in group"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 155:
-
-/* Line 1806 of yacc.c  */
 #line 1972 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create user"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 156:
-
-/* Line 1806 of yacc.c  */
 #line 1980 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter role"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 157:
-
-/* Line 1806 of yacc.c  */
 #line 1988 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 158:
-
-/* Line 1806 of yacc.c  */
 #line 1991 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("in database"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 159:
-
-/* Line 1806 of yacc.c  */
 #line 1999 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter role"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 160:
-
-/* Line 1806 of yacc.c  */
 #line 2007 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter user"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 161:
-
-/* Line 1806 of yacc.c  */
 #line 2015 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter user"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 162:
-
-/* Line 1806 of yacc.c  */
 #line 2023 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop role"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 163:
-
-/* Line 1806 of yacc.c  */
 #line 2027 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop role if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 164:
-
-/* Line 1806 of yacc.c  */
 #line 2035 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop user"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 165:
-
-/* Line 1806 of yacc.c  */
 #line 2039 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop user if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 166:
-
-/* Line 1806 of yacc.c  */
 #line 2047 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create group"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 167:
-
-/* Line 1806 of yacc.c  */
 #line 2055 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter group"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("user"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 168:
-
-/* Line 1806 of yacc.c  */
 #line 2063 "preproc.y"
     { 
  (yyval.str) = mm_strdup("add");
-}
+;}
     break;
 
   case 169:
-
-/* Line 1806 of yacc.c  */
 #line 2067 "preproc.y"
     { 
  (yyval.str) = mm_strdup("drop");
-}
+;}
     break;
 
   case 170:
-
-/* Line 1806 of yacc.c  */
 #line 2075 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop group"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 171:
-
-/* Line 1806 of yacc.c  */
 #line 2079 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop group if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 172:
-
-/* Line 1806 of yacc.c  */
 #line 2087 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create schema"),(yyvsp[(3) - (6)].str),mm_strdup("authorization"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 173:
-
-/* Line 1806 of yacc.c  */
 #line 2091 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create schema"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 174:
-
-/* Line 1806 of yacc.c  */
 #line 2099 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 175:
-
-/* Line 1806 of yacc.c  */
 #line 2103 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 176:
-
-/* Line 1806 of yacc.c  */
 #line 2110 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 177:
-
-/* Line 1806 of yacc.c  */
 #line 2114 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 178:
-
-/* Line 1806 of yacc.c  */
 #line 2121 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 179:
-
-/* Line 1806 of yacc.c  */
 #line 2125 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 180:
-
-/* Line 1806 of yacc.c  */
 #line 2129 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 181:
-
-/* Line 1806 of yacc.c  */
 #line 2133 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 182:
-
-/* Line 1806 of yacc.c  */
 #line 2137 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 183:
-
-/* Line 1806 of yacc.c  */
 #line 2141 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 184:
-
-/* Line 1806 of yacc.c  */
 #line 2149 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 185:
-
-/* Line 1806 of yacc.c  */
 #line 2153 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set local"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 186:
-
-/* Line 1806 of yacc.c  */
 #line 2157 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set session"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 187:
-
-/* Line 1806 of yacc.c  */
 #line 2165 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("transaction"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 188:
-
-/* Line 1806 of yacc.c  */
 #line 2169 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("session characteristics as transaction"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 189:
-
-/* Line 1806 of yacc.c  */
 #line 2173 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 190:
-
-/* Line 1806 of yacc.c  */
 #line 2181 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 191:
-
-/* Line 1806 of yacc.c  */
 #line 2185 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 192:
-
-/* Line 1806 of yacc.c  */
 #line 2189 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("to default"));
-}
+;}
     break;
 
   case 193:
-
-/* Line 1806 of yacc.c  */
 #line 2193 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("= default"));
-}
+;}
     break;
 
   case 194:
-
-/* Line 1806 of yacc.c  */
 #line 2197 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("from current"));
-}
+;}
     break;
 
   case 195:
-
-/* Line 1806 of yacc.c  */
 #line 2201 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("time zone"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 196:
-
-/* Line 1806 of yacc.c  */
 #line 2205 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,mm_strdup("catalog"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 197:
-
-/* Line 1806 of yacc.c  */
 #line 2210 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("schema"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 198:
-
-/* Line 1806 of yacc.c  */
 #line 2214 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("names"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 199:
-
-/* Line 1806 of yacc.c  */
 #line 2218 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("role"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 200:
-
-/* Line 1806 of yacc.c  */
 #line 2222 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("session authorization"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 201:
-
-/* Line 1806 of yacc.c  */
 #line 2226 "preproc.y"
     { 
  (yyval.str) = mm_strdup("session authorization default");
-}
+;}
     break;
 
   case 202:
-
-/* Line 1806 of yacc.c  */
 #line 2230 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("xml option"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 203:
-
-/* Line 1806 of yacc.c  */
 #line 2234 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("transaction snapshot"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 204:
-
-/* Line 1806 of yacc.c  */
 #line 2242 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 205:
-
-/* Line 1806 of yacc.c  */
 #line 2246 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 206:
-
-/* Line 1806 of yacc.c  */
 #line 2254 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 207:
-
-/* Line 1806 of yacc.c  */
 #line 2258 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 208:
-
-/* Line 1806 of yacc.c  */
 #line 2266 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 209:
-
-/* Line 1806 of yacc.c  */
 #line 2270 "preproc.y"
     { 
 		if ((yyvsp[(1) - (1)].str)[0] == '$')
@@ -29227,1116 +29239,868 @@
 		}
 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 210:
-
-/* Line 1806 of yacc.c  */
 #line 2284 "preproc.y"
     { 
  (yyval.str) = mm_strdup("read uncommitted");
-}
+;}
     break;
 
   case 211:
-
-/* Line 1806 of yacc.c  */
 #line 2288 "preproc.y"
     { 
  (yyval.str) = mm_strdup("read committed");
-}
+;}
     break;
 
   case 212:
-
-/* Line 1806 of yacc.c  */
 #line 2292 "preproc.y"
     { 
  (yyval.str) = mm_strdup("repeatable read");
-}
+;}
     break;
 
   case 213:
-
-/* Line 1806 of yacc.c  */
 #line 2296 "preproc.y"
     { 
  (yyval.str) = mm_strdup("serializable");
-}
+;}
     break;
 
   case 214:
-
-/* Line 1806 of yacc.c  */
 #line 2304 "preproc.y"
     { 
  (yyval.str) = mm_strdup("true");
-}
+;}
     break;
 
   case 215:
-
-/* Line 1806 of yacc.c  */
 #line 2308 "preproc.y"
     { 
  (yyval.str) = mm_strdup("false");
-}
+;}
     break;
 
   case 216:
-
-/* Line 1806 of yacc.c  */
 #line 2312 "preproc.y"
     { 
  (yyval.str) = mm_strdup("on");
-}
+;}
     break;
 
   case 217:
-
-/* Line 1806 of yacc.c  */
 #line 2316 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 218:
-
-/* Line 1806 of yacc.c  */
 #line 2324 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 219:
-
-/* Line 1806 of yacc.c  */
 #line 2328 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 220:
-
-/* Line 1806 of yacc.c  */
 #line 2332 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 221:
-
-/* Line 1806 of yacc.c  */
 #line 2336 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),mm_strdup("("),(yyvsp[(3) - (6)].str),mm_strdup(")"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 222:
-
-/* Line 1806 of yacc.c  */
 #line 2340 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 223:
-
-/* Line 1806 of yacc.c  */
 #line 2344 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default");
-}
+;}
     break;
 
   case 224:
-
-/* Line 1806 of yacc.c  */
 #line 2348 "preproc.y"
     { 
  (yyval.str) = mm_strdup("local");
-}
+;}
     break;
 
   case 225:
-
-/* Line 1806 of yacc.c  */
 #line 2356 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 226:
-
-/* Line 1806 of yacc.c  */
 #line 2360 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default");
-}
+;}
     break;
 
   case 227:
-
-/* Line 1806 of yacc.c  */
 #line 2364 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 228:
-
-/* Line 1806 of yacc.c  */
 #line 2371 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 229:
-
-/* Line 1806 of yacc.c  */
 #line 2375 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 230:
-
-/* Line 1806 of yacc.c  */
 #line 2383 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("reset"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 231:
-
-/* Line 1806 of yacc.c  */
 #line 2387 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reset time zone");
-}
+;}
     break;
 
   case 232:
-
-/* Line 1806 of yacc.c  */
 #line 2391 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reset transaction isolation level");
-}
+;}
     break;
 
   case 233:
-
-/* Line 1806 of yacc.c  */
 #line 2395 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reset session authorization");
-}
+;}
     break;
 
   case 234:
-
-/* Line 1806 of yacc.c  */
 #line 2399 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reset all");
-}
+;}
     break;
 
   case 235:
-
-/* Line 1806 of yacc.c  */
 #line 2407 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 236:
-
-/* Line 1806 of yacc.c  */
 #line 2411 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 237:
-
-/* Line 1806 of yacc.c  */
 #line 2419 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 238:
-
-/* Line 1806 of yacc.c  */
 #line 2423 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 239:
-
-/* Line 1806 of yacc.c  */
 #line 2431 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("show"),(yyvsp[(2) - (3)].str));
-}
+;}
     break;
 
   case 240:
-
-/* Line 1806 of yacc.c  */
 #line 2435 "preproc.y"
     { 
  (yyval.str) = mm_strdup("show time zone");
-}
+;}
     break;
 
   case 241:
-
-/* Line 1806 of yacc.c  */
 #line 2439 "preproc.y"
     { 
  (yyval.str) = mm_strdup("show transaction isolation level");
-}
+;}
     break;
 
   case 242:
-
-/* Line 1806 of yacc.c  */
 #line 2443 "preproc.y"
     { 
  (yyval.str) = mm_strdup("show session authorization");
-}
+;}
     break;
 
   case 243:
-
-/* Line 1806 of yacc.c  */
 #line 2447 "preproc.y"
     {
 		mmerror(PARSE_ERROR, ET_ERROR, "SHOW ALL is not implemented");
 		(yyval.str) = EMPTY;
-	}
+	;}
     break;
 
   case 244:
-
-/* Line 1806 of yacc.c  */
 #line 2456 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("set constraints"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 245:
-
-/* Line 1806 of yacc.c  */
 #line 2464 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 246:
-
-/* Line 1806 of yacc.c  */
 #line 2468 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 247:
-
-/* Line 1806 of yacc.c  */
 #line 2476 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferred");
-}
+;}
     break;
 
   case 248:
-
-/* Line 1806 of yacc.c  */
 #line 2480 "preproc.y"
     { 
  (yyval.str) = mm_strdup("immediate");
-}
+;}
     break;
 
   case 249:
-
-/* Line 1806 of yacc.c  */
 #line 2488 "preproc.y"
     { 
  (yyval.str) = mm_strdup("checkpoint");
-}
+;}
     break;
 
   case 250:
-
-/* Line 1806 of yacc.c  */
 #line 2496 "preproc.y"
     { 
  (yyval.str) = mm_strdup("discard all");
-}
+;}
     break;
 
   case 251:
-
-/* Line 1806 of yacc.c  */
 #line 2500 "preproc.y"
     { 
  (yyval.str) = mm_strdup("discard temp");
-}
+;}
     break;
 
   case 252:
-
-/* Line 1806 of yacc.c  */
 #line 2504 "preproc.y"
     { 
  (yyval.str) = mm_strdup("discard temporary");
-}
+;}
     break;
 
   case 253:
-
-/* Line 1806 of yacc.c  */
 #line 2508 "preproc.y"
     { 
  (yyval.str) = mm_strdup("discard plans");
-}
+;}
     break;
 
   case 254:
-
-/* Line 1806 of yacc.c  */
 #line 2516 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter table"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 255:
-
-/* Line 1806 of yacc.c  */
 #line 2520 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter table if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 256:
-
-/* Line 1806 of yacc.c  */
 #line 2524 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter index"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 257:
-
-/* Line 1806 of yacc.c  */
 #line 2528 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter index if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 258:
-
-/* Line 1806 of yacc.c  */
 #line 2532 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 259:
-
-/* Line 1806 of yacc.c  */
 #line 2536 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 260:
-
-/* Line 1806 of yacc.c  */
 #line 2540 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter view"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 261:
-
-/* Line 1806 of yacc.c  */
 #line 2544 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter view if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 262:
-
-/* Line 1806 of yacc.c  */
 #line 2552 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 263:
-
-/* Line 1806 of yacc.c  */
 #line 2556 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 264:
-
-/* Line 1806 of yacc.c  */
 #line 2564 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("add"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 265:
-
-/* Line 1806 of yacc.c  */
 #line 2568 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("add column"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 266:
-
-/* Line 1806 of yacc.c  */
 #line 2572 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 267:
-
-/* Line 1806 of yacc.c  */
 #line 2576 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),mm_strdup("drop not null"));
-}
+;}
     break;
 
   case 268:
-
-/* Line 1806 of yacc.c  */
 #line 2580 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),mm_strdup("set not null"));
-}
+;}
     break;
 
   case 269:
-
-/* Line 1806 of yacc.c  */
 #line 2584 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),mm_strdup("set statistics"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 270:
-
-/* Line 1806 of yacc.c  */
 #line 2588 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),mm_strdup("set"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 271:
-
-/* Line 1806 of yacc.c  */
 #line 2592 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),mm_strdup("reset"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 272:
-
-/* Line 1806 of yacc.c  */
 #line 2596 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),mm_strdup("set storage"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 273:
-
-/* Line 1806 of yacc.c  */
 #line 2600 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop"),(yyvsp[(2) - (6)].str),mm_strdup("if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 274:
-
-/* Line 1806 of yacc.c  */
 #line 2604 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 275:
-
-/* Line 1806 of yacc.c  */
 #line 2608 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("alter"),(yyvsp[(2) - (8)].str),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("type"),(yyvsp[(6) - (8)].str),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 276:
-
-/* Line 1806 of yacc.c  */
 #line 2612 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 277:
-
-/* Line 1806 of yacc.c  */
 #line 2616 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("add"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 278:
-
-/* Line 1806 of yacc.c  */
 #line 2620 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("validate constraint"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 279:
-
-/* Line 1806 of yacc.c  */
 #line 2624 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop constraint if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 280:
-
-/* Line 1806 of yacc.c  */
 #line 2628 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop constraint"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 281:
-
-/* Line 1806 of yacc.c  */
 #line 2632 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set with oids");
-}
+;}
     break;
 
   case 282:
-
-/* Line 1806 of yacc.c  */
 #line 2636 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set without oids");
-}
+;}
     break;
 
   case 283:
-
-/* Line 1806 of yacc.c  */
 #line 2640 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("cluster on"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 284:
-
-/* Line 1806 of yacc.c  */
 #line 2644 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set without cluster");
-}
+;}
     break;
 
   case 285:
-
-/* Line 1806 of yacc.c  */
 #line 2648 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable trigger"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 286:
-
-/* Line 1806 of yacc.c  */
 #line 2652 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable always trigger"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 287:
-
-/* Line 1806 of yacc.c  */
 #line 2656 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable replica trigger"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 288:
-
-/* Line 1806 of yacc.c  */
 #line 2660 "preproc.y"
     { 
  (yyval.str) = mm_strdup("enable trigger all");
-}
+;}
     break;
 
   case 289:
-
-/* Line 1806 of yacc.c  */
 #line 2664 "preproc.y"
     { 
  (yyval.str) = mm_strdup("enable trigger user");
-}
+;}
     break;
 
   case 290:
-
-/* Line 1806 of yacc.c  */
 #line 2668 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("disable trigger"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 291:
-
-/* Line 1806 of yacc.c  */
 #line 2672 "preproc.y"
     { 
  (yyval.str) = mm_strdup("disable trigger all");
-}
+;}
     break;
 
   case 292:
-
-/* Line 1806 of yacc.c  */
 #line 2676 "preproc.y"
     { 
  (yyval.str) = mm_strdup("disable trigger user");
-}
+;}
     break;
 
   case 293:
-
-/* Line 1806 of yacc.c  */
 #line 2680 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable rule"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 294:
-
-/* Line 1806 of yacc.c  */
 #line 2684 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable always rule"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 295:
-
-/* Line 1806 of yacc.c  */
 #line 2688 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("enable replica rule"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 296:
-
-/* Line 1806 of yacc.c  */
 #line 2692 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("disable rule"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 297:
-
-/* Line 1806 of yacc.c  */
 #line 2696 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("inherit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 298:
-
-/* Line 1806 of yacc.c  */
 #line 2700 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("no inherit"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 299:
-
-/* Line 1806 of yacc.c  */
 #line 2704 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("of"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 300:
-
-/* Line 1806 of yacc.c  */
 #line 2708 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not of");
-}
+;}
     break;
 
   case 301:
-
-/* Line 1806 of yacc.c  */
 #line 2712 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("owner to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 302:
-
-/* Line 1806 of yacc.c  */
 #line 2716 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set tablespace"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 303:
-
-/* Line 1806 of yacc.c  */
 #line 2720 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 304:
-
-/* Line 1806 of yacc.c  */
 #line 2724 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("reset"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 305:
-
-/* Line 1806 of yacc.c  */
 #line 2728 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 306:
-
-/* Line 1806 of yacc.c  */
 #line 2736 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set default"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 307:
-
-/* Line 1806 of yacc.c  */
 #line 2740 "preproc.y"
     { 
  (yyval.str) = mm_strdup("drop default");
-}
+;}
     break;
 
   case 308:
-
-/* Line 1806 of yacc.c  */
 #line 2748 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cascade");
-}
+;}
     break;
 
   case 309:
-
-/* Line 1806 of yacc.c  */
 #line 2752 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restrict");
-}
+;}
     break;
 
   case 310:
-
-/* Line 1806 of yacc.c  */
 #line 2756 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 311:
-
-/* Line 1806 of yacc.c  */
 #line 2763 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("collate"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 312:
-
-/* Line 1806 of yacc.c  */
 #line 2767 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 313:
-
-/* Line 1806 of yacc.c  */
 #line 2774 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 314:
-
-/* Line 1806 of yacc.c  */
 #line 2778 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 315:
-
-/* Line 1806 of yacc.c  */
 #line 2785 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 316:
-
-/* Line 1806 of yacc.c  */
 #line 2793 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 317:
-
-/* Line 1806 of yacc.c  */
 #line 2797 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 318:
-
-/* Line 1806 of yacc.c  */
 #line 2804 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 319:
-
-/* Line 1806 of yacc.c  */
 #line 2808 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 320:
-
-/* Line 1806 of yacc.c  */
 #line 2816 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 321:
-
-/* Line 1806 of yacc.c  */
 #line 2820 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 322:
-
-/* Line 1806 of yacc.c  */
 #line 2824 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("."),(yyvsp[(3) - (5)].str),mm_strdup("="),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 323:
-
-/* Line 1806 of yacc.c  */
 #line 2828 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 324:
-
-/* Line 1806 of yacc.c  */
 #line 2836 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter type"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 325:
-
-/* Line 1806 of yacc.c  */
 #line 2844 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 326:
-
-/* Line 1806 of yacc.c  */
 #line 2848 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 327:
-
-/* Line 1806 of yacc.c  */
 #line 2856 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("add attribute"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 328:
-
-/* Line 1806 of yacc.c  */
 #line 2860 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop attribute if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 329:
-
-/* Line 1806 of yacc.c  */
 #line 2864 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop attribute"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 330:
-
-/* Line 1806 of yacc.c  */
 #line 2868 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter attribute"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("type"),(yyvsp[(6) - (8)].str),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 331:
-
-/* Line 1806 of yacc.c  */
 #line 2876 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(2) - (2)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(2) - (2)].str);
 		(yyval.str) = cat2_str(mm_strdup("close"), cursor_marker);
-	}
+	;}
     break;
 
   case 332:
-
-/* Line 1806 of yacc.c  */
 #line 2881 "preproc.y"
     { 
  (yyval.str) = mm_strdup("close all");
-}
+;}
     break;
 
   case 333:
-
-/* Line 1806 of yacc.c  */
 #line 2889 "preproc.y"
     { 
 			if (strcmp((yyvsp[(6) - (10)].str), "to") == 0 && strcmp((yyvsp[(7) - (10)].str), "stdin") == 0)
@@ -30347,4406 +30111,3422 @@
 				mmerror(PARSE_ERROR, ET_WARNING, "COPY FROM STDIN is not implemented");
 
  (yyval.str) = cat_str(10,mm_strdup("copy"),(yyvsp[(2) - (10)].str),(yyvsp[(3) - (10)].str),(yyvsp[(4) - (10)].str),(yyvsp[(5) - (10)].str),(yyvsp[(6) - (10)].str),(yyvsp[(7) - (10)].str),(yyvsp[(8) - (10)].str),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 334:
-
-/* Line 1806 of yacc.c  */
 #line 2900 "preproc.y"
     { 
 			if (strcmp((yyvsp[(4) - (6)].str), "stdin") == 0)
 				mmerror(PARSE_ERROR, ET_ERROR, "COPY TO STDIN is not possible");
 
  (yyval.str) = cat_str(6,mm_strdup("copy"),(yyvsp[(2) - (6)].str),mm_strdup("to"),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 335:
-
-/* Line 1806 of yacc.c  */
 #line 2911 "preproc.y"
     { 
  (yyval.str) = mm_strdup("from");
-}
+;}
     break;
 
   case 336:
-
-/* Line 1806 of yacc.c  */
 #line 2915 "preproc.y"
     { 
  (yyval.str) = mm_strdup("to");
-}
+;}
     break;
 
   case 337:
-
-/* Line 1806 of yacc.c  */
 #line 2923 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 338:
-
-/* Line 1806 of yacc.c  */
 #line 2927 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stdin");
-}
+;}
     break;
 
   case 339:
-
-/* Line 1806 of yacc.c  */
 #line 2931 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stdout");
-}
+;}
     break;
 
   case 340:
-
-/* Line 1806 of yacc.c  */
 #line 2939 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 341:
-
-/* Line 1806 of yacc.c  */
 #line 2943 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 342:
-
-/* Line 1806 of yacc.c  */
 #line 2951 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 343:
-
-/* Line 1806 of yacc.c  */
 #line 2955 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 344:
-
-/* Line 1806 of yacc.c  */
 #line 2962 "preproc.y"
     { 
  (yyval.str) = mm_strdup("binary");
-}
+;}
     break;
 
   case 345:
-
-/* Line 1806 of yacc.c  */
 #line 2966 "preproc.y"
     { 
  (yyval.str) = mm_strdup("oids");
-}
+;}
     break;
 
   case 346:
-
-/* Line 1806 of yacc.c  */
 #line 2970 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("delimiter"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 347:
-
-/* Line 1806 of yacc.c  */
 #line 2974 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("null"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 348:
-
-/* Line 1806 of yacc.c  */
 #line 2978 "preproc.y"
     { 
  (yyval.str) = mm_strdup("csv");
-}
+;}
     break;
 
   case 349:
-
-/* Line 1806 of yacc.c  */
 #line 2982 "preproc.y"
     { 
  (yyval.str) = mm_strdup("header");
-}
+;}
     break;
 
   case 350:
-
-/* Line 1806 of yacc.c  */
 #line 2986 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("quote"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 351:
-
-/* Line 1806 of yacc.c  */
 #line 2990 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("escape"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 352:
-
-/* Line 1806 of yacc.c  */
 #line 2994 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("force quote"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 353:
-
-/* Line 1806 of yacc.c  */
 #line 2998 "preproc.y"
     { 
  (yyval.str) = mm_strdup("force quote *");
-}
+;}
     break;
 
   case 354:
-
-/* Line 1806 of yacc.c  */
 #line 3002 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("force not null"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 355:
-
-/* Line 1806 of yacc.c  */
 #line 3006 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("encoding"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 356:
-
-/* Line 1806 of yacc.c  */
 #line 3014 "preproc.y"
     { 
  (yyval.str) = mm_strdup("binary");
-}
+;}
     break;
 
   case 357:
-
-/* Line 1806 of yacc.c  */
 #line 3018 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 358:
-
-/* Line 1806 of yacc.c  */
 #line 3025 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with oids");
-}
+;}
     break;
 
   case 359:
-
-/* Line 1806 of yacc.c  */
 #line 3029 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 360:
-
-/* Line 1806 of yacc.c  */
 #line 3036 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("delimiters"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 361:
-
-/* Line 1806 of yacc.c  */
 #line 3040 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 362:
-
-/* Line 1806 of yacc.c  */
 #line 3047 "preproc.y"
     { 
  (yyval.str) = mm_strdup("using");
-}
+;}
     break;
 
   case 363:
-
-/* Line 1806 of yacc.c  */
 #line 3051 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 364:
-
-/* Line 1806 of yacc.c  */
 #line 3058 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 365:
-
-/* Line 1806 of yacc.c  */
 #line 3062 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 366:
-
-/* Line 1806 of yacc.c  */
 #line 3070 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 367:
-
-/* Line 1806 of yacc.c  */
 #line 3078 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 368:
-
-/* Line 1806 of yacc.c  */
 #line 3082 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 369:
-
-/* Line 1806 of yacc.c  */
 #line 3086 "preproc.y"
     { 
  (yyval.str) = mm_strdup("*");
-}
+;}
     break;
 
   case 370:
-
-/* Line 1806 of yacc.c  */
 #line 3090 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 371:
-
-/* Line 1806 of yacc.c  */
 #line 3094 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 372:
-
-/* Line 1806 of yacc.c  */
 #line 3101 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 373:
-
-/* Line 1806 of yacc.c  */
 #line 3105 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 374:
-
-/* Line 1806 of yacc.c  */
 #line 3113 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 375:
-
-/* Line 1806 of yacc.c  */
 #line 3121 "preproc.y"
     { 
  (yyval.str) = cat_str(11,mm_strdup("create"),(yyvsp[(2) - (11)].str),mm_strdup("table"),(yyvsp[(4) - (11)].str),mm_strdup("("),(yyvsp[(6) - (11)].str),mm_strdup(")"),(yyvsp[(8) - (11)].str),(yyvsp[(9) - (11)].str),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 376:
-
-/* Line 1806 of yacc.c  */
 #line 3125 "preproc.y"
     { 
  (yyval.str) = cat_str(11,mm_strdup("create"),(yyvsp[(2) - (14)].str),mm_strdup("table if not exists"),(yyvsp[(7) - (14)].str),mm_strdup("("),(yyvsp[(9) - (14)].str),mm_strdup(")"),(yyvsp[(11) - (14)].str),(yyvsp[(12) - (14)].str),(yyvsp[(13) - (14)].str),(yyvsp[(14) - (14)].str));
-}
+;}
     break;
 
   case 377:
-
-/* Line 1806 of yacc.c  */
 #line 3129 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[(2) - (10)].str),mm_strdup("table"),(yyvsp[(4) - (10)].str),mm_strdup("of"),(yyvsp[(6) - (10)].str),(yyvsp[(7) - (10)].str),(yyvsp[(8) - (10)].str),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 378:
-
-/* Line 1806 of yacc.c  */
 #line 3133 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[(2) - (13)].str),mm_strdup("table if not exists"),(yyvsp[(7) - (13)].str),mm_strdup("of"),(yyvsp[(9) - (13)].str),(yyvsp[(10) - (13)].str),(yyvsp[(11) - (13)].str),(yyvsp[(12) - (13)].str),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 379:
-
-/* Line 1806 of yacc.c  */
 #line 3141 "preproc.y"
     { 
  (yyval.str) = mm_strdup("temporary");
-}
+;}
     break;
 
   case 380:
-
-/* Line 1806 of yacc.c  */
 #line 3145 "preproc.y"
     { 
  (yyval.str) = mm_strdup("temp");
-}
+;}
     break;
 
   case 381:
-
-/* Line 1806 of yacc.c  */
 #line 3149 "preproc.y"
     { 
  (yyval.str) = mm_strdup("local temporary");
-}
+;}
     break;
 
   case 382:
-
-/* Line 1806 of yacc.c  */
 #line 3153 "preproc.y"
     { 
  (yyval.str) = mm_strdup("local temp");
-}
+;}
     break;
 
   case 383:
-
-/* Line 1806 of yacc.c  */
 #line 3157 "preproc.y"
     { 
  (yyval.str) = mm_strdup("global temporary");
-}
+;}
     break;
 
   case 384:
-
-/* Line 1806 of yacc.c  */
 #line 3161 "preproc.y"
     { 
  (yyval.str) = mm_strdup("global temp");
-}
+;}
     break;
 
   case 385:
-
-/* Line 1806 of yacc.c  */
 #line 3165 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unlogged");
-}
+;}
     break;
 
   case 386:
-
-/* Line 1806 of yacc.c  */
 #line 3169 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 387:
-
-/* Line 1806 of yacc.c  */
 #line 3176 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 388:
-
-/* Line 1806 of yacc.c  */
 #line 3180 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 389:
-
-/* Line 1806 of yacc.c  */
 #line 3187 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 390:
-
-/* Line 1806 of yacc.c  */
 #line 3191 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 391:
-
-/* Line 1806 of yacc.c  */
 #line 3198 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 392:
-
-/* Line 1806 of yacc.c  */
 #line 3202 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 393:
-
-/* Line 1806 of yacc.c  */
 #line 3210 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 394:
-
-/* Line 1806 of yacc.c  */
 #line 3214 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 395:
-
-/* Line 1806 of yacc.c  */
 #line 3222 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 396:
-
-/* Line 1806 of yacc.c  */
 #line 3226 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 397:
-
-/* Line 1806 of yacc.c  */
 #line 3230 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 398:
-
-/* Line 1806 of yacc.c  */
 #line 3238 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 399:
-
-/* Line 1806 of yacc.c  */
 #line 3242 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 400:
-
-/* Line 1806 of yacc.c  */
 #line 3250 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 401:
-
-/* Line 1806 of yacc.c  */
 #line 3258 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("with options"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 402:
-
-/* Line 1806 of yacc.c  */
 #line 3266 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 403:
-
-/* Line 1806 of yacc.c  */
 #line 3270 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 404:
-
-/* Line 1806 of yacc.c  */
 #line 3277 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("constraint"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 405:
-
-/* Line 1806 of yacc.c  */
 #line 3281 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 406:
-
-/* Line 1806 of yacc.c  */
 #line 3285 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 407:
-
-/* Line 1806 of yacc.c  */
 #line 3289 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("collate"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 408:
-
-/* Line 1806 of yacc.c  */
 #line 3297 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not null");
-}
+;}
     break;
 
   case 409:
-
-/* Line 1806 of yacc.c  */
 #line 3301 "preproc.y"
     { 
  (yyval.str) = mm_strdup("null");
-}
+;}
     break;
 
   case 410:
-
-/* Line 1806 of yacc.c  */
 #line 3305 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("unique"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 411:
-
-/* Line 1806 of yacc.c  */
 #line 3309 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("primary key"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 412:
-
-/* Line 1806 of yacc.c  */
 #line 3313 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("check ("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 413:
-
-/* Line 1806 of yacc.c  */
 #line 3317 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("default"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 414:
-
-/* Line 1806 of yacc.c  */
 #line 3321 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("references"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 415:
-
-/* Line 1806 of yacc.c  */
 #line 3329 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferrable");
-}
+;}
     break;
 
   case 416:
-
-/* Line 1806 of yacc.c  */
 #line 3333 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not deferrable");
-}
+;}
     break;
 
   case 417:
-
-/* Line 1806 of yacc.c  */
 #line 3337 "preproc.y"
     { 
  (yyval.str) = mm_strdup("initially deferred");
-}
+;}
     break;
 
   case 418:
-
-/* Line 1806 of yacc.c  */
 #line 3341 "preproc.y"
     { 
  (yyval.str) = mm_strdup("initially immediate");
-}
+;}
     break;
 
   case 419:
-
-/* Line 1806 of yacc.c  */
 #line 3349 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("like"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 420:
-
-/* Line 1806 of yacc.c  */
 #line 3357 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("including"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 421:
-
-/* Line 1806 of yacc.c  */
 #line 3361 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("excluding"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 422:
-
-/* Line 1806 of yacc.c  */
 #line 3365 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 423:
-
-/* Line 1806 of yacc.c  */
 #line 3372 "preproc.y"
     { 
  (yyval.str) = mm_strdup("defaults");
-}
+;}
     break;
 
   case 424:
-
-/* Line 1806 of yacc.c  */
 #line 3376 "preproc.y"
     { 
  (yyval.str) = mm_strdup("constraints");
-}
+;}
     break;
 
   case 425:
-
-/* Line 1806 of yacc.c  */
 #line 3380 "preproc.y"
     { 
  (yyval.str) = mm_strdup("indexes");
-}
+;}
     break;
 
   case 426:
-
-/* Line 1806 of yacc.c  */
 #line 3384 "preproc.y"
     { 
  (yyval.str) = mm_strdup("storage");
-}
+;}
     break;
 
   case 427:
-
-/* Line 1806 of yacc.c  */
 #line 3388 "preproc.y"
     { 
  (yyval.str) = mm_strdup("comments");
-}
+;}
     break;
 
   case 428:
-
-/* Line 1806 of yacc.c  */
 #line 3392 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 429:
-
-/* Line 1806 of yacc.c  */
 #line 3400 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("constraint"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 430:
-
-/* Line 1806 of yacc.c  */
 #line 3404 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 431:
-
-/* Line 1806 of yacc.c  */
 #line 3412 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("check ("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 432:
-
-/* Line 1806 of yacc.c  */
 #line 3416 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("unique ("),(yyvsp[(3) - (7)].str),mm_strdup(")"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 433:
-
-/* Line 1806 of yacc.c  */
 #line 3420 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("unique"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 434:
-
-/* Line 1806 of yacc.c  */
 #line 3424 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("primary key ("),(yyvsp[(4) - (8)].str),mm_strdup(")"),(yyvsp[(6) - (8)].str),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 435:
-
-/* Line 1806 of yacc.c  */
 #line 3428 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("primary key"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 436:
-
-/* Line 1806 of yacc.c  */
 #line 3432 "preproc.y"
     { 
  (yyval.str) = cat_str(9,mm_strdup("exclude"),(yyvsp[(2) - (9)].str),mm_strdup("("),(yyvsp[(4) - (9)].str),mm_strdup(")"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 437:
-
-/* Line 1806 of yacc.c  */
 #line 3436 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("foreign key ("),(yyvsp[(4) - (11)].str),mm_strdup(") references"),(yyvsp[(7) - (11)].str),(yyvsp[(8) - (11)].str),(yyvsp[(9) - (11)].str),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 438:
-
-/* Line 1806 of yacc.c  */
 #line 3444 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no inherit");
-}
+;}
     break;
 
   case 439:
-
-/* Line 1806 of yacc.c  */
 #line 3448 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 440:
-
-/* Line 1806 of yacc.c  */
 #line 3455 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 441:
-
-/* Line 1806 of yacc.c  */
 #line 3459 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 442:
-
-/* Line 1806 of yacc.c  */
 #line 3466 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 443:
-
-/* Line 1806 of yacc.c  */
 #line 3470 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 444:
-
-/* Line 1806 of yacc.c  */
 #line 3478 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 445:
-
-/* Line 1806 of yacc.c  */
 #line 3486 "preproc.y"
     { 
  (yyval.str) = mm_strdup("match full");
-}
+;}
     break;
 
   case 446:
-
-/* Line 1806 of yacc.c  */
 #line 3490 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("match partial");
-}
+;}
     break;
 
   case 447:
-
-/* Line 1806 of yacc.c  */
 #line 3495 "preproc.y"
     { 
  (yyval.str) = mm_strdup("match simple");
-}
+;}
     break;
 
   case 448:
-
-/* Line 1806 of yacc.c  */
 #line 3499 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 449:
-
-/* Line 1806 of yacc.c  */
 #line 3506 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 450:
-
-/* Line 1806 of yacc.c  */
 #line 3510 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 451:
-
-/* Line 1806 of yacc.c  */
 #line 3518 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("with"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 452:
-
-/* Line 1806 of yacc.c  */
 #line 3522 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (6)].str),mm_strdup("with operator ("),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 453:
-
-/* Line 1806 of yacc.c  */
 #line 3530 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("where ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 454:
-
-/* Line 1806 of yacc.c  */
 #line 3534 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 455:
-
-/* Line 1806 of yacc.c  */
 #line 3541 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 456:
-
-/* Line 1806 of yacc.c  */
 #line 3545 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 457:
-
-/* Line 1806 of yacc.c  */
 #line 3549 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 458:
-
-/* Line 1806 of yacc.c  */
 #line 3553 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 459:
-
-/* Line 1806 of yacc.c  */
 #line 3557 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 460:
-
-/* Line 1806 of yacc.c  */
 #line 3564 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("on update"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 461:
-
-/* Line 1806 of yacc.c  */
 #line 3572 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("on delete"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 462:
-
-/* Line 1806 of yacc.c  */
 #line 3580 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no action");
-}
+;}
     break;
 
   case 463:
-
-/* Line 1806 of yacc.c  */
 #line 3584 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restrict");
-}
+;}
     break;
 
   case 464:
-
-/* Line 1806 of yacc.c  */
 #line 3588 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cascade");
-}
+;}
     break;
 
   case 465:
-
-/* Line 1806 of yacc.c  */
 #line 3592 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set null");
-}
+;}
     break;
 
   case 466:
-
-/* Line 1806 of yacc.c  */
 #line 3596 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set default");
-}
+;}
     break;
 
   case 467:
-
-/* Line 1806 of yacc.c  */
 #line 3604 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("inherits ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 468:
-
-/* Line 1806 of yacc.c  */
 #line 3608 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 469:
-
-/* Line 1806 of yacc.c  */
 #line 3615 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 470:
-
-/* Line 1806 of yacc.c  */
 #line 3619 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with oids");
-}
+;}
     break;
 
   case 471:
-
-/* Line 1806 of yacc.c  */
 #line 3623 "preproc.y"
     { 
  (yyval.str) = mm_strdup("without oids");
-}
+;}
     break;
 
   case 472:
-
-/* Line 1806 of yacc.c  */
 #line 3627 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 473:
-
-/* Line 1806 of yacc.c  */
 #line 3634 "preproc.y"
     { 
  (yyval.str) = mm_strdup("on commit drop");
-}
+;}
     break;
 
   case 474:
-
-/* Line 1806 of yacc.c  */
 #line 3638 "preproc.y"
     { 
  (yyval.str) = mm_strdup("on commit delete rows");
-}
+;}
     break;
 
   case 475:
-
-/* Line 1806 of yacc.c  */
 #line 3642 "preproc.y"
     { 
  (yyval.str) = mm_strdup("on commit preserve rows");
-}
+;}
     break;
 
   case 476:
-
-/* Line 1806 of yacc.c  */
 #line 3646 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 477:
-
-/* Line 1806 of yacc.c  */
 #line 3653 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("tablespace"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 478:
-
-/* Line 1806 of yacc.c  */
 #line 3657 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 479:
-
-/* Line 1806 of yacc.c  */
 #line 3664 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using index tablespace"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 480:
-
-/* Line 1806 of yacc.c  */
 #line 3668 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 481:
-
-/* Line 1806 of yacc.c  */
 #line 3675 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using index"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 482:
-
-/* Line 1806 of yacc.c  */
 #line 3683 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 483:
-
-/* Line 1806 of yacc.c  */
 #line 3691 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with data");
-}
+;}
     break;
 
   case 484:
-
-/* Line 1806 of yacc.c  */
 #line 3695 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with no data");
-}
+;}
     break;
 
   case 485:
-
-/* Line 1806 of yacc.c  */
 #line 3699 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 486:
-
-/* Line 1806 of yacc.c  */
 #line 3706 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create"),(yyvsp[(2) - (5)].str),mm_strdup("sequence"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 487:
-
-/* Line 1806 of yacc.c  */
 #line 3714 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 488:
-
-/* Line 1806 of yacc.c  */
 #line 3718 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter sequence if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 489:
-
-/* Line 1806 of yacc.c  */
 #line 3726 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 490:
-
-/* Line 1806 of yacc.c  */
 #line 3730 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 491:
-
-/* Line 1806 of yacc.c  */
 #line 3737 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 492:
-
-/* Line 1806 of yacc.c  */
 #line 3741 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 493:
-
-/* Line 1806 of yacc.c  */
 #line 3749 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("cache"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 494:
-
-/* Line 1806 of yacc.c  */
 #line 3753 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cycle");
-}
+;}
     break;
 
   case 495:
-
-/* Line 1806 of yacc.c  */
 #line 3757 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no cycle");
-}
+;}
     break;
 
   case 496:
-
-/* Line 1806 of yacc.c  */
 #line 3761 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("increment"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 497:
-
-/* Line 1806 of yacc.c  */
 #line 3765 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("maxvalue"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 498:
-
-/* Line 1806 of yacc.c  */
 #line 3769 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("minvalue"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 499:
-
-/* Line 1806 of yacc.c  */
 #line 3773 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no maxvalue");
-}
+;}
     break;
 
   case 500:
-
-/* Line 1806 of yacc.c  */
 #line 3777 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no minvalue");
-}
+;}
     break;
 
   case 501:
-
-/* Line 1806 of yacc.c  */
 #line 3781 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("owned by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 502:
-
-/* Line 1806 of yacc.c  */
 #line 3785 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("start"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 503:
-
-/* Line 1806 of yacc.c  */
 #line 3789 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restart");
-}
+;}
     break;
 
   case 504:
-
-/* Line 1806 of yacc.c  */
 #line 3793 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("restart"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 505:
-
-/* Line 1806 of yacc.c  */
 #line 3801 "preproc.y"
     { 
  (yyval.str) = mm_strdup("by");
-}
+;}
     break;
 
   case 506:
-
-/* Line 1806 of yacc.c  */
 #line 3805 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 507:
-
-/* Line 1806 of yacc.c  */
 #line 3812 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 508:
-
-/* Line 1806 of yacc.c  */
 #line 3816 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 509:
-
-/* Line 1806 of yacc.c  */
 #line 3820 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 510:
-
-/* Line 1806 of yacc.c  */
 #line 3828 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 511:
-
-/* Line 1806 of yacc.c  */
 #line 3832 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 512:
-
-/* Line 1806 of yacc.c  */
 #line 3840 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("create"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("language"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 513:
-
-/* Line 1806 of yacc.c  */
 #line 3844 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[(2) - (10)].str),(yyvsp[(3) - (10)].str),(yyvsp[(4) - (10)].str),mm_strdup("language"),(yyvsp[(6) - (10)].str),mm_strdup("handler"),(yyvsp[(8) - (10)].str),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 514:
-
-/* Line 1806 of yacc.c  */
 #line 3852 "preproc.y"
     { 
  (yyval.str) = mm_strdup("trusted");
-}
+;}
     break;
 
   case 515:
-
-/* Line 1806 of yacc.c  */
 #line 3856 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 516:
-
-/* Line 1806 of yacc.c  */
 #line 3863 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 517:
-
-/* Line 1806 of yacc.c  */
 #line 3867 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 518:
-
-/* Line 1806 of yacc.c  */
 #line 3875 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("inline"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 519:
-
-/* Line 1806 of yacc.c  */
 #line 3879 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 520:
-
-/* Line 1806 of yacc.c  */
 #line 3886 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("validator"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 521:
-
-/* Line 1806 of yacc.c  */
 #line 3890 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no validator");
-}
+;}
     break;
 
   case 522:
-
-/* Line 1806 of yacc.c  */
 #line 3898 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 523:
-
-/* Line 1806 of yacc.c  */
 #line 3902 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 524:
-
-/* Line 1806 of yacc.c  */
 #line 3909 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop"),(yyvsp[(2) - (5)].str),mm_strdup("language"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 525:
-
-/* Line 1806 of yacc.c  */
 #line 3913 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop"),(yyvsp[(2) - (7)].str),mm_strdup("language if exists"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 526:
-
-/* Line 1806 of yacc.c  */
 #line 3921 "preproc.y"
     { 
  (yyval.str) = mm_strdup("procedural");
-}
+;}
     break;
 
   case 527:
-
-/* Line 1806 of yacc.c  */
 #line 3925 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 528:
-
-/* Line 1806 of yacc.c  */
 #line 3932 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create tablespace"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("location"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 529:
-
-/* Line 1806 of yacc.c  */
 #line 3940 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("owner"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 530:
-
-/* Line 1806 of yacc.c  */
 #line 3944 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 531:
-
-/* Line 1806 of yacc.c  */
 #line 3951 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop tablespace"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 532:
-
-/* Line 1806 of yacc.c  */
 #line 3955 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop tablespace if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 533:
-
-/* Line 1806 of yacc.c  */
 #line 3963 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create extension"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 534:
-
-/* Line 1806 of yacc.c  */
 #line 3967 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create extension if not exists"),(yyvsp[(6) - (8)].str),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 535:
-
-/* Line 1806 of yacc.c  */
 #line 3975 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 536:
-
-/* Line 1806 of yacc.c  */
 #line 3979 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 537:
-
-/* Line 1806 of yacc.c  */
 #line 3986 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("schema"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 538:
-
-/* Line 1806 of yacc.c  */
 #line 3990 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("version"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 539:
-
-/* Line 1806 of yacc.c  */
 #line 3994 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 540:
-
-/* Line 1806 of yacc.c  */
 #line 4002 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter extension"),(yyvsp[(3) - (5)].str),mm_strdup("update"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 541:
-
-/* Line 1806 of yacc.c  */
 #line 4010 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 542:
-
-/* Line 1806 of yacc.c  */
 #line 4014 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 543:
-
-/* Line 1806 of yacc.c  */
 #line 4021 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("to"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 544:
-
-/* Line 1806 of yacc.c  */
 #line 4029 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter extension"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("aggregate"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 545:
-
-/* Line 1806 of yacc.c  */
 #line 4033 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("alter extension"),(yyvsp[(3) - (10)].str),(yyvsp[(4) - (10)].str),mm_strdup("cast ("),(yyvsp[(7) - (10)].str),mm_strdup("as"),(yyvsp[(9) - (10)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 546:
-
-/* Line 1806 of yacc.c  */
 #line 4037 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("collation"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 547:
-
-/* Line 1806 of yacc.c  */
 #line 4041 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("conversion"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 548:
-
-/* Line 1806 of yacc.c  */
 #line 4045 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("domain"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 549:
-
-/* Line 1806 of yacc.c  */
 #line 4049 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("function"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 550:
-
-/* Line 1806 of yacc.c  */
 #line 4053 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter extension"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup("language"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 551:
-
-/* Line 1806 of yacc.c  */
 #line 4057 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter extension"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("operator"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 552:
-
-/* Line 1806 of yacc.c  */
 #line 4061 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter extension"),(yyvsp[(3) - (9)].str),(yyvsp[(4) - (9)].str),mm_strdup("operator class"),(yyvsp[(7) - (9)].str),mm_strdup("using"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 553:
-
-/* Line 1806 of yacc.c  */
 #line 4065 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter extension"),(yyvsp[(3) - (9)].str),(yyvsp[(4) - (9)].str),mm_strdup("operator family"),(yyvsp[(7) - (9)].str),mm_strdup("using"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 554:
-
-/* Line 1806 of yacc.c  */
 #line 4069 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 555:
-
-/* Line 1806 of yacc.c  */
 #line 4073 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("table"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 556:
-
-/* Line 1806 of yacc.c  */
 #line 4077 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("text search parser"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 557:
-
-/* Line 1806 of yacc.c  */
 #line 4081 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("text search dictionary"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 558:
-
-/* Line 1806 of yacc.c  */
 #line 4085 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("text search template"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 559:
-
-/* Line 1806 of yacc.c  */
 #line 4089 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("text search configuration"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 560:
-
-/* Line 1806 of yacc.c  */
 #line 4093 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("sequence"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 561:
-
-/* Line 1806 of yacc.c  */
 #line 4097 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("view"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 562:
-
-/* Line 1806 of yacc.c  */
 #line 4101 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("foreign table"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 563:
-
-/* Line 1806 of yacc.c  */
 #line 4105 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (8)].str),(yyvsp[(4) - (8)].str),mm_strdup("foreign data wrapper"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 564:
-
-/* Line 1806 of yacc.c  */
 #line 4109 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("server"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 565:
-
-/* Line 1806 of yacc.c  */
 #line 4113 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("type"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 566:
-
-/* Line 1806 of yacc.c  */
 #line 4121 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create foreign data wrapper"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 567:
-
-/* Line 1806 of yacc.c  */
 #line 4129 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("handler"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 568:
-
-/* Line 1806 of yacc.c  */
 #line 4133 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no handler");
-}
+;}
     break;
 
   case 569:
-
-/* Line 1806 of yacc.c  */
 #line 4137 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("validator"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 570:
-
-/* Line 1806 of yacc.c  */
 #line 4141 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no validator");
-}
+;}
     break;
 
   case 571:
-
-/* Line 1806 of yacc.c  */
 #line 4149 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 572:
-
-/* Line 1806 of yacc.c  */
 #line 4153 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 573:
-
-/* Line 1806 of yacc.c  */
 #line 4161 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 574:
-
-/* Line 1806 of yacc.c  */
 #line 4165 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 575:
-
-/* Line 1806 of yacc.c  */
 #line 4172 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop foreign data wrapper"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 576:
-
-/* Line 1806 of yacc.c  */
 #line 4176 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop foreign data wrapper if exists"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 577:
-
-/* Line 1806 of yacc.c  */
 #line 4184 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign data wrapper"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 578:
-
-/* Line 1806 of yacc.c  */
 #line 4188 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter foreign data wrapper"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 579:
-
-/* Line 1806 of yacc.c  */
 #line 4196 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("options ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 580:
-
-/* Line 1806 of yacc.c  */
 #line 4200 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 581:
-
-/* Line 1806 of yacc.c  */
 #line 4207 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 582:
-
-/* Line 1806 of yacc.c  */
 #line 4211 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 583:
-
-/* Line 1806 of yacc.c  */
 #line 4219 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("options ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 584:
-
-/* Line 1806 of yacc.c  */
 #line 4227 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 585:
-
-/* Line 1806 of yacc.c  */
 #line 4231 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 586:
-
-/* Line 1806 of yacc.c  */
 #line 4239 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 587:
-
-/* Line 1806 of yacc.c  */
 #line 4243 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("set"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 588:
-
-/* Line 1806 of yacc.c  */
 #line 4247 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("add"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 589:
-
-/* Line 1806 of yacc.c  */
 #line 4251 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 590:
-
-/* Line 1806 of yacc.c  */
 #line 4259 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 591:
-
-/* Line 1806 of yacc.c  */
 #line 4267 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 592:
-
-/* Line 1806 of yacc.c  */
 #line 4275 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 593:
-
-/* Line 1806 of yacc.c  */
 #line 4283 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("create server"),(yyvsp[(3) - (10)].str),(yyvsp[(4) - (10)].str),(yyvsp[(5) - (10)].str),mm_strdup("foreign data wrapper"),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 594:
-
-/* Line 1806 of yacc.c  */
 #line 4291 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("type"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 595:
-
-/* Line 1806 of yacc.c  */
 #line 4295 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 596:
-
-/* Line 1806 of yacc.c  */
 #line 4302 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("version"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 597:
-
-/* Line 1806 of yacc.c  */
 #line 4306 "preproc.y"
     { 
  (yyval.str) = mm_strdup("version null");
-}
+;}
     break;
 
   case 598:
-
-/* Line 1806 of yacc.c  */
 #line 4314 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 599:
-
-/* Line 1806 of yacc.c  */
 #line 4318 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 600:
-
-/* Line 1806 of yacc.c  */
 #line 4325 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop server"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 601:
-
-/* Line 1806 of yacc.c  */
 #line 4329 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop server if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 602:
-
-/* Line 1806 of yacc.c  */
 #line 4337 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter server"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 603:
-
-/* Line 1806 of yacc.c  */
 #line 4341 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter server"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 604:
-
-/* Line 1806 of yacc.c  */
 #line 4345 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter server"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 605:
-
-/* Line 1806 of yacc.c  */
 #line 4353 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("create foreign table"),(yyvsp[(4) - (8)].str),(yyvsp[(5) - (8)].str),mm_strdup("server"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 606:
-
-/* Line 1806 of yacc.c  */
 #line 4357 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("create foreign table if not exists"),(yyvsp[(7) - (11)].str),(yyvsp[(8) - (11)].str),mm_strdup("server"),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 607:
-
-/* Line 1806 of yacc.c  */
 #line 4365 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 608:
-
-/* Line 1806 of yacc.c  */
 #line 4369 "preproc.y"
     { 
  (yyval.str) = mm_strdup("( )");
-}
+;}
     break;
 
   case 609:
-
-/* Line 1806 of yacc.c  */
 #line 4377 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 610:
-
-/* Line 1806 of yacc.c  */
 #line 4381 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 611:
-
-/* Line 1806 of yacc.c  */
 #line 4389 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 612:
-
-/* Line 1806 of yacc.c  */
 #line 4397 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter foreign table"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 613:
-
-/* Line 1806 of yacc.c  */
 #line 4401 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter foreign table if exists"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 614:
-
-/* Line 1806 of yacc.c  */
 #line 4409 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create user mapping for"),(yyvsp[(5) - (8)].str),mm_strdup("server"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 615:
-
-/* Line 1806 of yacc.c  */
 #line 4417 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_user");
-}
+;}
     break;
 
   case 616:
-
-/* Line 1806 of yacc.c  */
 #line 4421 "preproc.y"
     { 
  (yyval.str) = mm_strdup("user");
-}
+;}
     break;
 
   case 617:
-
-/* Line 1806 of yacc.c  */
 #line 4425 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 618:
-
-/* Line 1806 of yacc.c  */
 #line 4433 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop user mapping for"),(yyvsp[(5) - (7)].str),mm_strdup("server"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 619:
-
-/* Line 1806 of yacc.c  */
 #line 4437 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop user mapping if exists for"),(yyvsp[(7) - (9)].str),mm_strdup("server"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 620:
-
-/* Line 1806 of yacc.c  */
 #line 4445 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter user mapping for"),(yyvsp[(5) - (8)].str),mm_strdup("server"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 621:
-
-/* Line 1806 of yacc.c  */
 #line 4453 "preproc.y"
     { 
  (yyval.str) = cat_str(13,mm_strdup("create trigger"),(yyvsp[(3) - (15)].str),(yyvsp[(4) - (15)].str),(yyvsp[(5) - (15)].str),mm_strdup("on"),(yyvsp[(7) - (15)].str),(yyvsp[(8) - (15)].str),(yyvsp[(9) - (15)].str),mm_strdup("execute procedure"),(yyvsp[(12) - (15)].str),mm_strdup("("),(yyvsp[(14) - (15)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 622:
-
-/* Line 1806 of yacc.c  */
 #line 4457 "preproc.y"
     { 
  (yyval.str) = cat_str(15,mm_strdup("create constraint trigger"),(yyvsp[(4) - (20)].str),mm_strdup("after"),(yyvsp[(6) - (20)].str),mm_strdup("on"),(yyvsp[(8) - (20)].str),(yyvsp[(9) - (20)].str),(yyvsp[(10) - (20)].str),mm_strdup("for each row"),(yyvsp[(14) - (20)].str),mm_strdup("execute procedure"),(yyvsp[(17) - (20)].str),mm_strdup("("),(yyvsp[(19) - (20)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 623:
-
-/* Line 1806 of yacc.c  */
 #line 4465 "preproc.y"
     { 
  (yyval.str) = mm_strdup("before");
-}
+;}
     break;
 
   case 624:
-
-/* Line 1806 of yacc.c  */
 #line 4469 "preproc.y"
     { 
  (yyval.str) = mm_strdup("after");
-}
+;}
     break;
 
   case 625:
-
-/* Line 1806 of yacc.c  */
 #line 4473 "preproc.y"
     { 
  (yyval.str) = mm_strdup("instead of");
-}
+;}
     break;
 
   case 626:
-
-/* Line 1806 of yacc.c  */
 #line 4481 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 627:
-
-/* Line 1806 of yacc.c  */
 #line 4485 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("or"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 628:
-
-/* Line 1806 of yacc.c  */
 #line 4493 "preproc.y"
     { 
  (yyval.str) = mm_strdup("insert");
-}
+;}
     break;
 
   case 629:
-
-/* Line 1806 of yacc.c  */
 #line 4497 "preproc.y"
     { 
  (yyval.str) = mm_strdup("delete");
-}
+;}
     break;
 
   case 630:
-
-/* Line 1806 of yacc.c  */
 #line 4501 "preproc.y"
     { 
  (yyval.str) = mm_strdup("update");
-}
+;}
     break;
 
   case 631:
-
-/* Line 1806 of yacc.c  */
 #line 4505 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("update of"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 632:
-
-/* Line 1806 of yacc.c  */
 #line 4509 "preproc.y"
     { 
  (yyval.str) = mm_strdup("truncate");
-}
+;}
     break;
 
   case 633:
-
-/* Line 1806 of yacc.c  */
 #line 4517 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("for"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 634:
-
-/* Line 1806 of yacc.c  */
 #line 4521 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 635:
-
-/* Line 1806 of yacc.c  */
 #line 4528 "preproc.y"
     { 
  (yyval.str) = mm_strdup("each");
-}
+;}
     break;
 
   case 636:
-
-/* Line 1806 of yacc.c  */
 #line 4532 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 637:
-
-/* Line 1806 of yacc.c  */
 #line 4539 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row");
-}
+;}
     break;
 
   case 638:
-
-/* Line 1806 of yacc.c  */
 #line 4543 "preproc.y"
     { 
  (yyval.str) = mm_strdup("statement");
-}
+;}
     break;
 
   case 639:
-
-/* Line 1806 of yacc.c  */
 #line 4551 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("when ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 640:
-
-/* Line 1806 of yacc.c  */
 #line 4555 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 641:
-
-/* Line 1806 of yacc.c  */
 #line 4562 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 642:
-
-/* Line 1806 of yacc.c  */
 #line 4566 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 643:
-
-/* Line 1806 of yacc.c  */
 #line 4570 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 644:
-
-/* Line 1806 of yacc.c  */
 #line 4577 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 645:
-
-/* Line 1806 of yacc.c  */
 #line 4581 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 646:
-
-/* Line 1806 of yacc.c  */
 #line 4585 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 647:
-
-/* Line 1806 of yacc.c  */
 #line 4589 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 648:
-
-/* Line 1806 of yacc.c  */
 #line 4597 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 649:
-
-/* Line 1806 of yacc.c  */
 #line 4601 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 650:
-
-/* Line 1806 of yacc.c  */
 #line 4608 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 651:
-
-/* Line 1806 of yacc.c  */
 #line 4611 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 652:
-
-/* Line 1806 of yacc.c  */
 #line 4619 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not deferrable");
-}
+;}
     break;
 
   case 653:
-
-/* Line 1806 of yacc.c  */
 #line 4623 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferrable");
-}
+;}
     break;
 
   case 654:
-
-/* Line 1806 of yacc.c  */
 #line 4627 "preproc.y"
     { 
  (yyval.str) = mm_strdup("initially immediate");
-}
+;}
     break;
 
   case 655:
-
-/* Line 1806 of yacc.c  */
 #line 4631 "preproc.y"
     { 
  (yyval.str) = mm_strdup("initially deferred");
-}
+;}
     break;
 
   case 656:
-
-/* Line 1806 of yacc.c  */
 #line 4635 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not valid");
-}
+;}
     break;
 
   case 657:
-
-/* Line 1806 of yacc.c  */
 #line 4639 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no inherit");
-}
+;}
     break;
 
   case 658:
-
-/* Line 1806 of yacc.c  */
 #line 4647 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop trigger"),(yyvsp[(3) - (6)].str),mm_strdup("on"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 659:
-
-/* Line 1806 of yacc.c  */
 #line 4651 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop trigger if exists"),(yyvsp[(5) - (8)].str),mm_strdup("on"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 660:
-
-/* Line 1806 of yacc.c  */
 #line 4659 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(6,mm_strdup("create assertion"),(yyvsp[(3) - (8)].str),mm_strdup("check ("),(yyvsp[(6) - (8)].str),mm_strdup(")"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 661:
-
-/* Line 1806 of yacc.c  */
 #line 4668 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(3,mm_strdup("drop assertion"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 662:
-
-/* Line 1806 of yacc.c  */
 #line 4677 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create aggregate"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 663:
-
-/* Line 1806 of yacc.c  */
 #line 4681 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create aggregate"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 664:
-
-/* Line 1806 of yacc.c  */
 #line 4685 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create operator"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 665:
-
-/* Line 1806 of yacc.c  */
 #line 4689 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create type"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 666:
-
-/* Line 1806 of yacc.c  */
 #line 4693 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("create type"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 667:
-
-/* Line 1806 of yacc.c  */
 #line 4697 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create type"),(yyvsp[(3) - (7)].str),mm_strdup("as ("),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 668:
-
-/* Line 1806 of yacc.c  */
 #line 4701 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create type"),(yyvsp[(3) - (8)].str),mm_strdup("as enum ("),(yyvsp[(7) - (8)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 669:
-
-/* Line 1806 of yacc.c  */
 #line 4705 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create type"),(yyvsp[(3) - (6)].str),mm_strdup("as range"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 670:
-
-/* Line 1806 of yacc.c  */
 #line 4709 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create text search parser"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 671:
-
-/* Line 1806 of yacc.c  */
 #line 4713 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create text search dictionary"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 672:
-
-/* Line 1806 of yacc.c  */
 #line 4717 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create text search template"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 673:
-
-/* Line 1806 of yacc.c  */
 #line 4721 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create text search configuration"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 674:
-
-/* Line 1806 of yacc.c  */
 #line 4725 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("create collation"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 675:
-
-/* Line 1806 of yacc.c  */
 #line 4729 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create collation"),(yyvsp[(3) - (5)].str),mm_strdup("from"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 676:
-
-/* Line 1806 of yacc.c  */
 #line 4737 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 677:
-
-/* Line 1806 of yacc.c  */
 #line 4745 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 678:
-
-/* Line 1806 of yacc.c  */
 #line 4749 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 679:
-
-/* Line 1806 of yacc.c  */
 #line 4757 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 680:
-
-/* Line 1806 of yacc.c  */
 #line 4761 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 681:
-
-/* Line 1806 of yacc.c  */
 #line 4769 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 682:
-
-/* Line 1806 of yacc.c  */
 #line 4773 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 683:
-
-/* Line 1806 of yacc.c  */
 #line 4777 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 684:
-
-/* Line 1806 of yacc.c  */
 #line 4781 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 685:
-
-/* Line 1806 of yacc.c  */
 #line 4785 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 686:
-
-/* Line 1806 of yacc.c  */
 #line 4793 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 687:
-
-/* Line 1806 of yacc.c  */
 #line 4797 "preproc.y"
     { 
  (yyval.str) = mm_strdup("( * )");
-}
+;}
     break;
 
   case 688:
-
-/* Line 1806 of yacc.c  */
 #line 4805 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 689:
-
-/* Line 1806 of yacc.c  */
 #line 4813 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 690:
-
-/* Line 1806 of yacc.c  */
 #line 4817 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 691:
-
-/* Line 1806 of yacc.c  */
 #line 4825 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 692:
-
-/* Line 1806 of yacc.c  */
 #line 4833 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 693:
-
-/* Line 1806 of yacc.c  */
 #line 4837 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 694:
-
-/* Line 1806 of yacc.c  */
 #line 4844 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 695:
-
-/* Line 1806 of yacc.c  */
 #line 4848 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 696:
-
-/* Line 1806 of yacc.c  */
 #line 4856 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter type"),(yyvsp[(3) - (6)].str),mm_strdup("add value"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 697:
-
-/* Line 1806 of yacc.c  */
 #line 4860 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter type"),(yyvsp[(3) - (8)].str),mm_strdup("add value"),(yyvsp[(6) - (8)].str),mm_strdup("before"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 698:
-
-/* Line 1806 of yacc.c  */
 #line 4864 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter type"),(yyvsp[(3) - (8)].str),mm_strdup("add value"),(yyvsp[(6) - (8)].str),mm_strdup("after"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 699:
-
-/* Line 1806 of yacc.c  */
 #line 4872 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create operator class"),(yyvsp[(4) - (13)].str),(yyvsp[(5) - (13)].str),mm_strdup("for type"),(yyvsp[(8) - (13)].str),mm_strdup("using"),(yyvsp[(10) - (13)].str),(yyvsp[(11) - (13)].str),mm_strdup("as"),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 700:
-
-/* Line 1806 of yacc.c  */
 #line 4880 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 701:
-
-/* Line 1806 of yacc.c  */
 #line 4884 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 702:
-
-/* Line 1806 of yacc.c  */
 #line 4892 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("operator"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 703:
-
-/* Line 1806 of yacc.c  */
 #line 4896 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("operator"),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 704:
-
-/* Line 1806 of yacc.c  */
 #line 4900 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("function"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 705:
-
-/* Line 1806 of yacc.c  */
 #line 4904 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("function"),(yyvsp[(2) - (7)].str),mm_strdup("("),(yyvsp[(4) - (7)].str),mm_strdup(")"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 706:
-
-/* Line 1806 of yacc.c  */
 #line 4908 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("storage"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 707:
-
-/* Line 1806 of yacc.c  */
 #line 4916 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default");
-}
+;}
     break;
 
   case 708:
-
-/* Line 1806 of yacc.c  */
 #line 4920 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 709:
-
-/* Line 1806 of yacc.c  */
 #line 4927 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("family"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 710:
-
-/* Line 1806 of yacc.c  */
 #line 4931 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 711:
-
-/* Line 1806 of yacc.c  */
 #line 4938 "preproc.y"
     { 
  (yyval.str) = mm_strdup("for search");
-}
+;}
     break;
 
   case 712:
-
-/* Line 1806 of yacc.c  */
 #line 4942 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("for order by"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 713:
-
-/* Line 1806 of yacc.c  */
 #line 4946 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 714:
-
-/* Line 1806 of yacc.c  */
 #line 4953 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("recheck");
-}
+;}
     break;
 
   case 715:
-
-/* Line 1806 of yacc.c  */
 #line 4958 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 716:
-
-/* Line 1806 of yacc.c  */
 #line 4965 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create operator family"),(yyvsp[(4) - (6)].str),mm_strdup("using"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 717:
-
-/* Line 1806 of yacc.c  */
 #line 4973 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[(4) - (8)].str),mm_strdup("using"),(yyvsp[(6) - (8)].str),mm_strdup("add"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 718:
-
-/* Line 1806 of yacc.c  */
 #line 4977 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[(4) - (8)].str),mm_strdup("using"),(yyvsp[(6) - (8)].str),mm_strdup("drop"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 719:
-
-/* Line 1806 of yacc.c  */
 #line 4985 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 720:
-
-/* Line 1806 of yacc.c  */
 #line 4989 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 721:
-
-/* Line 1806 of yacc.c  */
 #line 4997 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("operator"),(yyvsp[(2) - (5)].str),mm_strdup("("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 722:
-
-/* Line 1806 of yacc.c  */
 #line 5001 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("function"),(yyvsp[(2) - (5)].str),mm_strdup("("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 723:
-
-/* Line 1806 of yacc.c  */
 #line 5009 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator class"),(yyvsp[(4) - (7)].str),mm_strdup("using"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 724:
-
-/* Line 1806 of yacc.c  */
 #line 5013 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator class if exists"),(yyvsp[(6) - (9)].str),mm_strdup("using"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 725:
-
-/* Line 1806 of yacc.c  */
 #line 5021 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator family"),(yyvsp[(4) - (7)].str),mm_strdup("using"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 726:
-
-/* Line 1806 of yacc.c  */
 #line 5025 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop operator family if exists"),(yyvsp[(6) - (9)].str),mm_strdup("using"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 727:
-
-/* Line 1806 of yacc.c  */
 #line 5033 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop owned by"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 728:
-
-/* Line 1806 of yacc.c  */
 #line 5041 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("reassign owned by"),(yyvsp[(4) - (6)].str),mm_strdup("to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 729:
-
-/* Line 1806 of yacc.c  */
 #line 5049 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop"),(yyvsp[(2) - (6)].str),mm_strdup("if exists"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 730:
-
-/* Line 1806 of yacc.c  */
 #line 5053 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 731:
-
-/* Line 1806 of yacc.c  */
 #line 5057 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop index concurrently"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 732:
-
-/* Line 1806 of yacc.c  */
 #line 5061 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("drop index concurrently if exists"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 733:
-
-/* Line 1806 of yacc.c  */
 #line 5069 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 734:
-
-/* Line 1806 of yacc.c  */
 #line 5073 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequence");
-}
+;}
     break;
 
   case 735:
-
-/* Line 1806 of yacc.c  */
 #line 5077 "preproc.y"
     { 
  (yyval.str) = mm_strdup("view");
-}
+;}
     break;
 
   case 736:
-
-/* Line 1806 of yacc.c  */
 #line 5081 "preproc.y"
     { 
  (yyval.str) = mm_strdup("index");
-}
+;}
     break;
 
   case 737:
-
-/* Line 1806 of yacc.c  */
 #line 5085 "preproc.y"
     { 
  (yyval.str) = mm_strdup("foreign table");
-}
+;}
     break;
 
   case 738:
-
-/* Line 1806 of yacc.c  */
 #line 5089 "preproc.y"
     { 
  (yyval.str) = mm_strdup("type");
-}
+;}
     break;
 
   case 739:
-
-/* Line 1806 of yacc.c  */
 #line 5093 "preproc.y"
     { 
  (yyval.str) = mm_strdup("domain");
-}
+;}
     break;
 
   case 740:
-
-/* Line 1806 of yacc.c  */
 #line 5097 "preproc.y"
     { 
  (yyval.str) = mm_strdup("collation");
-}
+;}
     break;
 
   case 741:
-
-/* Line 1806 of yacc.c  */
 #line 5101 "preproc.y"
     { 
  (yyval.str) = mm_strdup("conversion");
-}
+;}
     break;
 
   case 742:
-
-/* Line 1806 of yacc.c  */
 #line 5105 "preproc.y"
     { 
  (yyval.str) = mm_strdup("schema");
-}
+;}
     break;
 
   case 743:
-
-/* Line 1806 of yacc.c  */
 #line 5109 "preproc.y"
     { 
  (yyval.str) = mm_strdup("extension");
-}
+;}
     break;
 
   case 744:
-
-/* Line 1806 of yacc.c  */
 #line 5113 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search parser");
-}
+;}
     break;
 
   case 745:
-
-/* Line 1806 of yacc.c  */
 #line 5117 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search dictionary");
-}
+;}
     break;
 
   case 746:
-
-/* Line 1806 of yacc.c  */
 #line 5121 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search template");
-}
+;}
     break;
 
   case 747:
-
-/* Line 1806 of yacc.c  */
 #line 5125 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text search configuration");
-}
+;}
     break;
 
   case 748:
-
-/* Line 1806 of yacc.c  */
 #line 5133 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 749:
-
-/* Line 1806 of yacc.c  */
 #line 5137 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 750:
-
-/* Line 1806 of yacc.c  */
 #line 5145 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 751:
-
-/* Line 1806 of yacc.c  */
 #line 5149 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 752:
-
-/* Line 1806 of yacc.c  */
 #line 5157 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("."),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 753:
-
-/* Line 1806 of yacc.c  */
 #line 5161 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 754:
-
-/* Line 1806 of yacc.c  */
 #line 5169 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("truncate"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 755:
-
-/* Line 1806 of yacc.c  */
 #line 5177 "preproc.y"
     { 
  (yyval.str) = mm_strdup("continue identity");
-}
+;}
     break;
 
   case 756:
-
-/* Line 1806 of yacc.c  */
 #line 5181 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restart identity");
-}
+;}
     break;
 
   case 757:
-
-/* Line 1806 of yacc.c  */
 #line 5185 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 758:
-
-/* Line 1806 of yacc.c  */
 #line 5192 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("comment on"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("is"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 759:
-
-/* Line 1806 of yacc.c  */
 #line 5196 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("comment on aggregate"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 760:
-
-/* Line 1806 of yacc.c  */
 #line 5200 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("comment on function"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 761:
-
-/* Line 1806 of yacc.c  */
 #line 5204 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("comment on operator"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 762:
-
-/* Line 1806 of yacc.c  */
 #line 5208 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on constraint"),(yyvsp[(4) - (8)].str),mm_strdup("on"),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 763:
-
-/* Line 1806 of yacc.c  */
 #line 5212 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on rule"),(yyvsp[(4) - (8)].str),mm_strdup("on"),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 764:
-
-/* Line 1806 of yacc.c  */
 #line 5216 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("comment on rule"),(yyvsp[(4) - (6)].str),mm_strdup("is"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 765:
-
-/* Line 1806 of yacc.c  */
 #line 5220 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on trigger"),(yyvsp[(4) - (8)].str),mm_strdup("on"),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 766:
-
-/* Line 1806 of yacc.c  */
 #line 5224 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on operator class"),(yyvsp[(5) - (9)].str),mm_strdup("using"),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 767:
-
-/* Line 1806 of yacc.c  */
 #line 5228 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on operator family"),(yyvsp[(5) - (9)].str),mm_strdup("using"),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 768:
-
-/* Line 1806 of yacc.c  */
 #line 5232 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("comment on large object"),(yyvsp[(5) - (7)].str),mm_strdup("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 769:
-
-/* Line 1806 of yacc.c  */
 #line 5236 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on cast ("),(yyvsp[(5) - (10)].str),mm_strdup("as"),(yyvsp[(7) - (10)].str),mm_strdup(") is"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 770:
-
-/* Line 1806 of yacc.c  */
 #line 5240 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("comment on"),(yyvsp[(3) - (7)].str),mm_strdup("language"),(yyvsp[(5) - (7)].str),mm_strdup("is"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 771:
-
-/* Line 1806 of yacc.c  */
 #line 5244 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("comment on text search parser"),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 772:
-
-/* Line 1806 of yacc.c  */
 #line 5248 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("comment on text search dictionary"),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 773:
-
-/* Line 1806 of yacc.c  */
 #line 5252 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("comment on text search template"),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 774:
-
-/* Line 1806 of yacc.c  */
 #line 5256 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("comment on text search configuration"),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 775:
-
-/* Line 1806 of yacc.c  */
 #line 5264 "preproc.y"
     { 
  (yyval.str) = mm_strdup("column");
-}
+;}
     break;
 
   case 776:
-
-/* Line 1806 of yacc.c  */
 #line 5268 "preproc.y"
     { 
  (yyval.str) = mm_strdup("database");
-}
+;}
     break;
 
   case 777:
-
-/* Line 1806 of yacc.c  */
 #line 5272 "preproc.y"
     { 
  (yyval.str) = mm_strdup("schema");
-}
+;}
     break;
 
   case 778:
-
-/* Line 1806 of yacc.c  */
 #line 5276 "preproc.y"
     { 
  (yyval.str) = mm_strdup("index");
-}
+;}
     break;
 
   case 779:
-
-/* Line 1806 of yacc.c  */
 #line 5280 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequence");
-}
+;}
     break;
 
   case 780:
-
-/* Line 1806 of yacc.c  */
 #line 5284 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 781:
-
-/* Line 1806 of yacc.c  */
 #line 5288 "preproc.y"
     { 
  (yyval.str) = mm_strdup("domain");
-}
+;}
     break;
 
   case 782:
-
-/* Line 1806 of yacc.c  */
 #line 5292 "preproc.y"
     { 
  (yyval.str) = mm_strdup("type");
-}
+;}
     break;
 
   case 783:
-
-/* Line 1806 of yacc.c  */
 #line 5296 "preproc.y"
     { 
  (yyval.str) = mm_strdup("view");
-}
+;}
     break;
 
   case 784:
-
-/* Line 1806 of yacc.c  */
 #line 5300 "preproc.y"
     { 
  (yyval.str) = mm_strdup("collation");
-}
+;}
     break;
 
   case 785:
-
-/* Line 1806 of yacc.c  */
 #line 5304 "preproc.y"
     { 
  (yyval.str) = mm_strdup("conversion");
-}
+;}
     break;
 
   case 786:
-
-/* Line 1806 of yacc.c  */
 #line 5308 "preproc.y"
     { 
  (yyval.str) = mm_strdup("tablespace");
-}
+;}
     break;
 
   case 787:
-
-/* Line 1806 of yacc.c  */
 #line 5312 "preproc.y"
     { 
  (yyval.str) = mm_strdup("extension");
-}
+;}
     break;
 
   case 788:
-
-/* Line 1806 of yacc.c  */
 #line 5316 "preproc.y"
     { 
  (yyval.str) = mm_strdup("role");
-}
+;}
     break;
 
   case 789:
-
-/* Line 1806 of yacc.c  */
 #line 5320 "preproc.y"
     { 
  (yyval.str) = mm_strdup("foreign table");
-}
+;}
     break;
 
   case 790:
-
-/* Line 1806 of yacc.c  */
 #line 5324 "preproc.y"
     { 
  (yyval.str) = mm_strdup("server");
-}
+;}
     break;
 
   case 791:
-
-/* Line 1806 of yacc.c  */
 #line 5328 "preproc.y"
     { 
  (yyval.str) = mm_strdup("foreign data wrapper");
-}
+;}
     break;
 
   case 792:
-
-/* Line 1806 of yacc.c  */
 #line 5336 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 793:
-
-/* Line 1806 of yacc.c  */
 #line 5340 "preproc.y"
     { 
  (yyval.str) = mm_strdup("null");
-}
+;}
     break;
 
   case 794:
-
-/* Line 1806 of yacc.c  */
 #line 5348 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("security label"),(yyvsp[(3) - (8)].str),mm_strdup("on"),(yyvsp[(5) - (8)].str),(yyvsp[(6) - (8)].str),mm_strdup("is"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 795:
-
-/* Line 1806 of yacc.c  */
 #line 5352 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("security label"),(yyvsp[(3) - (9)].str),mm_strdup("on aggregate"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 796:
-
-/* Line 1806 of yacc.c  */
 #line 5356 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("security label"),(yyvsp[(3) - (9)].str),mm_strdup("on function"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 797:
-
-/* Line 1806 of yacc.c  */
 #line 5360 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("security label"),(yyvsp[(3) - (9)].str),mm_strdup("on large object"),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 798:
-
-/* Line 1806 of yacc.c  */
 #line 5364 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("security label"),(yyvsp[(3) - (9)].str),mm_strdup("on"),(yyvsp[(5) - (9)].str),mm_strdup("language"),(yyvsp[(7) - (9)].str),mm_strdup("is"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 799:
-
-/* Line 1806 of yacc.c  */
 #line 5372 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("for"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 800:
-
-/* Line 1806 of yacc.c  */
 #line 5376 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 801:
-
-/* Line 1806 of yacc.c  */
 #line 5383 "preproc.y"
     { 
  (yyval.str) = mm_strdup("column");
-}
+;}
     break;
 
   case 802:
-
-/* Line 1806 of yacc.c  */
 #line 5387 "preproc.y"
     { 
  (yyval.str) = mm_strdup("database");
-}
+;}
     break;
 
   case 803:
-
-/* Line 1806 of yacc.c  */
 #line 5391 "preproc.y"
     { 
  (yyval.str) = mm_strdup("foreign table");
-}
+;}
     break;
 
   case 804:
-
-/* Line 1806 of yacc.c  */
 #line 5395 "preproc.y"
     { 
  (yyval.str) = mm_strdup("schema");
-}
+;}
     break;
 
   case 805:
-
-/* Line 1806 of yacc.c  */
 #line 5399 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequence");
-}
+;}
     break;
 
   case 806:
-
-/* Line 1806 of yacc.c  */
 #line 5403 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 807:
-
-/* Line 1806 of yacc.c  */
 #line 5407 "preproc.y"
     { 
  (yyval.str) = mm_strdup("domain");
-}
+;}
     break;
 
   case 808:
-
-/* Line 1806 of yacc.c  */
 #line 5411 "preproc.y"
     { 
  (yyval.str) = mm_strdup("role");
-}
+;}
     break;
 
   case 809:
-
-/* Line 1806 of yacc.c  */
 #line 5415 "preproc.y"
     { 
  (yyval.str) = mm_strdup("tablespace");
-}
+;}
     break;
 
   case 810:
-
-/* Line 1806 of yacc.c  */
 #line 5419 "preproc.y"
     { 
  (yyval.str) = mm_strdup("type");
-}
+;}
     break;
 
   case 811:
-
-/* Line 1806 of yacc.c  */
 #line 5423 "preproc.y"
     { 
  (yyval.str) = mm_strdup("view");
-}
+;}
     break;
 
   case 812:
-
-/* Line 1806 of yacc.c  */
 #line 5431 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 813:
-
-/* Line 1806 of yacc.c  */
 #line 5435 "preproc.y"
     { 
  (yyval.str) = mm_strdup("null");
-}
+;}
     break;
 
   case 814:
-
-/* Line 1806 of yacc.c  */
 #line 5443 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("fetch"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 815:
-
-/* Line 1806 of yacc.c  */
 #line 5447 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("move"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 816:
-
-/* Line 1806 of yacc.c  */
 #line 5451 "preproc.y"
     {
 		(yyval.str) = cat2_str(mm_strdup("fetch"), (yyvsp[(2) - (3)].str));
-	}
+	;}
     break;
 
   case 817:
-
-/* Line 1806 of yacc.c  */
 #line 5455 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (4)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(3) - (4)].str);
 		add_additional_variables((yyvsp[(3) - (4)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("fetch forward"), cursor_marker);
-	}
+	;}
     break;
 
   case 818:
-
-/* Line 1806 of yacc.c  */
 #line 5461 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (5)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(4) - (5)].str);
 		add_additional_variables((yyvsp[(4) - (5)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("fetch forward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 819:
-
-/* Line 1806 of yacc.c  */
 #line 5467 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (4)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(3) - (4)].str);
 		add_additional_variables((yyvsp[(3) - (4)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("fetch backward"), cursor_marker);
-	}
+	;}
     break;
 
   case 820:
-
-/* Line 1806 of yacc.c  */
 #line 5473 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (5)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(4) - (5)].str);
 		add_additional_variables((yyvsp[(4) - (5)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("fetch backward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 821:
-
-/* Line 1806 of yacc.c  */
 #line 5479 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (3)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(3) - (3)].str);
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("move forward"), cursor_marker);
-	}
+	;}
     break;
 
   case 822:
-
-/* Line 1806 of yacc.c  */
 #line 5485 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (4)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(4) - (4)].str);
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("move forward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 823:
-
-/* Line 1806 of yacc.c  */
 #line 5491 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(3) - (3)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(3) - (3)].str);
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("move backward"), cursor_marker);
-	}
+	;}
     break;
 
   case 824:
-
-/* Line 1806 of yacc.c  */
 #line 5497 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (4)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(4) - (4)].str);
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
 		(yyval.str) = cat_str(2, mm_strdup("move backward from"), cursor_marker);
-	}
+	;}
     break;
 
   case 825:
-
-/* Line 1806 of yacc.c  */
 #line 5507 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(1) - (1)].str), false);
@@ -34757,12 +33537,10 @@
 		}
 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 826:
-
-/* Line 1806 of yacc.c  */
 #line 5518 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(2) - (2)].str), false);
@@ -34773,12 +33551,10 @@
 		}
 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 827:
-
-/* Line 1806 of yacc.c  */
 #line 5529 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -34789,12 +33565,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("next"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 828:
-
-/* Line 1806 of yacc.c  */
 #line 5540 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -34805,12 +33579,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("prior"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 829:
-
-/* Line 1806 of yacc.c  */
 #line 5551 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -34821,12 +33593,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("first"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 830:
-
-/* Line 1806 of yacc.c  */
 #line 5562 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -34837,12 +33607,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("last"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 831:
-
-/* Line 1806 of yacc.c  */
 #line 5573 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -34858,12 +33626,10 @@
 		}
 
  (yyval.str) = cat_str(4,mm_strdup("absolute"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 832:
-
-/* Line 1806 of yacc.c  */
 #line 5589 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -34879,12 +33645,10 @@
 		}
 
  (yyval.str) = cat_str(4,mm_strdup("relative"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 833:
-
-/* Line 1806 of yacc.c  */
 #line 5605 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -34900,12 +33664,10 @@
 		}
 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 834:
-
-/* Line 1806 of yacc.c  */
 #line 5621 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(3) - (3)].str), false);
@@ -34916,12 +33678,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("all"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 835:
-
-/* Line 1806 of yacc.c  */
 #line 5632 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -34937,12 +33697,10 @@
 		}
 
  (yyval.str) = cat_str(4,mm_strdup("forward"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 836:
-
-/* Line 1806 of yacc.c  */
 #line 5648 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -34953,12 +33711,10 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("forward all"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 837:
-
-/* Line 1806 of yacc.c  */
 #line 5659 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -34974,12 +33730,10 @@
 		}
 
  (yyval.str) = cat_str(4,mm_strdup("backward"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 838:
-
-/* Line 1806 of yacc.c  */
 #line 5675 "preproc.y"
     { 
 		add_additional_variables((yyvsp[(4) - (4)].str), false);
@@ -34990,4231 +33744,3283 @@
 		}
 
  (yyval.str) = cat_str(3,mm_strdup("backward all"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 839:
-
-/* Line 1806 of yacc.c  */
 #line 5690 "preproc.y"
     { 
  (yyval.str) = mm_strdup("from");
-}
+;}
     break;
 
   case 840:
-
-/* Line 1806 of yacc.c  */
 #line 5694 "preproc.y"
     { 
  (yyval.str) = mm_strdup("in");
-}
+;}
     break;
 
   case 841:
-
-/* Line 1806 of yacc.c  */
 #line 5702 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 842:
-
-/* Line 1806 of yacc.c  */
 #line 5706 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 843:
-
-/* Line 1806 of yacc.c  */
 #line 5713 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("grant"),(yyvsp[(2) - (7)].str),mm_strdup("on"),(yyvsp[(4) - (7)].str),mm_strdup("to"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 844:
-
-/* Line 1806 of yacc.c  */
 #line 5721 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("revoke"),(yyvsp[(2) - (7)].str),mm_strdup("on"),(yyvsp[(4) - (7)].str),mm_strdup("from"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 845:
-
-/* Line 1806 of yacc.c  */
 #line 5725 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("revoke grant option for"),(yyvsp[(5) - (10)].str),mm_strdup("on"),(yyvsp[(7) - (10)].str),mm_strdup("from"),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 846:
-
-/* Line 1806 of yacc.c  */
 #line 5733 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 847:
-
-/* Line 1806 of yacc.c  */
 #line 5737 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 848:
-
-/* Line 1806 of yacc.c  */
 #line 5741 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all privileges");
-}
+;}
     break;
 
   case 849:
-
-/* Line 1806 of yacc.c  */
 #line 5745 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("all ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 850:
-
-/* Line 1806 of yacc.c  */
 #line 5749 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("all privileges ("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 851:
-
-/* Line 1806 of yacc.c  */
 #line 5757 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 852:
-
-/* Line 1806 of yacc.c  */
 #line 5761 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 853:
-
-/* Line 1806 of yacc.c  */
 #line 5769 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("select"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 854:
-
-/* Line 1806 of yacc.c  */
 #line 5773 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("references"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 855:
-
-/* Line 1806 of yacc.c  */
 #line 5777 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("create"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 856:
-
-/* Line 1806 of yacc.c  */
 #line 5781 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 857:
-
-/* Line 1806 of yacc.c  */
 #line 5789 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 858:
-
-/* Line 1806 of yacc.c  */
 #line 5793 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("table"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 859:
-
-/* Line 1806 of yacc.c  */
 #line 5797 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("sequence"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 860:
-
-/* Line 1806 of yacc.c  */
 #line 5801 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("foreign data wrapper"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 861:
-
-/* Line 1806 of yacc.c  */
 #line 5805 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("foreign server"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 862:
-
-/* Line 1806 of yacc.c  */
 #line 5809 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("function"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 863:
-
-/* Line 1806 of yacc.c  */
 #line 5813 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("database"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 864:
-
-/* Line 1806 of yacc.c  */
 #line 5817 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("domain"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 865:
-
-/* Line 1806 of yacc.c  */
 #line 5821 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("language"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 866:
-
-/* Line 1806 of yacc.c  */
 #line 5825 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("large object"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 867:
-
-/* Line 1806 of yacc.c  */
 #line 5829 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("schema"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 868:
-
-/* Line 1806 of yacc.c  */
 #line 5833 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("tablespace"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 869:
-
-/* Line 1806 of yacc.c  */
 #line 5837 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("type"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 870:
-
-/* Line 1806 of yacc.c  */
 #line 5841 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("all tables in schema"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 871:
-
-/* Line 1806 of yacc.c  */
 #line 5845 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("all sequences in schema"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 872:
-
-/* Line 1806 of yacc.c  */
 #line 5849 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("all functions in schema"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 873:
-
-/* Line 1806 of yacc.c  */
 #line 5857 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 874:
-
-/* Line 1806 of yacc.c  */
 #line 5861 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 875:
-
-/* Line 1806 of yacc.c  */
 #line 5869 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 876:
-
-/* Line 1806 of yacc.c  */
 #line 5873 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("group"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 877:
-
-/* Line 1806 of yacc.c  */
 #line 5881 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with grant option");
-}
+;}
     break;
 
   case 878:
-
-/* Line 1806 of yacc.c  */
 #line 5885 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 879:
-
-/* Line 1806 of yacc.c  */
 #line 5892 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 880:
-
-/* Line 1806 of yacc.c  */
 #line 5896 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 881:
-
-/* Line 1806 of yacc.c  */
 #line 5904 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 882:
-
-/* Line 1806 of yacc.c  */
 #line 5912 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("grant"),(yyvsp[(2) - (6)].str),mm_strdup("to"),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 883:
-
-/* Line 1806 of yacc.c  */
 #line 5920 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("revoke"),(yyvsp[(2) - (6)].str),mm_strdup("from"),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 884:
-
-/* Line 1806 of yacc.c  */
 #line 5924 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("revoke admin option for"),(yyvsp[(5) - (9)].str),mm_strdup("from"),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 885:
-
-/* Line 1806 of yacc.c  */
 #line 5932 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with admin option");
-}
+;}
     break;
 
   case 886:
-
-/* Line 1806 of yacc.c  */
 #line 5936 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 887:
-
-/* Line 1806 of yacc.c  */
 #line 5943 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("granted by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 888:
-
-/* Line 1806 of yacc.c  */
 #line 5947 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 889:
-
-/* Line 1806 of yacc.c  */
 #line 5954 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter default privileges"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 890:
-
-/* Line 1806 of yacc.c  */
 #line 5962 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 891:
-
-/* Line 1806 of yacc.c  */
 #line 5966 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 892:
-
-/* Line 1806 of yacc.c  */
 #line 5973 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("in schema"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 893:
-
-/* Line 1806 of yacc.c  */
 #line 5977 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("for role"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 894:
-
-/* Line 1806 of yacc.c  */
 #line 5981 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("for user"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 895:
-
-/* Line 1806 of yacc.c  */
 #line 5989 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("grant"),(yyvsp[(2) - (7)].str),mm_strdup("on"),(yyvsp[(4) - (7)].str),mm_strdup("to"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 896:
-
-/* Line 1806 of yacc.c  */
 #line 5993 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("revoke"),(yyvsp[(2) - (7)].str),mm_strdup("on"),(yyvsp[(4) - (7)].str),mm_strdup("from"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 897:
-
-/* Line 1806 of yacc.c  */
 #line 5997 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("revoke grant option for"),(yyvsp[(5) - (10)].str),mm_strdup("on"),(yyvsp[(7) - (10)].str),mm_strdup("from"),(yyvsp[(9) - (10)].str),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 898:
-
-/* Line 1806 of yacc.c  */
 #line 6005 "preproc.y"
     { 
  (yyval.str) = mm_strdup("tables");
-}
+;}
     break;
 
   case 899:
-
-/* Line 1806 of yacc.c  */
 #line 6009 "preproc.y"
     { 
  (yyval.str) = mm_strdup("functions");
-}
+;}
     break;
 
   case 900:
-
-/* Line 1806 of yacc.c  */
 #line 6013 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequences");
-}
+;}
     break;
 
   case 901:
-
-/* Line 1806 of yacc.c  */
 #line 6017 "preproc.y"
     { 
  (yyval.str) = mm_strdup("types");
-}
+;}
     break;
 
   case 902:
-
-/* Line 1806 of yacc.c  */
 #line 6025 "preproc.y"
     { 
  (yyval.str) = cat_str(14,mm_strdup("create"),(yyvsp[(2) - (14)].str),mm_strdup("index"),(yyvsp[(4) - (14)].str),(yyvsp[(5) - (14)].str),mm_strdup("on"),(yyvsp[(7) - (14)].str),(yyvsp[(8) - (14)].str),mm_strdup("("),(yyvsp[(10) - (14)].str),mm_strdup(")"),(yyvsp[(12) - (14)].str),(yyvsp[(13) - (14)].str),(yyvsp[(14) - (14)].str));
-}
+;}
     break;
 
   case 903:
-
-/* Line 1806 of yacc.c  */
 #line 6033 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unique");
-}
+;}
     break;
 
   case 904:
-
-/* Line 1806 of yacc.c  */
 #line 6037 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 905:
-
-/* Line 1806 of yacc.c  */
 #line 6044 "preproc.y"
     { 
  (yyval.str) = mm_strdup("concurrently");
-}
+;}
     break;
 
   case 906:
-
-/* Line 1806 of yacc.c  */
 #line 6048 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 907:
-
-/* Line 1806 of yacc.c  */
 #line 6055 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 908:
-
-/* Line 1806 of yacc.c  */
 #line 6059 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 909:
-
-/* Line 1806 of yacc.c  */
 #line 6066 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 910:
-
-/* Line 1806 of yacc.c  */
 #line 6070 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 911:
-
-/* Line 1806 of yacc.c  */
 #line 6077 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 912:
-
-/* Line 1806 of yacc.c  */
 #line 6081 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 913:
-
-/* Line 1806 of yacc.c  */
 #line 6089 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 914:
-
-/* Line 1806 of yacc.c  */
 #line 6093 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 915:
-
-/* Line 1806 of yacc.c  */
 #line 6097 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("("),(yyvsp[(2) - (7)].str),mm_strdup(")"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 916:
-
-/* Line 1806 of yacc.c  */
 #line 6105 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("collate"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 917:
-
-/* Line 1806 of yacc.c  */
 #line 6109 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 918:
-
-/* Line 1806 of yacc.c  */
 #line 6116 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 919:
-
-/* Line 1806 of yacc.c  */
 #line 6120 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 920:
-
-/* Line 1806 of yacc.c  */
 #line 6124 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 921:
-
-/* Line 1806 of yacc.c  */
 #line 6131 "preproc.y"
     { 
  (yyval.str) = mm_strdup("asc");
-}
+;}
     break;
 
   case 922:
-
-/* Line 1806 of yacc.c  */
 #line 6135 "preproc.y"
     { 
  (yyval.str) = mm_strdup("desc");
-}
+;}
     break;
 
   case 923:
-
-/* Line 1806 of yacc.c  */
 #line 6139 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 924:
-
-/* Line 1806 of yacc.c  */
 #line 6146 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nulls first");
-}
+;}
     break;
 
   case 925:
-
-/* Line 1806 of yacc.c  */
 #line 6150 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nulls last");
-}
+;}
     break;
 
   case 926:
-
-/* Line 1806 of yacc.c  */
 #line 6154 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 927:
-
-/* Line 1806 of yacc.c  */
 #line 6161 "preproc.y"
     { 
  (yyval.str) = cat_str(9,mm_strdup("create"),(yyvsp[(2) - (9)].str),mm_strdup("function"),(yyvsp[(4) - (9)].str),(yyvsp[(5) - (9)].str),mm_strdup("returns"),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 928:
-
-/* Line 1806 of yacc.c  */
 #line 6165 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[(2) - (12)].str),mm_strdup("function"),(yyvsp[(4) - (12)].str),(yyvsp[(5) - (12)].str),mm_strdup("returns table ("),(yyvsp[(9) - (12)].str),mm_strdup(")"),(yyvsp[(11) - (12)].str),(yyvsp[(12) - (12)].str));
-}
+;}
     break;
 
   case 929:
-
-/* Line 1806 of yacc.c  */
 #line 6169 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("create"),(yyvsp[(2) - (7)].str),mm_strdup("function"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 930:
-
-/* Line 1806 of yacc.c  */
 #line 6177 "preproc.y"
     { 
  (yyval.str) = mm_strdup("or replace");
-}
+;}
     break;
 
   case 931:
-
-/* Line 1806 of yacc.c  */
 #line 6181 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 932:
-
-/* Line 1806 of yacc.c  */
 #line 6188 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 933:
-
-/* Line 1806 of yacc.c  */
 #line 6192 "preproc.y"
     { 
  (yyval.str) = mm_strdup("( )");
-}
+;}
     break;
 
   case 934:
-
-/* Line 1806 of yacc.c  */
 #line 6200 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 935:
-
-/* Line 1806 of yacc.c  */
 #line 6204 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 936:
-
-/* Line 1806 of yacc.c  */
 #line 6212 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 937:
-
-/* Line 1806 of yacc.c  */
 #line 6216 "preproc.y"
     { 
  (yyval.str) = mm_strdup("( )");
-}
+;}
     break;
 
   case 938:
-
-/* Line 1806 of yacc.c  */
 #line 6224 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 939:
-
-/* Line 1806 of yacc.c  */
 #line 6228 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 940:
-
-/* Line 1806 of yacc.c  */
 #line 6236 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 941:
-
-/* Line 1806 of yacc.c  */
 #line 6240 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 942:
-
-/* Line 1806 of yacc.c  */
 #line 6244 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 943:
-
-/* Line 1806 of yacc.c  */
 #line 6248 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 944:
-
-/* Line 1806 of yacc.c  */
 #line 6252 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 945:
-
-/* Line 1806 of yacc.c  */
 #line 6260 "preproc.y"
     { 
  (yyval.str) = mm_strdup("in");
-}
+;}
     break;
 
   case 946:
-
-/* Line 1806 of yacc.c  */
 #line 6264 "preproc.y"
     { 
  (yyval.str) = mm_strdup("out");
-}
+;}
     break;
 
   case 947:
-
-/* Line 1806 of yacc.c  */
 #line 6268 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inout");
-}
+;}
     break;
 
   case 948:
-
-/* Line 1806 of yacc.c  */
 #line 6272 "preproc.y"
     { 
  (yyval.str) = mm_strdup("in out");
-}
+;}
     break;
 
   case 949:
-
-/* Line 1806 of yacc.c  */
 #line 6276 "preproc.y"
     { 
  (yyval.str) = mm_strdup("variadic");
-}
+;}
     break;
 
   case 950:
-
-/* Line 1806 of yacc.c  */
 #line 6284 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 951:
-
-/* Line 1806 of yacc.c  */
 #line 6292 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 952:
-
-/* Line 1806 of yacc.c  */
 #line 6300 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 953:
-
-/* Line 1806 of yacc.c  */
 #line 6304 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),mm_strdup("% type"));
-}
+;}
     break;
 
   case 954:
-
-/* Line 1806 of yacc.c  */
 #line 6308 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("setof"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),mm_strdup("% type"));
-}
+;}
     break;
 
   case 955:
-
-/* Line 1806 of yacc.c  */
 #line 6316 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 956:
-
-/* Line 1806 of yacc.c  */
 #line 6320 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("default"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 957:
-
-/* Line 1806 of yacc.c  */
 #line 6324 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 958:
-
-/* Line 1806 of yacc.c  */
 #line 6332 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 959:
-
-/* Line 1806 of yacc.c  */
 #line 6336 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 960:
-
-/* Line 1806 of yacc.c  */
 #line 6344 "preproc.y"
     { 
  (yyval.str) = mm_strdup("called on null input");
-}
+;}
     break;
 
   case 961:
-
-/* Line 1806 of yacc.c  */
 #line 6348 "preproc.y"
     { 
  (yyval.str) = mm_strdup("returns null on null input");
-}
+;}
     break;
 
   case 962:
-
-/* Line 1806 of yacc.c  */
 #line 6352 "preproc.y"
     { 
  (yyval.str) = mm_strdup("strict");
-}
+;}
     break;
 
   case 963:
-
-/* Line 1806 of yacc.c  */
 #line 6356 "preproc.y"
     { 
  (yyval.str) = mm_strdup("immutable");
-}
+;}
     break;
 
   case 964:
-
-/* Line 1806 of yacc.c  */
 #line 6360 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stable");
-}
+;}
     break;
 
   case 965:
-
-/* Line 1806 of yacc.c  */
 #line 6364 "preproc.y"
     { 
  (yyval.str) = mm_strdup("volatile");
-}
+;}
     break;
 
   case 966:
-
-/* Line 1806 of yacc.c  */
 #line 6368 "preproc.y"
     { 
  (yyval.str) = mm_strdup("external security definer");
-}
+;}
     break;
 
   case 967:
-
-/* Line 1806 of yacc.c  */
 #line 6372 "preproc.y"
     { 
  (yyval.str) = mm_strdup("external security invoker");
-}
+;}
     break;
 
   case 968:
-
-/* Line 1806 of yacc.c  */
 #line 6376 "preproc.y"
     { 
  (yyval.str) = mm_strdup("security definer");
-}
+;}
     break;
 
   case 969:
-
-/* Line 1806 of yacc.c  */
 #line 6380 "preproc.y"
     { 
  (yyval.str) = mm_strdup("security invoker");
-}
+;}
     break;
 
   case 970:
-
-/* Line 1806 of yacc.c  */
 #line 6384 "preproc.y"
     { 
  (yyval.str) = mm_strdup("leakproof");
-}
+;}
     break;
 
   case 971:
-
-/* Line 1806 of yacc.c  */
 #line 6388 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not leakproof");
-}
+;}
     break;
 
   case 972:
-
-/* Line 1806 of yacc.c  */
 #line 6392 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("cost"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 973:
-
-/* Line 1806 of yacc.c  */
 #line 6396 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("rows"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 974:
-
-/* Line 1806 of yacc.c  */
 #line 6400 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 975:
-
-/* Line 1806 of yacc.c  */
 #line 6408 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("as"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 976:
-
-/* Line 1806 of yacc.c  */
 #line 6412 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("language"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 977:
-
-/* Line 1806 of yacc.c  */
 #line 6416 "preproc.y"
     { 
  (yyval.str) = mm_strdup("window");
-}
+;}
     break;
 
   case 978:
-
-/* Line 1806 of yacc.c  */
 #line 6420 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 979:
-
-/* Line 1806 of yacc.c  */
 #line 6428 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 980:
-
-/* Line 1806 of yacc.c  */
 #line 6432 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 981:
-
-/* Line 1806 of yacc.c  */
 #line 6440 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 982:
-
-/* Line 1806 of yacc.c  */
 #line 6444 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 983:
-
-/* Line 1806 of yacc.c  */
 #line 6451 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 984:
-
-/* Line 1806 of yacc.c  */
 #line 6459 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 985:
-
-/* Line 1806 of yacc.c  */
 #line 6463 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 986:
-
-/* Line 1806 of yacc.c  */
 #line 6471 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 987:
-
-/* Line 1806 of yacc.c  */
 #line 6479 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 988:
-
-/* Line 1806 of yacc.c  */
 #line 6483 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 989:
-
-/* Line 1806 of yacc.c  */
 #line 6491 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restrict");
-}
+;}
     break;
 
   case 990:
-
-/* Line 1806 of yacc.c  */
 #line 6495 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 991:
-
-/* Line 1806 of yacc.c  */
 #line 6502 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop function"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 992:
-
-/* Line 1806 of yacc.c  */
 #line 6506 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop function if exists"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 993:
-
-/* Line 1806 of yacc.c  */
 #line 6514 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop aggregate"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 994:
-
-/* Line 1806 of yacc.c  */
 #line 6518 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop aggregate if exists"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 995:
-
-/* Line 1806 of yacc.c  */
 #line 6526 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop operator"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 996:
-
-/* Line 1806 of yacc.c  */
 #line 6530 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("drop operator if exists"),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 997:
-
-/* Line 1806 of yacc.c  */
 #line 6538 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 998:
-
-/* Line 1806 of yacc.c  */
 #line 6542 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("("),(yyvsp[(2) - (5)].str),mm_strdup(","),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 999:
-
-/* Line 1806 of yacc.c  */
 #line 6546 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("( none ,"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1000:
-
-/* Line 1806 of yacc.c  */
 #line 6550 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (5)].str),mm_strdup(", none )"));
-}
+;}
     break;
 
   case 1001:
-
-/* Line 1806 of yacc.c  */
 #line 6558 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1002:
-
-/* Line 1806 of yacc.c  */
 #line 6562 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("."),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1003:
-
-/* Line 1806 of yacc.c  */
 #line 6570 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("do"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1004:
-
-/* Line 1806 of yacc.c  */
 #line 6578 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1005:
-
-/* Line 1806 of yacc.c  */
 #line 6582 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1006:
-
-/* Line 1806 of yacc.c  */
 #line 6590 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1007:
-
-/* Line 1806 of yacc.c  */
 #line 6594 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("language"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1008:
-
-/* Line 1806 of yacc.c  */
 #line 6602 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("create cast ("),(yyvsp[(4) - (11)].str),mm_strdup("as"),(yyvsp[(6) - (11)].str),mm_strdup(") with function"),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1009:
-
-/* Line 1806 of yacc.c  */
 #line 6606 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("create cast ("),(yyvsp[(4) - (10)].str),mm_strdup("as"),(yyvsp[(6) - (10)].str),mm_strdup(") without function"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 1010:
-
-/* Line 1806 of yacc.c  */
 #line 6610 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("create cast ("),(yyvsp[(4) - (10)].str),mm_strdup("as"),(yyvsp[(6) - (10)].str),mm_strdup(") with inout"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 1011:
-
-/* Line 1806 of yacc.c  */
 #line 6618 "preproc.y"
     { 
  (yyval.str) = mm_strdup("as implicit");
-}
+;}
     break;
 
   case 1012:
-
-/* Line 1806 of yacc.c  */
 #line 6622 "preproc.y"
     { 
  (yyval.str) = mm_strdup("as assignment");
-}
+;}
     break;
 
   case 1013:
-
-/* Line 1806 of yacc.c  */
 #line 6626 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1014:
-
-/* Line 1806 of yacc.c  */
 #line 6633 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("drop cast"),(yyvsp[(3) - (9)].str),mm_strdup("("),(yyvsp[(5) - (9)].str),mm_strdup("as"),(yyvsp[(7) - (9)].str),mm_strdup(")"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1015:
-
-/* Line 1806 of yacc.c  */
 #line 6641 "preproc.y"
     { 
  (yyval.str) = mm_strdup("if exists");
-}
+;}
     break;
 
   case 1016:
-
-/* Line 1806 of yacc.c  */
 #line 6645 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1017:
-
-/* Line 1806 of yacc.c  */
 #line 6652 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("reindex"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1018:
-
-/* Line 1806 of yacc.c  */
 #line 6656 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("reindex system"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1019:
-
-/* Line 1806 of yacc.c  */
 #line 6660 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("reindex database"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1020:
-
-/* Line 1806 of yacc.c  */
 #line 6668 "preproc.y"
     { 
  (yyval.str) = mm_strdup("index");
-}
+;}
     break;
 
   case 1021:
-
-/* Line 1806 of yacc.c  */
 #line 6672 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 1022:
-
-/* Line 1806 of yacc.c  */
 #line 6680 "preproc.y"
     { 
  (yyval.str) = mm_strdup("force");
-}
+;}
     break;
 
   case 1023:
-
-/* Line 1806 of yacc.c  */
 #line 6684 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1024:
-
-/* Line 1806 of yacc.c  */
 #line 6691 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter aggregate"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("rename to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1025:
-
-/* Line 1806 of yacc.c  */
 #line 6695 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter collation"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1026:
-
-/* Line 1806 of yacc.c  */
 #line 6699 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter conversion"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1027:
-
-/* Line 1806 of yacc.c  */
 #line 6703 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1028:
-
-/* Line 1806 of yacc.c  */
 #line 6707 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1029:
-
-/* Line 1806 of yacc.c  */
 #line 6711 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter domain"),(yyvsp[(3) - (8)].str),mm_strdup("rename constraint"),(yyvsp[(6) - (8)].str),mm_strdup("to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1030:
-
-/* Line 1806 of yacc.c  */
 #line 6715 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign data wrapper"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1031:
-
-/* Line 1806 of yacc.c  */
 #line 6719 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1032:
-
-/* Line 1806 of yacc.c  */
 #line 6723 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter group"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1033:
-
-/* Line 1806 of yacc.c  */
 #line 6727 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter"),(yyvsp[(2) - (7)].str),mm_strdup("language"),(yyvsp[(4) - (7)].str),mm_strdup("rename to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1034:
-
-/* Line 1806 of yacc.c  */
 #line 6731 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator class"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("rename to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1035:
-
-/* Line 1806 of yacc.c  */
 #line 6735 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("rename to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1036:
-
-/* Line 1806 of yacc.c  */
 #line 6739 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter schema"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1037:
-
-/* Line 1806 of yacc.c  */
 #line 6743 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter server"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1038:
-
-/* Line 1806 of yacc.c  */
 #line 6747 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter table"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1039:
-
-/* Line 1806 of yacc.c  */
 #line 6751 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter table if exists"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1040:
-
-/* Line 1806 of yacc.c  */
 #line 6755 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1041:
-
-/* Line 1806 of yacc.c  */
 #line 6759 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence if exists"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1042:
-
-/* Line 1806 of yacc.c  */
 #line 6763 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter view"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1043:
-
-/* Line 1806 of yacc.c  */
 #line 6767 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter view if exists"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1044:
-
-/* Line 1806 of yacc.c  */
 #line 6771 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter index"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1045:
-
-/* Line 1806 of yacc.c  */
 #line 6775 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter index if exists"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1046:
-
-/* Line 1806 of yacc.c  */
 #line 6779 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table"),(yyvsp[(4) - (7)].str),mm_strdup("rename to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1047:
-
-/* Line 1806 of yacc.c  */
 #line 6783 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table if exists"),(yyvsp[(6) - (9)].str),mm_strdup("rename to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1048:
-
-/* Line 1806 of yacc.c  */
 #line 6787 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter table"),(yyvsp[(3) - (8)].str),mm_strdup("rename"),(yyvsp[(5) - (8)].str),(yyvsp[(6) - (8)].str),mm_strdup("to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1049:
-
-/* Line 1806 of yacc.c  */
 #line 6791 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter table if exists"),(yyvsp[(5) - (10)].str),mm_strdup("rename"),(yyvsp[(7) - (10)].str),(yyvsp[(8) - (10)].str),mm_strdup("to"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 1050:
-
-/* Line 1806 of yacc.c  */
 #line 6795 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter table"),(yyvsp[(3) - (8)].str),mm_strdup("rename constraint"),(yyvsp[(6) - (8)].str),mm_strdup("to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1051:
-
-/* Line 1806 of yacc.c  */
 #line 6799 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter foreign table"),(yyvsp[(4) - (9)].str),mm_strdup("rename"),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),mm_strdup("to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1052:
-
-/* Line 1806 of yacc.c  */
 #line 6803 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter foreign table if exists"),(yyvsp[(6) - (11)].str),mm_strdup("rename"),(yyvsp[(8) - (11)].str),(yyvsp[(9) - (11)].str),mm_strdup("to"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1053:
-
-/* Line 1806 of yacc.c  */
 #line 6807 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter trigger"),(yyvsp[(3) - (8)].str),mm_strdup("on"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1054:
-
-/* Line 1806 of yacc.c  */
 #line 6811 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter role"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1055:
-
-/* Line 1806 of yacc.c  */
 #line 6815 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter user"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1056:
-
-/* Line 1806 of yacc.c  */
 #line 6819 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1057:
-
-/* Line 1806 of yacc.c  */
 #line 6823 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[(3) - (5)].str),mm_strdup("set"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1058:
-
-/* Line 1806 of yacc.c  */
 #line 6827 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[(3) - (5)].str),mm_strdup("reset"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1059:
-
-/* Line 1806 of yacc.c  */
 #line 6831 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search parser"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1060:
-
-/* Line 1806 of yacc.c  */
 #line 6835 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search dictionary"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1061:
-
-/* Line 1806 of yacc.c  */
 #line 6839 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search template"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1062:
-
-/* Line 1806 of yacc.c  */
 #line 6843 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[(5) - (8)].str),mm_strdup("rename to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1063:
-
-/* Line 1806 of yacc.c  */
 #line 6847 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter type"),(yyvsp[(3) - (6)].str),mm_strdup("rename to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1064:
-
-/* Line 1806 of yacc.c  */
 #line 6851 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("alter type"),(yyvsp[(3) - (9)].str),mm_strdup("rename attribute"),(yyvsp[(6) - (9)].str),mm_strdup("to"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1065:
-
-/* Line 1806 of yacc.c  */
 #line 6859 "preproc.y"
     { 
  (yyval.str) = mm_strdup("column");
-}
+;}
     break;
 
   case 1066:
-
-/* Line 1806 of yacc.c  */
 #line 6863 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1067:
-
-/* Line 1806 of yacc.c  */
 #line 6870 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set data");
-}
+;}
     break;
 
   case 1068:
-
-/* Line 1806 of yacc.c  */
 #line 6874 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1069:
-
-/* Line 1806 of yacc.c  */
 #line 6881 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter aggregate"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("set schema"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1070:
-
-/* Line 1806 of yacc.c  */
 #line 6885 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter collation"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1071:
-
-/* Line 1806 of yacc.c  */
 #line 6889 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter conversion"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1072:
-
-/* Line 1806 of yacc.c  */
 #line 6893 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1073:
-
-/* Line 1806 of yacc.c  */
 #line 6897 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter extension"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1074:
-
-/* Line 1806 of yacc.c  */
 #line 6901 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1075:
-
-/* Line 1806 of yacc.c  */
 #line 6905 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter operator"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("set schema"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1076:
-
-/* Line 1806 of yacc.c  */
 #line 6909 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator class"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("set schema"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1077:
-
-/* Line 1806 of yacc.c  */
 #line 6913 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("set schema"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1078:
-
-/* Line 1806 of yacc.c  */
 #line 6917 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter table"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1079:
-
-/* Line 1806 of yacc.c  */
 #line 6921 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter table if exists"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1080:
-
-/* Line 1806 of yacc.c  */
 #line 6925 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search parser"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1081:
-
-/* Line 1806 of yacc.c  */
 #line 6929 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search dictionary"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1082:
-
-/* Line 1806 of yacc.c  */
 #line 6933 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search template"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1083:
-
-/* Line 1806 of yacc.c  */
 #line 6937 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1084:
-
-/* Line 1806 of yacc.c  */
 #line 6941 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1085:
-
-/* Line 1806 of yacc.c  */
 #line 6945 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter sequence if exists"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1086:
-
-/* Line 1806 of yacc.c  */
 #line 6949 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter view"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1087:
-
-/* Line 1806 of yacc.c  */
 #line 6953 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter view if exists"),(yyvsp[(5) - (8)].str),mm_strdup("set schema"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1088:
-
-/* Line 1806 of yacc.c  */
 #line 6957 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table"),(yyvsp[(4) - (7)].str),mm_strdup("set schema"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1089:
-
-/* Line 1806 of yacc.c  */
 #line 6961 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign table if exists"),(yyvsp[(6) - (9)].str),mm_strdup("set schema"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1090:
-
-/* Line 1806 of yacc.c  */
 #line 6965 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter type"),(yyvsp[(3) - (6)].str),mm_strdup("set schema"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1091:
-
-/* Line 1806 of yacc.c  */
 #line 6973 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter aggregate"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1092:
-
-/* Line 1806 of yacc.c  */
 #line 6977 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter collation"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1093:
-
-/* Line 1806 of yacc.c  */
 #line 6981 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter conversion"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1094:
-
-/* Line 1806 of yacc.c  */
 #line 6985 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1095:
-
-/* Line 1806 of yacc.c  */
 #line 6989 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1096:
-
-/* Line 1806 of yacc.c  */
 #line 6993 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter function"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1097:
-
-/* Line 1806 of yacc.c  */
 #line 6997 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter"),(yyvsp[(2) - (7)].str),mm_strdup("language"),(yyvsp[(4) - (7)].str),mm_strdup("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1098:
-
-/* Line 1806 of yacc.c  */
 #line 7001 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter large object"),(yyvsp[(4) - (7)].str),mm_strdup("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1099:
-
-/* Line 1806 of yacc.c  */
 #line 7005 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter operator"),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("owner to"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1100:
-
-/* Line 1806 of yacc.c  */
 #line 7009 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator class"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("owner to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1101:
-
-/* Line 1806 of yacc.c  */
 #line 7013 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter operator family"),(yyvsp[(4) - (9)].str),mm_strdup("using"),(yyvsp[(6) - (9)].str),mm_strdup("owner to"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1102:
-
-/* Line 1806 of yacc.c  */
 #line 7017 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter schema"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1103:
-
-/* Line 1806 of yacc.c  */
 #line 7021 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter type"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1104:
-
-/* Line 1806 of yacc.c  */
 #line 7025 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter tablespace"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1105:
-
-/* Line 1806 of yacc.c  */
 #line 7029 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search dictionary"),(yyvsp[(5) - (8)].str),mm_strdup("owner to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1106:
-
-/* Line 1806 of yacc.c  */
 #line 7033 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[(5) - (8)].str),mm_strdup("owner to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1107:
-
-/* Line 1806 of yacc.c  */
 #line 7037 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter foreign data wrapper"),(yyvsp[(5) - (8)].str),mm_strdup("owner to"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1108:
-
-/* Line 1806 of yacc.c  */
 #line 7041 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter server"),(yyvsp[(3) - (6)].str),mm_strdup("owner to"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1109:
-
-/* Line 1806 of yacc.c  */
 #line 7049 "preproc.y"
     { 
  (yyval.str) = cat_str(12,mm_strdup("create"),(yyvsp[(2) - (13)].str),mm_strdup("rule"),(yyvsp[(4) - (13)].str),mm_strdup("as on"),(yyvsp[(7) - (13)].str),mm_strdup("to"),(yyvsp[(9) - (13)].str),(yyvsp[(10) - (13)].str),mm_strdup("do"),(yyvsp[(12) - (13)].str),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 1110:
-
-/* Line 1806 of yacc.c  */
 #line 7057 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nothing");
-}
+;}
     break;
 
   case 1111:
-
-/* Line 1806 of yacc.c  */
 #line 7061 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1112:
-
-/* Line 1806 of yacc.c  */
 #line 7065 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1113:
-
-/* Line 1806 of yacc.c  */
 #line 7073 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(";"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1114:
-
-/* Line 1806 of yacc.c  */
 #line 7077 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1115:
-
-/* Line 1806 of yacc.c  */
 #line 7085 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1116:
-
-/* Line 1806 of yacc.c  */
 #line 7089 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1117:
-
-/* Line 1806 of yacc.c  */
 #line 7093 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1118:
-
-/* Line 1806 of yacc.c  */
 #line 7097 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1119:
-
-/* Line 1806 of yacc.c  */
 #line 7101 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1120:
-
-/* Line 1806 of yacc.c  */
 #line 7109 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1121:
-
-/* Line 1806 of yacc.c  */
 #line 7113 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1122:
-
-/* Line 1806 of yacc.c  */
 #line 7120 "preproc.y"
     { 
  (yyval.str) = mm_strdup("select");
-}
+;}
     break;
 
   case 1123:
-
-/* Line 1806 of yacc.c  */
 #line 7124 "preproc.y"
     { 
  (yyval.str) = mm_strdup("update");
-}
+;}
     break;
 
   case 1124:
-
-/* Line 1806 of yacc.c  */
 #line 7128 "preproc.y"
     { 
  (yyval.str) = mm_strdup("delete");
-}
+;}
     break;
 
   case 1125:
-
-/* Line 1806 of yacc.c  */
 #line 7132 "preproc.y"
     { 
  (yyval.str) = mm_strdup("insert");
-}
+;}
     break;
 
   case 1126:
-
-/* Line 1806 of yacc.c  */
 #line 7140 "preproc.y"
     { 
  (yyval.str) = mm_strdup("instead");
-}
+;}
     break;
 
   case 1127:
-
-/* Line 1806 of yacc.c  */
 #line 7144 "preproc.y"
     { 
  (yyval.str) = mm_strdup("also");
-}
+;}
     break;
 
   case 1128:
-
-/* Line 1806 of yacc.c  */
 #line 7148 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1129:
-
-/* Line 1806 of yacc.c  */
 #line 7155 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop rule"),(yyvsp[(3) - (6)].str),mm_strdup("on"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1130:
-
-/* Line 1806 of yacc.c  */
 #line 7159 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("drop rule if exists"),(yyvsp[(5) - (8)].str),mm_strdup("on"),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1131:
-
-/* Line 1806 of yacc.c  */
 #line 7167 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("notify"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1132:
-
-/* Line 1806 of yacc.c  */
 #line 7175 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup(","),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1133:
-
-/* Line 1806 of yacc.c  */
 #line 7179 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1134:
-
-/* Line 1806 of yacc.c  */
 #line 7186 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("listen"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1135:
-
-/* Line 1806 of yacc.c  */
 #line 7194 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("unlisten"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1136:
-
-/* Line 1806 of yacc.c  */
 #line 7198 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unlisten *");
-}
+;}
     break;
 
   case 1137:
-
-/* Line 1806 of yacc.c  */
 #line 7206 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("abort"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1138:
-
-/* Line 1806 of yacc.c  */
 #line 7210 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("begin"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1139:
-
-/* Line 1806 of yacc.c  */
 #line 7214 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("start transaction"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1140:
-
-/* Line 1806 of yacc.c  */
 #line 7218 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("commit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1141:
-
-/* Line 1806 of yacc.c  */
 #line 7222 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("end"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1142:
-
-/* Line 1806 of yacc.c  */
 #line 7226 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("rollback"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1143:
-
-/* Line 1806 of yacc.c  */
 #line 7230 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("savepoint"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1144:
-
-/* Line 1806 of yacc.c  */
 #line 7234 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("release savepoint"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1145:
-
-/* Line 1806 of yacc.c  */
 #line 7238 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("release"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1146:
-
-/* Line 1806 of yacc.c  */
 #line 7242 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("rollback"),(yyvsp[(2) - (5)].str),mm_strdup("to savepoint"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1147:
-
-/* Line 1806 of yacc.c  */
 #line 7246 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("rollback"),(yyvsp[(2) - (4)].str),mm_strdup("to"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1148:
-
-/* Line 1806 of yacc.c  */
 #line 7250 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("prepare transaction"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1149:
-
-/* Line 1806 of yacc.c  */
 #line 7254 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("commit prepared"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1150:
-
-/* Line 1806 of yacc.c  */
 #line 7258 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("rollback prepared"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1151:
-
-/* Line 1806 of yacc.c  */
 #line 7266 "preproc.y"
     { 
  (yyval.str) = mm_strdup("work");
-}
+;}
     break;
 
   case 1152:
-
-/* Line 1806 of yacc.c  */
 #line 7270 "preproc.y"
     { 
  (yyval.str) = mm_strdup("transaction");
-}
+;}
     break;
 
   case 1153:
-
-/* Line 1806 of yacc.c  */
 #line 7274 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1154:
-
-/* Line 1806 of yacc.c  */
 #line 7281 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("isolation level"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1155:
-
-/* Line 1806 of yacc.c  */
 #line 7285 "preproc.y"
     { 
  (yyval.str) = mm_strdup("read only");
-}
+;}
     break;
 
   case 1156:
-
-/* Line 1806 of yacc.c  */
 #line 7289 "preproc.y"
     { 
  (yyval.str) = mm_strdup("read write");
-}
+;}
     break;
 
   case 1157:
-
-/* Line 1806 of yacc.c  */
 #line 7293 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferrable");
-}
+;}
     break;
 
   case 1158:
-
-/* Line 1806 of yacc.c  */
 #line 7297 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not deferrable");
-}
+;}
     break;
 
   case 1159:
-
-/* Line 1806 of yacc.c  */
 #line 7305 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1160:
-
-/* Line 1806 of yacc.c  */
 #line 7309 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1161:
-
-/* Line 1806 of yacc.c  */
 #line 7313 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1162:
-
-/* Line 1806 of yacc.c  */
 #line 7321 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1163:
-
-/* Line 1806 of yacc.c  */
 #line 7325 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1164:
-
-/* Line 1806 of yacc.c  */
 #line 7332 "preproc.y"
     { 
  (yyval.str) = cat_str(9,mm_strdup("create"),(yyvsp[(2) - (9)].str),mm_strdup("view"),(yyvsp[(4) - (9)].str),(yyvsp[(5) - (9)].str),(yyvsp[(6) - (9)].str),mm_strdup("as"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1165:
-
-/* Line 1806 of yacc.c  */
 #line 7336 "preproc.y"
     { 
  (yyval.str) = cat_str(9,mm_strdup("create or replace"),(yyvsp[(4) - (11)].str),mm_strdup("view"),(yyvsp[(6) - (11)].str),(yyvsp[(7) - (11)].str),(yyvsp[(8) - (11)].str),mm_strdup("as"),(yyvsp[(10) - (11)].str),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1166:
-
-/* Line 1806 of yacc.c  */
 #line 7344 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("with check option");
-}
+;}
     break;
 
   case 1167:
-
-/* Line 1806 of yacc.c  */
 #line 7349 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("with cascaded check option");
-}
+;}
     break;
 
   case 1168:
-
-/* Line 1806 of yacc.c  */
 #line 7354 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = mm_strdup("with local check option");
-}
+;}
     break;
 
   case 1169:
-
-/* Line 1806 of yacc.c  */
 #line 7359 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1170:
-
-/* Line 1806 of yacc.c  */
 #line 7366 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("load"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1171:
-
-/* Line 1806 of yacc.c  */
 #line 7374 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("create database"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1172:
-
-/* Line 1806 of yacc.c  */
 #line 7382 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1173:
-
-/* Line 1806 of yacc.c  */
 #line 7386 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1174:
-
-/* Line 1806 of yacc.c  */
 #line 7393 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("tablespace"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1175:
-
-/* Line 1806 of yacc.c  */
 #line 7397 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("tablespace"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1176:
-
-/* Line 1806 of yacc.c  */
 #line 7401 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("location"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1177:
-
-/* Line 1806 of yacc.c  */
 #line 7405 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("location"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1178:
-
-/* Line 1806 of yacc.c  */
 #line 7409 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("template"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1179:
-
-/* Line 1806 of yacc.c  */
 #line 7413 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("template"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1180:
-
-/* Line 1806 of yacc.c  */
 #line 7417 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("encoding"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1181:
-
-/* Line 1806 of yacc.c  */
 #line 7421 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("encoding"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1182:
-
-/* Line 1806 of yacc.c  */
 #line 7425 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("encoding"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1183:
-
-/* Line 1806 of yacc.c  */
 #line 7429 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("lc_collate"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1184:
-
-/* Line 1806 of yacc.c  */
 #line 7433 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("lc_collate"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1185:
-
-/* Line 1806 of yacc.c  */
 #line 7437 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("lc_ctype"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1186:
-
-/* Line 1806 of yacc.c  */
 #line 7441 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("lc_ctype"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1187:
-
-/* Line 1806 of yacc.c  */
 #line 7445 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("connection limit"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1188:
-
-/* Line 1806 of yacc.c  */
 #line 7449 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("owner"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1189:
-
-/* Line 1806 of yacc.c  */
 #line 7453 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("owner"),(yyvsp[(2) - (3)].str),mm_strdup("default"));
-}
+;}
     break;
 
   case 1190:
-
-/* Line 1806 of yacc.c  */
 #line 7461 "preproc.y"
     { 
  (yyval.str) = mm_strdup("=");
-}
+;}
     break;
 
   case 1191:
-
-/* Line 1806 of yacc.c  */
 #line 7465 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1192:
-
-/* Line 1806 of yacc.c  */
 #line 7472 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1193:
-
-/* Line 1806 of yacc.c  */
 #line 7476 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter database"),(yyvsp[(3) - (6)].str),mm_strdup("set tablespace"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1194:
-
-/* Line 1806 of yacc.c  */
 #line 7484 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter database"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1195:
-
-/* Line 1806 of yacc.c  */
 #line 7492 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1196:
-
-/* Line 1806 of yacc.c  */
 #line 7496 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1197:
-
-/* Line 1806 of yacc.c  */
 #line 7503 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("connection limit"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1198:
-
-/* Line 1806 of yacc.c  */
 #line 7511 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop database"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1199:
-
-/* Line 1806 of yacc.c  */
 #line 7515 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("drop database if exists"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1200:
-
-/* Line 1806 of yacc.c  */
 #line 7523 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("create domain"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1201:
-
-/* Line 1806 of yacc.c  */
 #line 7531 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter domain"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1202:
-
-/* Line 1806 of yacc.c  */
 #line 7535 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("drop not null"));
-}
+;}
     break;
 
   case 1203:
-
-/* Line 1806 of yacc.c  */
 #line 7539 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("set not null"));
-}
+;}
     break;
 
   case 1204:
-
-/* Line 1806 of yacc.c  */
 #line 7543 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[(3) - (5)].str),mm_strdup("add"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1205:
-
-/* Line 1806 of yacc.c  */
 #line 7547 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter domain"),(yyvsp[(3) - (7)].str),mm_strdup("drop constraint"),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1206:
-
-/* Line 1806 of yacc.c  */
 #line 7551 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("alter domain"),(yyvsp[(3) - (9)].str),mm_strdup("drop constraint if exists"),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1207:
-
-/* Line 1806 of yacc.c  */
 #line 7555 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter domain"),(yyvsp[(3) - (6)].str),mm_strdup("validate constraint"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1208:
-
-/* Line 1806 of yacc.c  */
 #line 7563 "preproc.y"
     { 
  (yyval.str) = mm_strdup("as");
-}
+;}
     break;
 
   case 1209:
-
-/* Line 1806 of yacc.c  */
 #line 7567 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1210:
-
-/* Line 1806 of yacc.c  */
 #line 7574 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("alter text search dictionary"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1211:
-
-/* Line 1806 of yacc.c  */
 #line 7582 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter text search configuration"),(yyvsp[(5) - (11)].str),mm_strdup("add mapping for"),(yyvsp[(9) - (11)].str),mm_strdup("with"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1212:
-
-/* Line 1806 of yacc.c  */
 #line 7586 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter text search configuration"),(yyvsp[(5) - (11)].str),mm_strdup("alter mapping for"),(yyvsp[(9) - (11)].str),mm_strdup("with"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1213:
-
-/* Line 1806 of yacc.c  */
 #line 7590 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("alter text search configuration"),(yyvsp[(5) - (11)].str),mm_strdup("alter mapping replace"),(yyvsp[(9) - (11)].str),mm_strdup("with"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1214:
-
-/* Line 1806 of yacc.c  */
 #line 7594 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("alter text search configuration"),(yyvsp[(5) - (13)].str),mm_strdup("alter mapping for"),(yyvsp[(9) - (13)].str),mm_strdup("replace"),(yyvsp[(11) - (13)].str),mm_strdup("with"),(yyvsp[(13) - (13)].str));
-}
+;}
     break;
 
   case 1215:
-
-/* Line 1806 of yacc.c  */
 #line 7598 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[(5) - (9)].str),mm_strdup("drop mapping for"),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1216:
-
-/* Line 1806 of yacc.c  */
 #line 7602 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("alter text search configuration"),(yyvsp[(5) - (11)].str),mm_strdup("drop mapping if exists for"),(yyvsp[(11) - (11)].str));
-}
+;}
     break;
 
   case 1217:
-
-/* Line 1806 of yacc.c  */
 #line 7610 "preproc.y"
     { 
  (yyval.str) = cat_str(10,mm_strdup("create"),(yyvsp[(2) - (10)].str),mm_strdup("conversion"),(yyvsp[(4) - (10)].str),mm_strdup("for"),(yyvsp[(6) - (10)].str),mm_strdup("to"),(yyvsp[(8) - (10)].str),mm_strdup("from"),(yyvsp[(10) - (10)].str));
-}
+;}
     break;
 
   case 1218:
-
-/* Line 1806 of yacc.c  */
 #line 7618 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("cluster"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1219:
-
-/* Line 1806 of yacc.c  */
 #line 7622 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("cluster"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1220:
-
-/* Line 1806 of yacc.c  */
 #line 7626 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("cluster"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),mm_strdup("on"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1221:
-
-/* Line 1806 of yacc.c  */
 #line 7634 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1222:
-
-/* Line 1806 of yacc.c  */
 #line 7638 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1223:
-
-/* Line 1806 of yacc.c  */
 #line 7645 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("vacuum"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1224:
-
-/* Line 1806 of yacc.c  */
 #line 7649 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("vacuum"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1225:
-
-/* Line 1806 of yacc.c  */
 #line 7653 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("vacuum"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1226:
-
-/* Line 1806 of yacc.c  */
 #line 7657 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("vacuum ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1227:
-
-/* Line 1806 of yacc.c  */
 #line 7661 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("vacuum ("),(yyvsp[(3) - (6)].str),mm_strdup(")"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1228:
-
-/* Line 1806 of yacc.c  */
 #line 7669 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1229:
-
-/* Line 1806 of yacc.c  */
 #line 7673 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1230:
-
-/* Line 1806 of yacc.c  */
 #line 7681 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1231:
-
-/* Line 1806 of yacc.c  */
 #line 7685 "preproc.y"
     { 
  (yyval.str) = mm_strdup("verbose");
-}
+;}
     break;
 
   case 1232:
-
-/* Line 1806 of yacc.c  */
 #line 7689 "preproc.y"
     { 
  (yyval.str) = mm_strdup("freeze");
-}
+;}
     break;
 
   case 1233:
-
-/* Line 1806 of yacc.c  */
 #line 7693 "preproc.y"
     { 
  (yyval.str) = mm_strdup("full");
-}
+;}
     break;
 
   case 1234:
-
-/* Line 1806 of yacc.c  */
 #line 7701 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1235:
-
-/* Line 1806 of yacc.c  */
 #line 7705 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1236:
-
-/* Line 1806 of yacc.c  */
 #line 7713 "preproc.y"
     { 
  (yyval.str) = mm_strdup("analyze");
-}
+;}
     break;
 
   case 1237:
-
-/* Line 1806 of yacc.c  */
 #line 7717 "preproc.y"
     { 
  (yyval.str) = mm_strdup("analyse");
-}
+;}
     break;
 
   case 1238:
-
-/* Line 1806 of yacc.c  */
 #line 7725 "preproc.y"
     { 
  (yyval.str) = mm_strdup("verbose");
-}
+;}
     break;
 
   case 1239:
-
-/* Line 1806 of yacc.c  */
 #line 7729 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1240:
-
-/* Line 1806 of yacc.c  */
 #line 7736 "preproc.y"
     { 
  (yyval.str) = mm_strdup("full");
-}
+;}
     break;
 
   case 1241:
-
-/* Line 1806 of yacc.c  */
 #line 7740 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1242:
-
-/* Line 1806 of yacc.c  */
 #line 7747 "preproc.y"
     { 
  (yyval.str) = mm_strdup("freeze");
-}
+;}
     break;
 
   case 1243:
-
-/* Line 1806 of yacc.c  */
 #line 7751 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1244:
-
-/* Line 1806 of yacc.c  */
 #line 7758 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1245:
-
-/* Line 1806 of yacc.c  */
 #line 7762 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1246:
-
-/* Line 1806 of yacc.c  */
 #line 7769 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("explain"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1247:
-
-/* Line 1806 of yacc.c  */
 #line 7773 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("explain"),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1248:
-
-/* Line 1806 of yacc.c  */
 #line 7777 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("explain verbose"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1249:
-
-/* Line 1806 of yacc.c  */
 #line 7781 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("explain ("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1250:
-
-/* Line 1806 of yacc.c  */
 #line 7789 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1251:
-
-/* Line 1806 of yacc.c  */
 #line 7793 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1252:
-
-/* Line 1806 of yacc.c  */
 #line 7797 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1253:
-
-/* Line 1806 of yacc.c  */
 #line 7801 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1254:
-
-/* Line 1806 of yacc.c  */
 #line 7805 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1255:
-
-/* Line 1806 of yacc.c  */
 #line 7809 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1256:
-
-/* Line 1806 of yacc.c  */
 #line 7813 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1257:
-
-/* Line 1806 of yacc.c  */
 #line 7821 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1258:
-
-/* Line 1806 of yacc.c  */
 #line 7825 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1259:
-
-/* Line 1806 of yacc.c  */
 #line 7833 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1260:
-
-/* Line 1806 of yacc.c  */
 #line 7841 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1261:
-
-/* Line 1806 of yacc.c  */
 #line 7845 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1262:
-
-/* Line 1806 of yacc.c  */
 #line 7853 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1263:
-
-/* Line 1806 of yacc.c  */
 #line 7857 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1264:
-
-/* Line 1806 of yacc.c  */
 #line 7861 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1265:
-
-/* Line 1806 of yacc.c  */
 #line 7868 "preproc.y"
     {
 		(yyval.prep).name = (yyvsp[(2) - (5)].str);
 		(yyval.prep).type = (yyvsp[(3) - (5)].str);
 		(yyval.prep).stmt = cat_str(3, mm_strdup("\""), (yyvsp[(5) - (5)].str), mm_strdup("\""));
-	}
+	;}
     break;
 
   case 1266:
-
-/* Line 1806 of yacc.c  */
 #line 7874 "preproc.y"
     {
 		(yyval.prep).name = (yyvsp[(2) - (4)].str);
 		(yyval.prep).type = NULL;
 		(yyval.prep).stmt = (yyvsp[(4) - (4)].str);
-	}
+	;}
     break;
 
   case 1267:
-
-/* Line 1806 of yacc.c  */
 #line 7884 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1268:
-
-/* Line 1806 of yacc.c  */
 #line 7888 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1269:
-
-/* Line 1806 of yacc.c  */
 #line 7895 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1270:
-
-/* Line 1806 of yacc.c  */
 #line 7899 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1271:
-
-/* Line 1806 of yacc.c  */
 #line 7903 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1272:
-
-/* Line 1806 of yacc.c  */
 #line 7907 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1273:
-
-/* Line 1806 of yacc.c  */
 #line 7915 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (4)].str); }
+    { (yyval.str) = (yyvsp[(2) - (4)].str); ;}
     break;
 
   case 1274:
-
-/* Line 1806 of yacc.c  */
 #line 7917 "preproc.y"
     { 
  (yyval.str) = cat_str(8,mm_strdup("create"),(yyvsp[(2) - (9)].str),mm_strdup("table"),(yyvsp[(4) - (9)].str),mm_strdup("as execute"),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1275:
-
-/* Line 1806 of yacc.c  */
 #line 7925 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1276:
-
-/* Line 1806 of yacc.c  */
 #line 7929 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1277:
-
-/* Line 1806 of yacc.c  */
 #line 7936 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("insert into"),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1278:
-
-/* Line 1806 of yacc.c  */
 #line 7944 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1279:
-
-/* Line 1806 of yacc.c  */
 #line 7948 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[(2) - (4)].str),mm_strdup(")"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1280:
-
-/* Line 1806 of yacc.c  */
 #line 7952 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default values");
-}
+;}
     break;
 
   case 1281:
-
-/* Line 1806 of yacc.c  */
 #line 7960 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1282:
-
-/* Line 1806 of yacc.c  */
 #line 7964 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1283:
-
-/* Line 1806 of yacc.c  */
 #line 7972 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1284:
-
-/* Line 1806 of yacc.c  */
 #line 7980 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("returning"),(yyvsp[(2) - (3)].str));
-}
+;}
     break;
 
   case 1285:
-
-/* Line 1806 of yacc.c  */
 #line 7984 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1286:
-
-/* Line 1806 of yacc.c  */
 #line 7991 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (7)].str),mm_strdup("delete from"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1287:
-
-/* Line 1806 of yacc.c  */
 #line 7999 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("using"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1288:
-
-/* Line 1806 of yacc.c  */
 #line 8003 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1289:
-
-/* Line 1806 of yacc.c  */
 #line 8010 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("lock"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1290:
-
-/* Line 1806 of yacc.c  */
 #line 8018 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("in"),(yyvsp[(2) - (3)].str),mm_strdup("mode"));
-}
+;}
     break;
 
   case 1291:
-
-/* Line 1806 of yacc.c  */
 #line 8022 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1292:
-
-/* Line 1806 of yacc.c  */
 #line 8029 "preproc.y"
     { 
  (yyval.str) = mm_strdup("access share");
-}
+;}
     break;
 
   case 1293:
-
-/* Line 1806 of yacc.c  */
 #line 8033 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row share");
-}
+;}
     break;
 
   case 1294:
-
-/* Line 1806 of yacc.c  */
 #line 8037 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row exclusive");
-}
+;}
     break;
 
   case 1295:
-
-/* Line 1806 of yacc.c  */
 #line 8041 "preproc.y"
     { 
  (yyval.str) = mm_strdup("share update exclusive");
-}
+;}
     break;
 
   case 1296:
-
-/* Line 1806 of yacc.c  */
 #line 8045 "preproc.y"
     { 
  (yyval.str) = mm_strdup("share");
-}
+;}
     break;
 
   case 1297:
-
-/* Line 1806 of yacc.c  */
 #line 8049 "preproc.y"
     { 
  (yyval.str) = mm_strdup("share row exclusive");
-}
+;}
     break;
 
   case 1298:
-
-/* Line 1806 of yacc.c  */
 #line 8053 "preproc.y"
     { 
  (yyval.str) = mm_strdup("exclusive");
-}
+;}
     break;
 
   case 1299:
-
-/* Line 1806 of yacc.c  */
 #line 8057 "preproc.y"
     { 
  (yyval.str) = mm_strdup("access exclusive");
-}
+;}
     break;
 
   case 1300:
-
-/* Line 1806 of yacc.c  */
 #line 8065 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nowait");
-}
+;}
     break;
 
   case 1301:
-
-/* Line 1806 of yacc.c  */
 #line 8069 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1302:
-
-/* Line 1806 of yacc.c  */
 #line 8076 "preproc.y"
     { 
  (yyval.str) = cat_str(8,(yyvsp[(1) - (8)].str),mm_strdup("update"),(yyvsp[(3) - (8)].str),mm_strdup("set"),(yyvsp[(5) - (8)].str),(yyvsp[(6) - (8)].str),(yyvsp[(7) - (8)].str),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1303:
-
-/* Line 1806 of yacc.c  */
 #line 8084 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1304:
-
-/* Line 1806 of yacc.c  */
 #line 8088 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1305:
-
-/* Line 1806 of yacc.c  */
 #line 8096 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1306:
-
-/* Line 1806 of yacc.c  */
 #line 8100 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1307:
-
-/* Line 1806 of yacc.c  */
 #line 8108 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1308:
-
-/* Line 1806 of yacc.c  */
 #line 8116 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[(2) - (5)].str),mm_strdup(") ="),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1309:
-
-/* Line 1806 of yacc.c  */
 #line 8124 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1310:
-
-/* Line 1806 of yacc.c  */
 #line 8132 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1311:
-
-/* Line 1806 of yacc.c  */
 #line 8136 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1312:
-
-/* Line 1806 of yacc.c  */
 #line 8144 "preproc.y"
     {
 		struct cursor *ptr, *this;
@@ -39263,21 +37069,17 @@
 				comment);
 		else
 			(yyval.str) = cat2_str(adjust_outofscope_cursor_vars(this), comment);
-	}
+	;}
     break;
 
   case 1313:
-
-/* Line 1806 of yacc.c  */
 #line 8197 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1314:
-
-/* Line 1806 of yacc.c  */
 #line 8201 "preproc.y"
     {
 			char *curname = mm_alloc(strlen((yyvsp[(1) - (1)].str)) + 2);
@@ -39285,1436 +37087,1114 @@
 			free((yyvsp[(1) - (1)].str));
 			(yyvsp[(1) - (1)].str) = curname;
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 1315:
-
-/* Line 1806 of yacc.c  */
 #line 8213 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1316:
-
-/* Line 1806 of yacc.c  */
 #line 8216 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("no scroll"));
-}
+;}
     break;
 
   case 1317:
-
-/* Line 1806 of yacc.c  */
 #line 8220 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("scroll"));
-}
+;}
     break;
 
   case 1318:
-
-/* Line 1806 of yacc.c  */
 #line 8224 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("binary"));
-}
+;}
     break;
 
   case 1319:
-
-/* Line 1806 of yacc.c  */
 #line 8228 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("insensitive"));
-}
+;}
     break;
 
   case 1320:
-
-/* Line 1806 of yacc.c  */
 #line 8236 "preproc.y"
     {
 		if (compat == ECPG_COMPAT_INFORMIX_SE && autocommit)
 			(yyval.str) = mm_strdup("with hold");
 		else
 			(yyval.str) = EMPTY;
-	}
+	;}
     break;
 
   case 1321:
-
-/* Line 1806 of yacc.c  */
 #line 8243 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with hold");
-}
+;}
     break;
 
   case 1322:
-
-/* Line 1806 of yacc.c  */
 #line 8247 "preproc.y"
     { 
  (yyval.str) = mm_strdup("without hold");
-}
+;}
     break;
 
   case 1323:
-
-/* Line 1806 of yacc.c  */
 #line 8255 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1324:
-
-/* Line 1806 of yacc.c  */
 #line 8259 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1325:
-
-/* Line 1806 of yacc.c  */
 #line 8267 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1326:
-
-/* Line 1806 of yacc.c  */
 #line 8271 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1327:
-
-/* Line 1806 of yacc.c  */
 #line 8279 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1328:
-
-/* Line 1806 of yacc.c  */
 #line 8283 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1329:
-
-/* Line 1806 of yacc.c  */
 #line 8287 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1330:
-
-/* Line 1806 of yacc.c  */
 #line 8291 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1331:
-
-/* Line 1806 of yacc.c  */
 #line 8295 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1332:
-
-/* Line 1806 of yacc.c  */
 #line 8299 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1333:
-
-/* Line 1806 of yacc.c  */
 #line 8303 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1334:
-
-/* Line 1806 of yacc.c  */
 #line 8307 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1335:
-
-/* Line 1806 of yacc.c  */
 #line 8315 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1336:
-
-/* Line 1806 of yacc.c  */
 #line 8319 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1337:
-
-/* Line 1806 of yacc.c  */
 #line 8327 "preproc.y"
     { 
  (yyval.str) = cat_str(9,mm_strdup("select"),(yyvsp[(2) - (9)].str),(yyvsp[(3) - (9)].str),(yyvsp[(4) - (9)].str),(yyvsp[(5) - (9)].str),(yyvsp[(6) - (9)].str),(yyvsp[(7) - (9)].str),(yyvsp[(8) - (9)].str),(yyvsp[(9) - (9)].str));
-}
+;}
     break;
 
   case 1338:
-
-/* Line 1806 of yacc.c  */
 #line 8331 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1339:
-
-/* Line 1806 of yacc.c  */
 #line 8335 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("table"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1340:
-
-/* Line 1806 of yacc.c  */
 #line 8339 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("union"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1341:
-
-/* Line 1806 of yacc.c  */
 #line 8343 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("intersect"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1342:
-
-/* Line 1806 of yacc.c  */
 #line 8347 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("except"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1343:
-
-/* Line 1806 of yacc.c  */
 #line 8355 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("with"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1344:
-
-/* Line 1806 of yacc.c  */
 #line 8359 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("with recursive"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1345:
-
-/* Line 1806 of yacc.c  */
 #line 8367 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1346:
-
-/* Line 1806 of yacc.c  */
 #line 8371 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1347:
-
-/* Line 1806 of yacc.c  */
 #line 8379 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),(yyvsp[(2) - (6)].str),mm_strdup("as ("),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1348:
-
-/* Line 1806 of yacc.c  */
 #line 8387 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1349:
-
-/* Line 1806 of yacc.c  */
 #line 8391 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1350:
-
-/* Line 1806 of yacc.c  */
 #line 8398 "preproc.y"
     {
 						FoundInto = 1;
 						(yyval.str)= cat2_str(mm_strdup("into"), (yyvsp[(2) - (2)].str));
-					}
+					;}
     break;
 
   case 1351:
-
-/* Line 1806 of yacc.c  */
 #line 8402 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 1352:
-
-/* Line 1806 of yacc.c  */
 #line 8404 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1353:
-
-/* Line 1806 of yacc.c  */
 #line 8411 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("temporary"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1354:
-
-/* Line 1806 of yacc.c  */
 #line 8415 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("temp"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1355:
-
-/* Line 1806 of yacc.c  */
 #line 8419 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("local temporary"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1356:
-
-/* Line 1806 of yacc.c  */
 #line 8423 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("local temp"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1357:
-
-/* Line 1806 of yacc.c  */
 #line 8427 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("global temporary"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1358:
-
-/* Line 1806 of yacc.c  */
 #line 8431 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("global temp"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1359:
-
-/* Line 1806 of yacc.c  */
 #line 8435 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("unlogged"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1360:
-
-/* Line 1806 of yacc.c  */
 #line 8439 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("table"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1361:
-
-/* Line 1806 of yacc.c  */
 #line 8443 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1362:
-
-/* Line 1806 of yacc.c  */
 #line 8451 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 1363:
-
-/* Line 1806 of yacc.c  */
 #line 8455 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1364:
-
-/* Line 1806 of yacc.c  */
 #line 8462 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 1365:
-
-/* Line 1806 of yacc.c  */
 #line 8466 "preproc.y"
     { 
  (yyval.str) = mm_strdup("distinct");
-}
+;}
     break;
 
   case 1366:
-
-/* Line 1806 of yacc.c  */
 #line 8470 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1367:
-
-/* Line 1806 of yacc.c  */
 #line 8477 "preproc.y"
     { 
  (yyval.str) = mm_strdup("distinct");
-}
+;}
     break;
 
   case 1368:
-
-/* Line 1806 of yacc.c  */
 #line 8481 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("distinct on ("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1369:
-
-/* Line 1806 of yacc.c  */
 #line 8485 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 1370:
-
-/* Line 1806 of yacc.c  */
 #line 8489 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1371:
-
-/* Line 1806 of yacc.c  */
 #line 8496 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1372:
-
-/* Line 1806 of yacc.c  */
 #line 8500 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1373:
-
-/* Line 1806 of yacc.c  */
 #line 8507 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("order by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1374:
-
-/* Line 1806 of yacc.c  */
 #line 8515 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1375:
-
-/* Line 1806 of yacc.c  */
 #line 8519 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1376:
-
-/* Line 1806 of yacc.c  */
 #line 8527 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("using"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1377:
-
-/* Line 1806 of yacc.c  */
 #line 8531 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1378:
-
-/* Line 1806 of yacc.c  */
 #line 8539 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1379:
-
-/* Line 1806 of yacc.c  */
 #line 8543 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1380:
-
-/* Line 1806 of yacc.c  */
 #line 8547 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1381:
-
-/* Line 1806 of yacc.c  */
 #line 8551 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1382:
-
-/* Line 1806 of yacc.c  */
 #line 8559 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1383:
-
-/* Line 1806 of yacc.c  */
 #line 8563 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1384:
-
-/* Line 1806 of yacc.c  */
 #line 8570 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("limit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1385:
-
-/* Line 1806 of yacc.c  */
 #line 8574 "preproc.y"
     {
 		mmerror(PARSE_ERROR, ET_WARNING, "no longer supported LIMIT #,# syntax passed to server");
 		(yyval.str) = cat_str(4, mm_strdup("limit"), (yyvsp[(2) - (4)].str), mm_strdup(","), (yyvsp[(4) - (4)].str));
-	}
+	;}
     break;
 
   case 1386:
-
-/* Line 1806 of yacc.c  */
 #line 8579 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("fetch"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),mm_strdup("only"));
-}
+;}
     break;
 
   case 1387:
-
-/* Line 1806 of yacc.c  */
 #line 8587 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("offset"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1388:
-
-/* Line 1806 of yacc.c  */
 #line 8591 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("offset"),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1389:
-
-/* Line 1806 of yacc.c  */
 #line 8599 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1390:
-
-/* Line 1806 of yacc.c  */
 #line 8603 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 1391:
-
-/* Line 1806 of yacc.c  */
 #line 8611 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1392:
-
-/* Line 1806 of yacc.c  */
 #line 8619 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1393:
-
-/* Line 1806 of yacc.c  */
 #line 8623 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1394:
-
-/* Line 1806 of yacc.c  */
 #line 8627 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1395:
-
-/* Line 1806 of yacc.c  */
 #line 8634 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1396:
-
-/* Line 1806 of yacc.c  */
 #line 8642 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row");
-}
+;}
     break;
 
   case 1397:
-
-/* Line 1806 of yacc.c  */
 #line 8646 "preproc.y"
     { 
  (yyval.str) = mm_strdup("rows");
-}
+;}
     break;
 
   case 1398:
-
-/* Line 1806 of yacc.c  */
 #line 8654 "preproc.y"
     { 
  (yyval.str) = mm_strdup("first");
-}
+;}
     break;
 
   case 1399:
-
-/* Line 1806 of yacc.c  */
 #line 8658 "preproc.y"
     { 
  (yyval.str) = mm_strdup("next");
-}
+;}
     break;
 
   case 1400:
-
-/* Line 1806 of yacc.c  */
 #line 8666 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("group by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1401:
-
-/* Line 1806 of yacc.c  */
 #line 8670 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1402:
-
-/* Line 1806 of yacc.c  */
 #line 8677 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("having"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1403:
-
-/* Line 1806 of yacc.c  */
 #line 8681 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1404:
-
-/* Line 1806 of yacc.c  */
 #line 8688 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1405:
-
-/* Line 1806 of yacc.c  */
 #line 8692 "preproc.y"
     { 
  (yyval.str) = mm_strdup("for read only");
-}
+;}
     break;
 
   case 1406:
-
-/* Line 1806 of yacc.c  */
 #line 8700 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1407:
-
-/* Line 1806 of yacc.c  */
 #line 8704 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1408:
-
-/* Line 1806 of yacc.c  */
 #line 8711 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1409:
-
-/* Line 1806 of yacc.c  */
 #line 8715 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1410:
-
-/* Line 1806 of yacc.c  */
 #line 8723 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("for update"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1411:
-
-/* Line 1806 of yacc.c  */
 #line 8727 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("for share"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1412:
-
-/* Line 1806 of yacc.c  */
 #line 8735 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("of"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1413:
-
-/* Line 1806 of yacc.c  */
 #line 8739 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1414:
-
-/* Line 1806 of yacc.c  */
 #line 8746 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("values"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1415:
-
-/* Line 1806 of yacc.c  */
 #line 8750 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1416:
-
-/* Line 1806 of yacc.c  */
 #line 8758 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1417:
-
-/* Line 1806 of yacc.c  */
 #line 8762 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1418:
-
-/* Line 1806 of yacc.c  */
 #line 8769 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1419:
-
-/* Line 1806 of yacc.c  */
 #line 8773 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1420:
-
-/* Line 1806 of yacc.c  */
 #line 8781 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1421:
-
-/* Line 1806 of yacc.c  */
 #line 8785 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1422:
-
-/* Line 1806 of yacc.c  */
 #line 8789 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1423:
-
-/* Line 1806 of yacc.c  */
 #line 8793 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1424:
-
-/* Line 1806 of yacc.c  */
 #line 8797 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (5)].str),mm_strdup("as ("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1425:
-
-/* Line 1806 of yacc.c  */
 #line 8801 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),mm_strdup("as"),(yyvsp[(3) - (6)].str),mm_strdup("("),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1426:
-
-/* Line 1806 of yacc.c  */
 #line 8805 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),mm_strdup("("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1427:
-
-/* Line 1806 of yacc.c  */
 #line 8809 "preproc.y"
     { 
 		mmerror(PARSE_ERROR, ET_ERROR, "subquery in FROM must have an alias");
 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1428:
-
-/* Line 1806 of yacc.c  */
 #line 8815 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1429:
-
-/* Line 1806 of yacc.c  */
 #line 8819 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1430:
-
-/* Line 1806 of yacc.c  */
 #line 8823 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[(2) - (4)].str),mm_strdup(")"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1431:
-
-/* Line 1806 of yacc.c  */
 #line 8831 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1432:
-
-/* Line 1806 of yacc.c  */
 #line 8835 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("cross join"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1433:
-
-/* Line 1806 of yacc.c  */
 #line 8839 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),(yyvsp[(2) - (5)].str),mm_strdup("join"),(yyvsp[(4) - (5)].str),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1434:
-
-/* Line 1806 of yacc.c  */
 #line 8843 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("join"),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1435:
-
-/* Line 1806 of yacc.c  */
 #line 8847 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("natural"),(yyvsp[(3) - (5)].str),mm_strdup("join"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1436:
-
-/* Line 1806 of yacc.c  */
 #line 8851 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("natural join"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1437:
-
-/* Line 1806 of yacc.c  */
 #line 8859 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("as"),(yyvsp[(2) - (5)].str),mm_strdup("("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1438:
-
-/* Line 1806 of yacc.c  */
 #line 8863 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("as"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1439:
-
-/* Line 1806 of yacc.c  */
 #line 8867 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),mm_strdup("("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1440:
-
-/* Line 1806 of yacc.c  */
 #line 8871 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1441:
-
-/* Line 1806 of yacc.c  */
 #line 8879 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("full"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1442:
-
-/* Line 1806 of yacc.c  */
 #line 8883 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("left"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1443:
-
-/* Line 1806 of yacc.c  */
 #line 8887 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("right"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1444:
-
-/* Line 1806 of yacc.c  */
 #line 8891 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inner");
-}
+;}
     break;
 
   case 1445:
-
-/* Line 1806 of yacc.c  */
 #line 8899 "preproc.y"
     { 
  (yyval.str) = mm_strdup("outer");
-}
+;}
     break;
 
   case 1446:
-
-/* Line 1806 of yacc.c  */
 #line 8903 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1447:
-
-/* Line 1806 of yacc.c  */
 #line 8910 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("using ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1448:
-
-/* Line 1806 of yacc.c  */
 #line 8914 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("on"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1449:
-
-/* Line 1806 of yacc.c  */
 #line 8922 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1450:
-
-/* Line 1806 of yacc.c  */
 #line 8926 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("*"));
-}
+;}
     break;
 
   case 1451:
-
-/* Line 1806 of yacc.c  */
 #line 8930 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("only"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1452:
-
-/* Line 1806 of yacc.c  */
 #line 8934 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("only ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1453:
-
-/* Line 1806 of yacc.c  */
 #line 8942 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1454:
-
-/* Line 1806 of yacc.c  */
 #line 8946 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1455:
-
-/* Line 1806 of yacc.c  */
 #line 8954 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1456:
-
-/* Line 1806 of yacc.c  */
 #line 8958 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1457:
-
-/* Line 1806 of yacc.c  */
 #line 8962 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1458:
-
-/* Line 1806 of yacc.c  */
 #line 8970 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1459:
-
-/* Line 1806 of yacc.c  */
 #line 8978 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("where"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1460:
-
-/* Line 1806 of yacc.c  */
 #line 8982 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1461:
-
-/* Line 1806 of yacc.c  */
 #line 8989 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("where"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1462:
-
-/* Line 1806 of yacc.c  */
 #line 8993 "preproc.y"
     {
 		char *cursor_marker = (yyvsp[(4) - (4)].str)[0] == ':' ? mm_strdup("$0") : (yyvsp[(4) - (4)].str);
 		(yyval.str) = cat_str(2,mm_strdup("where current of"), cursor_marker);
-	}
+	;}
     break;
 
   case 1463:
-
-/* Line 1806 of yacc.c  */
 #line 8998 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1464:
-
-/* Line 1806 of yacc.c  */
 #line 9005 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1465:
-
-/* Line 1806 of yacc.c  */
 #line 9009 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1466:
-
-/* Line 1806 of yacc.c  */
 #line 9016 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1467:
-
-/* Line 1806 of yacc.c  */
 #line 9020 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1468:
-
-/* Line 1806 of yacc.c  */
 #line 9028 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1469:
-
-/* Line 1806 of yacc.c  */
 #line 9036 "preproc.y"
-    {	(yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].index).str); }
+    {	(yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].index).str); ;}
     break;
 
   case 1470:
-
-/* Line 1806 of yacc.c  */
 #line 9038 "preproc.y"
-    {	(yyval.str) = cat_str(3, mm_strdup("setof"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].index).str); }
+    {	(yyval.str) = cat_str(3, mm_strdup("setof"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].index).str); ;}
     break;
 
   case 1471:
-
-/* Line 1806 of yacc.c  */
 #line 9040 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (5)].str),mm_strdup("array ["),(yyvsp[(4) - (5)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1472:
-
-/* Line 1806 of yacc.c  */
 #line 9044 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("setof"),(yyvsp[(2) - (6)].str),mm_strdup("array ["),(yyvsp[(5) - (6)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1473:
-
-/* Line 1806 of yacc.c  */
 #line 9048 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("array"));
-}
+;}
     break;
 
   case 1474:
-
-/* Line 1806 of yacc.c  */
 #line 9052 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("setof"),(yyvsp[(2) - (3)].str),mm_strdup("array"));
-}
+;}
     break;
 
   case 1475:
-
-/* Line 1806 of yacc.c  */
 #line 9060 "preproc.y"
     {
 		(yyval.index).index1 = (yyvsp[(1) - (3)].index).index1;
@@ -40724,12 +38204,10 @@
 		else if (strcmp((yyvsp[(1) - (3)].index).index2, "-1") == 0)
 			(yyval.index).index2 = mm_strdup("0");
 		(yyval.index).str = cat_str(2, (yyvsp[(1) - (3)].index).str, mm_strdup("[]"));
-	}
+	;}
     break;
 
   case 1476:
-
-/* Line 1806 of yacc.c  */
 #line 9070 "preproc.y"
     {
 		(yyval.index).index1 = (yyvsp[(1) - (4)].index).index1;
@@ -40739,7074 +38217,5496 @@
 		else if (strcmp((yyvsp[(1) - (4)].index).index2, "-1") == 0)
 			(yyval.index).index2 = strdup((yyvsp[(3) - (4)].str));
 		(yyval.index).str = cat_str(4, (yyvsp[(1) - (4)].index).str, mm_strdup("["), (yyvsp[(3) - (4)].str), mm_strdup("]"));
-	}
+	;}
     break;
 
   case 1477:
-
-/* Line 1806 of yacc.c  */
 #line 9080 "preproc.y"
     {
 		(yyval.index).index1 = mm_strdup("-1");
 		(yyval.index).index2 = mm_strdup("-1");
 		(yyval.index).str= EMPTY;
-	}
+	;}
     break;
 
   case 1478:
-
-/* Line 1806 of yacc.c  */
 #line 9090 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1479:
-
-/* Line 1806 of yacc.c  */
 #line 9094 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1480:
-
-/* Line 1806 of yacc.c  */
 #line 9098 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1481:
-
-/* Line 1806 of yacc.c  */
 #line 9102 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1482:
-
-/* Line 1806 of yacc.c  */
 #line 9106 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1483:
-
-/* Line 1806 of yacc.c  */
 #line 9110 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1484:
-
-/* Line 1806 of yacc.c  */
 #line 9114 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1485:
-
-/* Line 1806 of yacc.c  */
 #line 9122 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1486:
-
-/* Line 1806 of yacc.c  */
 #line 9126 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1487:
-
-/* Line 1806 of yacc.c  */
 #line 9130 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1488:
-
-/* Line 1806 of yacc.c  */
 #line 9134 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1489:
-
-/* Line 1806 of yacc.c  */
 #line 9142 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1490:
-
-/* Line 1806 of yacc.c  */
 #line 9146 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1491:
-
-/* Line 1806 of yacc.c  */
 #line 9154 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1492:
-
-/* Line 1806 of yacc.c  */
 #line 9158 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1493:
-
-/* Line 1806 of yacc.c  */
 #line 9165 "preproc.y"
     { 
  (yyval.str) = mm_strdup("int");
-}
+;}
     break;
 
   case 1494:
-
-/* Line 1806 of yacc.c  */
 #line 9169 "preproc.y"
     { 
  (yyval.str) = mm_strdup("integer");
-}
+;}
     break;
 
   case 1495:
-
-/* Line 1806 of yacc.c  */
 #line 9173 "preproc.y"
     { 
  (yyval.str) = mm_strdup("smallint");
-}
+;}
     break;
 
   case 1496:
-
-/* Line 1806 of yacc.c  */
 #line 9177 "preproc.y"
     { 
  (yyval.str) = mm_strdup("bigint");
-}
+;}
     break;
 
   case 1497:
-
-/* Line 1806 of yacc.c  */
 #line 9181 "preproc.y"
     { 
  (yyval.str) = mm_strdup("real");
-}
+;}
     break;
 
   case 1498:
-
-/* Line 1806 of yacc.c  */
 #line 9185 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("float"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1499:
-
-/* Line 1806 of yacc.c  */
 #line 9189 "preproc.y"
     { 
  (yyval.str) = mm_strdup("double precision");
-}
+;}
     break;
 
   case 1500:
-
-/* Line 1806 of yacc.c  */
 #line 9193 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("decimal"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1501:
-
-/* Line 1806 of yacc.c  */
 #line 9197 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("dec"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1502:
-
-/* Line 1806 of yacc.c  */
 #line 9201 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("numeric"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1503:
-
-/* Line 1806 of yacc.c  */
 #line 9205 "preproc.y"
     { 
  (yyval.str) = mm_strdup("boolean");
-}
+;}
     break;
 
   case 1504:
-
-/* Line 1806 of yacc.c  */
 #line 9213 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1505:
-
-/* Line 1806 of yacc.c  */
 #line 9217 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1506:
-
-/* Line 1806 of yacc.c  */
 #line 9224 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1507:
-
-/* Line 1806 of yacc.c  */
 #line 9228 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1508:
-
-/* Line 1806 of yacc.c  */
 #line 9236 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1509:
-
-/* Line 1806 of yacc.c  */
 #line 9240 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1510:
-
-/* Line 1806 of yacc.c  */
 #line 9248 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("bit"),(yyvsp[(2) - (5)].str),mm_strdup("("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1511:
-
-/* Line 1806 of yacc.c  */
 #line 9256 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("bit"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1512:
-
-/* Line 1806 of yacc.c  */
 #line 9264 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1513:
-
-/* Line 1806 of yacc.c  */
 #line 9268 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1514:
-
-/* Line 1806 of yacc.c  */
 #line 9276 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1515:
-
-/* Line 1806 of yacc.c  */
 #line 9280 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1516:
-
-/* Line 1806 of yacc.c  */
 #line 9288 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1517:
-
-/* Line 1806 of yacc.c  */
 #line 9296 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1518:
-
-/* Line 1806 of yacc.c  */
 #line 9304 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("character"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1519:
-
-/* Line 1806 of yacc.c  */
 #line 9308 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("char"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1520:
-
-/* Line 1806 of yacc.c  */
 #line 9312 "preproc.y"
     { 
  (yyval.str) = mm_strdup("varchar");
-}
+;}
     break;
 
   case 1521:
-
-/* Line 1806 of yacc.c  */
 #line 9316 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("national character"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1522:
-
-/* Line 1806 of yacc.c  */
 #line 9320 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("national char"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1523:
-
-/* Line 1806 of yacc.c  */
 #line 9324 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("nchar"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1524:
-
-/* Line 1806 of yacc.c  */
 #line 9332 "preproc.y"
     { 
  (yyval.str) = mm_strdup("varying");
-}
+;}
     break;
 
   case 1525:
-
-/* Line 1806 of yacc.c  */
 #line 9336 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1526:
-
-/* Line 1806 of yacc.c  */
 #line 9343 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("character set"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1527:
-
-/* Line 1806 of yacc.c  */
 #line 9347 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1528:
-
-/* Line 1806 of yacc.c  */
 #line 9354 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("timestamp ("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1529:
-
-/* Line 1806 of yacc.c  */
 #line 9358 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("timestamp"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1530:
-
-/* Line 1806 of yacc.c  */
 #line 9362 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("time ("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1531:
-
-/* Line 1806 of yacc.c  */
 #line 9366 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("time"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1532:
-
-/* Line 1806 of yacc.c  */
 #line 9374 "preproc.y"
     { 
  (yyval.str) = mm_strdup("interval");
-}
+;}
     break;
 
   case 1533:
-
-/* Line 1806 of yacc.c  */
 #line 9382 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with time zone");
-}
+;}
     break;
 
   case 1534:
-
-/* Line 1806 of yacc.c  */
 #line 9386 "preproc.y"
     { 
  (yyval.str) = mm_strdup("without time zone");
-}
+;}
     break;
 
   case 1535:
-
-/* Line 1806 of yacc.c  */
 #line 9390 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1536:
-
-/* Line 1806 of yacc.c  */
 #line 9397 "preproc.y"
     { 
  (yyval.str) = mm_strdup("year");
-}
+;}
     break;
 
   case 1537:
-
-/* Line 1806 of yacc.c  */
 #line 9401 "preproc.y"
     { 
  (yyval.str) = mm_strdup("month");
-}
+;}
     break;
 
   case 1538:
-
-/* Line 1806 of yacc.c  */
 #line 9405 "preproc.y"
     { 
  (yyval.str) = mm_strdup("day");
-}
+;}
     break;
 
   case 1539:
-
-/* Line 1806 of yacc.c  */
 #line 9409 "preproc.y"
     { 
  (yyval.str) = mm_strdup("hour");
-}
+;}
     break;
 
   case 1540:
-
-/* Line 1806 of yacc.c  */
 #line 9413 "preproc.y"
     { 
  (yyval.str) = mm_strdup("minute");
-}
+;}
     break;
 
   case 1541:
-
-/* Line 1806 of yacc.c  */
 #line 9417 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1542:
-
-/* Line 1806 of yacc.c  */
 #line 9421 "preproc.y"
     { 
  (yyval.str) = mm_strdup("year to month");
-}
+;}
     break;
 
   case 1543:
-
-/* Line 1806 of yacc.c  */
 #line 9425 "preproc.y"
     { 
  (yyval.str) = mm_strdup("day to hour");
-}
+;}
     break;
 
   case 1544:
-
-/* Line 1806 of yacc.c  */
 #line 9429 "preproc.y"
     { 
  (yyval.str) = mm_strdup("day to minute");
-}
+;}
     break;
 
   case 1545:
-
-/* Line 1806 of yacc.c  */
 #line 9433 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("day to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1546:
-
-/* Line 1806 of yacc.c  */
 #line 9437 "preproc.y"
     { 
  (yyval.str) = mm_strdup("hour to minute");
-}
+;}
     break;
 
   case 1547:
-
-/* Line 1806 of yacc.c  */
 #line 9441 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("hour to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1548:
-
-/* Line 1806 of yacc.c  */
 #line 9445 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("minute to"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1549:
-
-/* Line 1806 of yacc.c  */
 #line 9449 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1550:
-
-/* Line 1806 of yacc.c  */
 #line 9456 "preproc.y"
     { 
  (yyval.str) = mm_strdup("second");
-}
+;}
     break;
 
   case 1551:
-
-/* Line 1806 of yacc.c  */
 #line 9460 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("second ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1552:
-
-/* Line 1806 of yacc.c  */
 #line 9468 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1553:
-
-/* Line 1806 of yacc.c  */
 #line 9472 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("::"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1554:
-
-/* Line 1806 of yacc.c  */
 #line 9476 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("collate"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1555:
-
-/* Line 1806 of yacc.c  */
 #line 9480 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),mm_strdup("at time zone"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1556:
-
-/* Line 1806 of yacc.c  */
 #line 9484 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("+"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1557:
-
-/* Line 1806 of yacc.c  */
 #line 9488 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1558:
-
-/* Line 1806 of yacc.c  */
 #line 9492 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("+"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1559:
-
-/* Line 1806 of yacc.c  */
 #line 9496 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("-"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1560:
-
-/* Line 1806 of yacc.c  */
 #line 9500 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("*"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1561:
-
-/* Line 1806 of yacc.c  */
 #line 9504 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("/"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1562:
-
-/* Line 1806 of yacc.c  */
 #line 9508 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("%"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1563:
-
-/* Line 1806 of yacc.c  */
 #line 9512 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("^"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1564:
-
-/* Line 1806 of yacc.c  */
 #line 9516 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("<"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1565:
-
-/* Line 1806 of yacc.c  */
 #line 9520 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(">"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1566:
-
-/* Line 1806 of yacc.c  */
 #line 9524 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1567:
-
-/* Line 1806 of yacc.c  */
 #line 9528 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1568:
-
-/* Line 1806 of yacc.c  */
 #line 9532 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1569:
-
-/* Line 1806 of yacc.c  */
 #line 9536 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1570:
-
-/* Line 1806 of yacc.c  */
 #line 9540 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("and"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1571:
-
-/* Line 1806 of yacc.c  */
 #line 9544 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("or"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1572:
-
-/* Line 1806 of yacc.c  */
 #line 9548 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("not"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1573:
-
-/* Line 1806 of yacc.c  */
 #line 9552 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("like"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1574:
-
-/* Line 1806 of yacc.c  */
 #line 9556 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("like"),(yyvsp[(3) - (5)].str),mm_strdup("escape"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1575:
-
-/* Line 1806 of yacc.c  */
 #line 9560 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("not like"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1576:
-
-/* Line 1806 of yacc.c  */
 #line 9564 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("not like"),(yyvsp[(4) - (6)].str),mm_strdup("escape"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1577:
-
-/* Line 1806 of yacc.c  */
 #line 9568 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("ilike"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1578:
-
-/* Line 1806 of yacc.c  */
 #line 9572 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("ilike"),(yyvsp[(3) - (5)].str),mm_strdup("escape"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1579:
-
-/* Line 1806 of yacc.c  */
 #line 9576 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("not ilike"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1580:
-
-/* Line 1806 of yacc.c  */
 #line 9580 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("not ilike"),(yyvsp[(4) - (6)].str),mm_strdup("escape"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1581:
-
-/* Line 1806 of yacc.c  */
 #line 9584 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("similar to"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1582:
-
-/* Line 1806 of yacc.c  */
 #line 9588 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("similar to"),(yyvsp[(4) - (6)].str),mm_strdup("escape"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1583:
-
-/* Line 1806 of yacc.c  */
 #line 9592 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),mm_strdup("not similar to"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1584:
-
-/* Line 1806 of yacc.c  */
 #line 9596 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (7)].str),mm_strdup("not similar to"),(yyvsp[(5) - (7)].str),mm_strdup("escape"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1585:
-
-/* Line 1806 of yacc.c  */
 #line 9600 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is null"));
-}
+;}
     break;
 
   case 1586:
-
-/* Line 1806 of yacc.c  */
 #line 9604 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("isnull"));
-}
+;}
     break;
 
   case 1587:
-
-/* Line 1806 of yacc.c  */
 #line 9608 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not null"));
-}
+;}
     break;
 
   case 1588:
-
-/* Line 1806 of yacc.c  */
 #line 9612 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("notnull"));
-}
+;}
     break;
 
   case 1589:
-
-/* Line 1806 of yacc.c  */
 #line 9616 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("overlaps"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1590:
-
-/* Line 1806 of yacc.c  */
 #line 9620 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is true"));
-}
+;}
     break;
 
   case 1591:
-
-/* Line 1806 of yacc.c  */
 #line 9624 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not true"));
-}
+;}
     break;
 
   case 1592:
-
-/* Line 1806 of yacc.c  */
 #line 9628 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is false"));
-}
+;}
     break;
 
   case 1593:
-
-/* Line 1806 of yacc.c  */
 #line 9632 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not false"));
-}
+;}
     break;
 
   case 1594:
-
-/* Line 1806 of yacc.c  */
 #line 9636 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is unknown"));
-}
+;}
     break;
 
   case 1595:
-
-/* Line 1806 of yacc.c  */
 #line 9640 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not unknown"));
-}
+;}
     break;
 
   case 1596:
-
-/* Line 1806 of yacc.c  */
 #line 9644 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),mm_strdup("is distinct from"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1597:
-
-/* Line 1806 of yacc.c  */
 #line 9648 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (6)].str),mm_strdup("is not distinct from"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1598:
-
-/* Line 1806 of yacc.c  */
 #line 9652 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (6)].str),mm_strdup("is of ("),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1599:
-
-/* Line 1806 of yacc.c  */
 #line 9656 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (7)].str),mm_strdup("is not of ("),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1600:
-
-/* Line 1806 of yacc.c  */
 #line 9660 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),mm_strdup("between"),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup("and"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1601:
-
-/* Line 1806 of yacc.c  */
 #line 9664 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (7)].str),mm_strdup("not between"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup("and"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1602:
-
-/* Line 1806 of yacc.c  */
 #line 9668 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("between symmetric"),(yyvsp[(4) - (6)].str),mm_strdup("and"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1603:
-
-/* Line 1806 of yacc.c  */
 #line 9672 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (7)].str),mm_strdup("not between symmetric"),(yyvsp[(5) - (7)].str),mm_strdup("and"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1604:
-
-/* Line 1806 of yacc.c  */
 #line 9676 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("in"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1605:
-
-/* Line 1806 of yacc.c  */
 #line 9680 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("not in"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1606:
-
-/* Line 1806 of yacc.c  */
 #line 9684 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1607:
-
-/* Line 1806 of yacc.c  */
 #line 9688 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),mm_strdup("("),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1608:
-
-/* Line 1806 of yacc.c  */
 #line 9692 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,mm_strdup("unique"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1609:
-
-/* Line 1806 of yacc.c  */
 #line 9697 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is document"));
-}
+;}
     break;
 
   case 1610:
-
-/* Line 1806 of yacc.c  */
 #line 9701 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not document"));
-}
+;}
     break;
 
   case 1611:
-
-/* Line 1806 of yacc.c  */
 #line 9709 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1612:
-
-/* Line 1806 of yacc.c  */
 #line 9713 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("::"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1613:
-
-/* Line 1806 of yacc.c  */
 #line 9717 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("+"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1614:
-
-/* Line 1806 of yacc.c  */
 #line 9721 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1615:
-
-/* Line 1806 of yacc.c  */
 #line 9725 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("+"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1616:
-
-/* Line 1806 of yacc.c  */
 #line 9729 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("-"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1617:
-
-/* Line 1806 of yacc.c  */
 #line 9733 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("*"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1618:
-
-/* Line 1806 of yacc.c  */
 #line 9737 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("/"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1619:
-
-/* Line 1806 of yacc.c  */
 #line 9741 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("%"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1620:
-
-/* Line 1806 of yacc.c  */
 #line 9745 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("^"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1621:
-
-/* Line 1806 of yacc.c  */
 #line 9749 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("<"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1622:
-
-/* Line 1806 of yacc.c  */
 #line 9753 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(">"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1623:
-
-/* Line 1806 of yacc.c  */
 #line 9757 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1624:
-
-/* Line 1806 of yacc.c  */
 #line 9761 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1625:
-
-/* Line 1806 of yacc.c  */
 #line 9765 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1626:
-
-/* Line 1806 of yacc.c  */
 #line 9769 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1627:
-
-/* Line 1806 of yacc.c  */
 #line 9773 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),mm_strdup("is distinct from"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1628:
-
-/* Line 1806 of yacc.c  */
 #line 9777 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (6)].str),mm_strdup("is not distinct from"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1629:
-
-/* Line 1806 of yacc.c  */
 #line 9781 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (6)].str),mm_strdup("is of ("),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1630:
-
-/* Line 1806 of yacc.c  */
 #line 9785 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (7)].str),mm_strdup("is not of ("),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1631:
-
-/* Line 1806 of yacc.c  */
 #line 9789 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (3)].str),mm_strdup("is document"));
-}
+;}
     break;
 
   case 1632:
-
-/* Line 1806 of yacc.c  */
 #line 9793 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (4)].str),mm_strdup("is not document"));
-}
+;}
     break;
 
   case 1633:
-
-/* Line 1806 of yacc.c  */
 #line 9801 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1634:
-
-/* Line 1806 of yacc.c  */
 #line 9805 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1635:
-
-/* Line 1806 of yacc.c  */
 #line 9809 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1636:
-
-/* Line 1806 of yacc.c  */
 #line 9813 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("("),(yyvsp[(2) - (4)].str),mm_strdup(")"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1637:
-
-/* Line 1806 of yacc.c  */
 #line 9817 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1638:
-
-/* Line 1806 of yacc.c  */
 #line 9821 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1639:
-
-/* Line 1806 of yacc.c  */
 #line 9825 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1640:
-
-/* Line 1806 of yacc.c  */
 #line 9829 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1641:
-
-/* Line 1806 of yacc.c  */
 #line 9833 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("exists"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1642:
-
-/* Line 1806 of yacc.c  */
 #line 9837 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("array"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1643:
-
-/* Line 1806 of yacc.c  */
 #line 9841 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("array"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1644:
-
-/* Line 1806 of yacc.c  */
 #line 9845 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1645:
-
-/* Line 1806 of yacc.c  */
 #line 9853 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (4)].str),mm_strdup("( )"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1646:
-
-/* Line 1806 of yacc.c  */
 #line 9857 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1647:
-
-/* Line 1806 of yacc.c  */
 #line 9861 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (6)].str),mm_strdup("( variadic"),(yyvsp[(4) - (6)].str),mm_strdup(")"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1648:
-
-/* Line 1806 of yacc.c  */
 #line 9865 "preproc.y"
     { 
  (yyval.str) = cat_str(7,(yyvsp[(1) - (8)].str),mm_strdup("("),(yyvsp[(3) - (8)].str),mm_strdup(", variadic"),(yyvsp[(6) - (8)].str),mm_strdup(")"),(yyvsp[(8) - (8)].str));
-}
+;}
     break;
 
   case 1649:
-
-/* Line 1806 of yacc.c  */
 #line 9869 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),mm_strdup("("),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),mm_strdup(")"),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1650:
-
-/* Line 1806 of yacc.c  */
 #line 9873 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (7)].str),mm_strdup("( all"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup(")"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1651:
-
-/* Line 1806 of yacc.c  */
 #line 9877 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (7)].str),mm_strdup("( distinct"),(yyvsp[(4) - (7)].str),(yyvsp[(5) - (7)].str),mm_strdup(")"),(yyvsp[(7) - (7)].str));
-}
+;}
     break;
 
   case 1652:
-
-/* Line 1806 of yacc.c  */
 #line 9881 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (5)].str),mm_strdup("( * )"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1653:
-
-/* Line 1806 of yacc.c  */
 #line 9885 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("collation for ("),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1654:
-
-/* Line 1806 of yacc.c  */
 #line 9889 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_date");
-}
+;}
     break;
 
   case 1655:
-
-/* Line 1806 of yacc.c  */
 #line 9893 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_time");
-}
+;}
     break;
 
   case 1656:
-
-/* Line 1806 of yacc.c  */
 #line 9897 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("current_time ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1657:
-
-/* Line 1806 of yacc.c  */
 #line 9901 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_timestamp");
-}
+;}
     break;
 
   case 1658:
-
-/* Line 1806 of yacc.c  */
 #line 9905 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("current_timestamp ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1659:
-
-/* Line 1806 of yacc.c  */
 #line 9909 "preproc.y"
     { 
  (yyval.str) = mm_strdup("localtime");
-}
+;}
     break;
 
   case 1660:
-
-/* Line 1806 of yacc.c  */
 #line 9913 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("localtime ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1661:
-
-/* Line 1806 of yacc.c  */
 #line 9917 "preproc.y"
     { 
  (yyval.str) = mm_strdup("localtimestamp");
-}
+;}
     break;
 
   case 1662:
-
-/* Line 1806 of yacc.c  */
 #line 9921 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("localtimestamp ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1663:
-
-/* Line 1806 of yacc.c  */
 #line 9925 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_role");
-}
+;}
     break;
 
   case 1664:
-
-/* Line 1806 of yacc.c  */
 #line 9929 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_user");
-}
+;}
     break;
 
   case 1665:
-
-/* Line 1806 of yacc.c  */
 #line 9933 "preproc.y"
     { 
  (yyval.str) = mm_strdup("session_user");
-}
+;}
     break;
 
   case 1666:
-
-/* Line 1806 of yacc.c  */
 #line 9937 "preproc.y"
     { 
  (yyval.str) = mm_strdup("user");
-}
+;}
     break;
 
   case 1667:
-
-/* Line 1806 of yacc.c  */
 #line 9941 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_catalog");
-}
+;}
     break;
 
   case 1668:
-
-/* Line 1806 of yacc.c  */
 #line 9945 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_schema");
-}
+;}
     break;
 
   case 1669:
-
-/* Line 1806 of yacc.c  */
 #line 9949 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("cast ("),(yyvsp[(3) - (6)].str),mm_strdup("as"),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1670:
-
-/* Line 1806 of yacc.c  */
 #line 9953 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("extract ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1671:
-
-/* Line 1806 of yacc.c  */
 #line 9957 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("overlay ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1672:
-
-/* Line 1806 of yacc.c  */
 #line 9961 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("position ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1673:
-
-/* Line 1806 of yacc.c  */
 #line 9965 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("substring ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1674:
-
-/* Line 1806 of yacc.c  */
 #line 9969 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("treat ("),(yyvsp[(3) - (6)].str),mm_strdup("as"),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1675:
-
-/* Line 1806 of yacc.c  */
 #line 9973 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("trim ( both"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1676:
-
-/* Line 1806 of yacc.c  */
 #line 9977 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("trim ( leading"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1677:
-
-/* Line 1806 of yacc.c  */
 #line 9981 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("trim ( trailing"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1678:
-
-/* Line 1806 of yacc.c  */
 #line 9985 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("trim ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1679:
-
-/* Line 1806 of yacc.c  */
 #line 9989 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("nullif ("),(yyvsp[(3) - (6)].str),mm_strdup(","),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1680:
-
-/* Line 1806 of yacc.c  */
 #line 9993 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("coalesce ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1681:
-
-/* Line 1806 of yacc.c  */
 #line 9997 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("greatest ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1682:
-
-/* Line 1806 of yacc.c  */
 #line 10001 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("least ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1683:
-
-/* Line 1806 of yacc.c  */
 #line 10005 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("xmlconcat ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1684:
-
-/* Line 1806 of yacc.c  */
 #line 10009 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("xmlelement ( name"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1685:
-
-/* Line 1806 of yacc.c  */
 #line 10013 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("xmlelement ( name"),(yyvsp[(4) - (7)].str),mm_strdup(","),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1686:
-
-/* Line 1806 of yacc.c  */
 #line 10017 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("xmlelement ( name"),(yyvsp[(4) - (7)].str),mm_strdup(","),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1687:
-
-/* Line 1806 of yacc.c  */
 #line 10021 "preproc.y"
     { 
  (yyval.str) = cat_str(7,mm_strdup("xmlelement ( name"),(yyvsp[(4) - (9)].str),mm_strdup(","),(yyvsp[(6) - (9)].str),mm_strdup(","),(yyvsp[(8) - (9)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1688:
-
-/* Line 1806 of yacc.c  */
 #line 10025 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("xmlexists ("),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1689:
-
-/* Line 1806 of yacc.c  */
 #line 10029 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("xmlforest ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1690:
-
-/* Line 1806 of yacc.c  */
 #line 10033 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("xmlparse ("),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1691:
-
-/* Line 1806 of yacc.c  */
 #line 10037 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("xmlpi ( name"),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1692:
-
-/* Line 1806 of yacc.c  */
 #line 10041 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("xmlpi ( name"),(yyvsp[(4) - (7)].str),mm_strdup(","),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1693:
-
-/* Line 1806 of yacc.c  */
 #line 10045 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("xmlroot ("),(yyvsp[(3) - (7)].str),mm_strdup(","),(yyvsp[(5) - (7)].str),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1694:
-
-/* Line 1806 of yacc.c  */
 #line 10049 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("xmlserialize ("),(yyvsp[(3) - (7)].str),(yyvsp[(4) - (7)].str),mm_strdup("as"),(yyvsp[(6) - (7)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1695:
-
-/* Line 1806 of yacc.c  */
 #line 10057 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("version"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1696:
-
-/* Line 1806 of yacc.c  */
 #line 10061 "preproc.y"
     { 
  (yyval.str) = mm_strdup("version no value");
-}
+;}
     break;
 
   case 1697:
-
-/* Line 1806 of yacc.c  */
 #line 10069 "preproc.y"
     { 
  (yyval.str) = mm_strdup(", standalone yes");
-}
+;}
     break;
 
   case 1698:
-
-/* Line 1806 of yacc.c  */
 #line 10073 "preproc.y"
     { 
  (yyval.str) = mm_strdup(", standalone no");
-}
+;}
     break;
 
   case 1699:
-
-/* Line 1806 of yacc.c  */
 #line 10077 "preproc.y"
     { 
  (yyval.str) = mm_strdup(", standalone no value");
-}
+;}
     break;
 
   case 1700:
-
-/* Line 1806 of yacc.c  */
 #line 10081 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1701:
-
-/* Line 1806 of yacc.c  */
 #line 10088 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("xmlattributes ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1702:
-
-/* Line 1806 of yacc.c  */
 #line 10096 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1703:
-
-/* Line 1806 of yacc.c  */
 #line 10100 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1704:
-
-/* Line 1806 of yacc.c  */
 #line 10108 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1705:
-
-/* Line 1806 of yacc.c  */
 #line 10112 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1706:
-
-/* Line 1806 of yacc.c  */
 #line 10120 "preproc.y"
     { 
  (yyval.str) = mm_strdup("document");
-}
+;}
     break;
 
   case 1707:
-
-/* Line 1806 of yacc.c  */
 #line 10124 "preproc.y"
     { 
  (yyval.str) = mm_strdup("content");
-}
+;}
     break;
 
   case 1708:
-
-/* Line 1806 of yacc.c  */
 #line 10132 "preproc.y"
     { 
  (yyval.str) = mm_strdup("preserve whitespace");
-}
+;}
     break;
 
   case 1709:
-
-/* Line 1806 of yacc.c  */
 #line 10136 "preproc.y"
     { 
  (yyval.str) = mm_strdup("strip whitespace");
-}
+;}
     break;
 
   case 1710:
-
-/* Line 1806 of yacc.c  */
 #line 10140 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1711:
-
-/* Line 1806 of yacc.c  */
 #line 10147 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("passing"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1712:
-
-/* Line 1806 of yacc.c  */
 #line 10151 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("passing"),(yyvsp[(2) - (4)].str),mm_strdup("by ref"));
-}
+;}
     break;
 
   case 1713:
-
-/* Line 1806 of yacc.c  */
 #line 10155 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("passing by ref"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1714:
-
-/* Line 1806 of yacc.c  */
 #line 10159 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("passing by ref"),(yyvsp[(4) - (6)].str),mm_strdup("by ref"));
-}
+;}
     break;
 
   case 1715:
-
-/* Line 1806 of yacc.c  */
 #line 10167 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("window"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1716:
-
-/* Line 1806 of yacc.c  */
 #line 10171 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1717:
-
-/* Line 1806 of yacc.c  */
 #line 10178 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1718:
-
-/* Line 1806 of yacc.c  */
 #line 10182 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1719:
-
-/* Line 1806 of yacc.c  */
 #line 10190 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1720:
-
-/* Line 1806 of yacc.c  */
 #line 10198 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("over"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1721:
-
-/* Line 1806 of yacc.c  */
 #line 10202 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("over"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1722:
-
-/* Line 1806 of yacc.c  */
 #line 10206 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1723:
-
-/* Line 1806 of yacc.c  */
 #line 10213 "preproc.y"
     { 
  (yyval.str) = cat_str(6,mm_strdup("("),(yyvsp[(2) - (6)].str),(yyvsp[(3) - (6)].str),(yyvsp[(4) - (6)].str),(yyvsp[(5) - (6)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1724:
-
-/* Line 1806 of yacc.c  */
 #line 10221 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1725:
-
-/* Line 1806 of yacc.c  */
 #line 10225 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1726:
-
-/* Line 1806 of yacc.c  */
 #line 10232 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("partition by"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1727:
-
-/* Line 1806 of yacc.c  */
 #line 10236 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1728:
-
-/* Line 1806 of yacc.c  */
 #line 10243 "preproc.y"
     { 
 mmerror(PARSE_ERROR, ET_WARNING, "unsupported feature will be passed to server");
  (yyval.str) = cat_str(2,mm_strdup("range"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1729:
-
-/* Line 1806 of yacc.c  */
 #line 10248 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("rows"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1730:
-
-/* Line 1806 of yacc.c  */
 #line 10252 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1731:
-
-/* Line 1806 of yacc.c  */
 #line 10259 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1732:
-
-/* Line 1806 of yacc.c  */
 #line 10263 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("between"),(yyvsp[(2) - (4)].str),mm_strdup("and"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1733:
-
-/* Line 1806 of yacc.c  */
 #line 10271 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unbounded preceding");
-}
+;}
     break;
 
   case 1734:
-
-/* Line 1806 of yacc.c  */
 #line 10275 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unbounded following");
-}
+;}
     break;
 
   case 1735:
-
-/* Line 1806 of yacc.c  */
 #line 10279 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current row");
-}
+;}
     break;
 
   case 1736:
-
-/* Line 1806 of yacc.c  */
 #line 10283 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("preceding"));
-}
+;}
     break;
 
   case 1737:
-
-/* Line 1806 of yacc.c  */
 #line 10287 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),mm_strdup("following"));
-}
+;}
     break;
 
   case 1738:
-
-/* Line 1806 of yacc.c  */
 #line 10295 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("row ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1739:
-
-/* Line 1806 of yacc.c  */
 #line 10299 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row ( )");
-}
+;}
     break;
 
   case 1740:
-
-/* Line 1806 of yacc.c  */
 #line 10303 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("("),(yyvsp[(2) - (5)].str),mm_strdup(","),(yyvsp[(4) - (5)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1741:
-
-/* Line 1806 of yacc.c  */
 #line 10311 "preproc.y"
     { 
  (yyval.str) = mm_strdup("any");
-}
+;}
     break;
 
   case 1742:
-
-/* Line 1806 of yacc.c  */
 #line 10315 "preproc.y"
     { 
  (yyval.str) = mm_strdup("some");
-}
+;}
     break;
 
   case 1743:
-
-/* Line 1806 of yacc.c  */
 #line 10319 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 1744:
-
-/* Line 1806 of yacc.c  */
 #line 10327 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1745:
-
-/* Line 1806 of yacc.c  */
 #line 10331 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1746:
-
-/* Line 1806 of yacc.c  */
 #line 10339 "preproc.y"
     { 
  (yyval.str) = mm_strdup("+");
-}
+;}
     break;
 
   case 1747:
-
-/* Line 1806 of yacc.c  */
 #line 10343 "preproc.y"
     { 
  (yyval.str) = mm_strdup("-");
-}
+;}
     break;
 
   case 1748:
-
-/* Line 1806 of yacc.c  */
 #line 10347 "preproc.y"
     { 
  (yyval.str) = mm_strdup("*");
-}
+;}
     break;
 
   case 1749:
-
-/* Line 1806 of yacc.c  */
 #line 10351 "preproc.y"
     { 
  (yyval.str) = mm_strdup("/");
-}
+;}
     break;
 
   case 1750:
-
-/* Line 1806 of yacc.c  */
 #line 10355 "preproc.y"
     { 
  (yyval.str) = mm_strdup("%");
-}
+;}
     break;
 
   case 1751:
-
-/* Line 1806 of yacc.c  */
 #line 10359 "preproc.y"
     { 
  (yyval.str) = mm_strdup("^");
-}
+;}
     break;
 
   case 1752:
-
-/* Line 1806 of yacc.c  */
 #line 10363 "preproc.y"
     { 
  (yyval.str) = mm_strdup("<");
-}
+;}
     break;
 
   case 1753:
-
-/* Line 1806 of yacc.c  */
 #line 10367 "preproc.y"
     { 
  (yyval.str) = mm_strdup(">");
-}
+;}
     break;
 
   case 1754:
-
-/* Line 1806 of yacc.c  */
 #line 10371 "preproc.y"
     { 
  (yyval.str) = mm_strdup("=");
-}
+;}
     break;
 
   case 1755:
-
-/* Line 1806 of yacc.c  */
 #line 10379 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1756:
-
-/* Line 1806 of yacc.c  */
 #line 10383 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("operator ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1757:
-
-/* Line 1806 of yacc.c  */
 #line 10391 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1758:
-
-/* Line 1806 of yacc.c  */
 #line 10395 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("operator ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1759:
-
-/* Line 1806 of yacc.c  */
 #line 10403 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1760:
-
-/* Line 1806 of yacc.c  */
 #line 10407 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("operator ("),(yyvsp[(3) - (4)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1761:
-
-/* Line 1806 of yacc.c  */
 #line 10411 "preproc.y"
     { 
  (yyval.str) = mm_strdup("like");
-}
+;}
     break;
 
   case 1762:
-
-/* Line 1806 of yacc.c  */
 #line 10415 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not like");
-}
+;}
     break;
 
   case 1763:
-
-/* Line 1806 of yacc.c  */
 #line 10419 "preproc.y"
     { 
  (yyval.str) = mm_strdup("ilike");
-}
+;}
     break;
 
   case 1764:
-
-/* Line 1806 of yacc.c  */
 #line 10423 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not ilike");
-}
+;}
     break;
 
   case 1765:
-
-/* Line 1806 of yacc.c  */
 #line 10431 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1766:
-
-/* Line 1806 of yacc.c  */
 #line 10435 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1767:
-
-/* Line 1806 of yacc.c  */
 #line 10443 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1768:
-
-/* Line 1806 of yacc.c  */
 #line 10447 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1769:
-
-/* Line 1806 of yacc.c  */
 #line 10455 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1770:
-
-/* Line 1806 of yacc.c  */
 #line 10459 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(":="),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1771:
-
-/* Line 1806 of yacc.c  */
 #line 10467 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1772:
-
-/* Line 1806 of yacc.c  */
 #line 10471 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1773:
-
-/* Line 1806 of yacc.c  */
 #line 10479 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("["),(yyvsp[(2) - (3)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1774:
-
-/* Line 1806 of yacc.c  */
 #line 10483 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("["),(yyvsp[(2) - (3)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1775:
-
-/* Line 1806 of yacc.c  */
 #line 10487 "preproc.y"
     { 
  (yyval.str) = mm_strdup("[ ]");
-}
+;}
     break;
 
   case 1776:
-
-/* Line 1806 of yacc.c  */
 #line 10495 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1777:
-
-/* Line 1806 of yacc.c  */
 #line 10499 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1778:
-
-/* Line 1806 of yacc.c  */
 #line 10507 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("from"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1779:
-
-/* Line 1806 of yacc.c  */
 #line 10511 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1780:
-
-/* Line 1806 of yacc.c  */
 #line 10518 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1781:
-
-/* Line 1806 of yacc.c  */
 #line 10522 "preproc.y"
     { 
  (yyval.str) = mm_strdup("year");
-}
+;}
     break;
 
   case 1782:
-
-/* Line 1806 of yacc.c  */
 #line 10526 "preproc.y"
     { 
  (yyval.str) = mm_strdup("month");
-}
+;}
     break;
 
   case 1783:
-
-/* Line 1806 of yacc.c  */
 #line 10530 "preproc.y"
     { 
  (yyval.str) = mm_strdup("day");
-}
+;}
     break;
 
   case 1784:
-
-/* Line 1806 of yacc.c  */
 #line 10534 "preproc.y"
     { 
  (yyval.str) = mm_strdup("hour");
-}
+;}
     break;
 
   case 1785:
-
-/* Line 1806 of yacc.c  */
 #line 10538 "preproc.y"
     { 
  (yyval.str) = mm_strdup("minute");
-}
+;}
     break;
 
   case 1786:
-
-/* Line 1806 of yacc.c  */
 #line 10542 "preproc.y"
     { 
  (yyval.str) = mm_strdup("second");
-}
+;}
     break;
 
   case 1787:
-
-/* Line 1806 of yacc.c  */
 #line 10546 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1788:
-
-/* Line 1806 of yacc.c  */
 #line 10554 "preproc.y"
     { 
  (yyval.str) = cat_str(4,(yyvsp[(1) - (4)].str),(yyvsp[(2) - (4)].str),(yyvsp[(3) - (4)].str),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1789:
-
-/* Line 1806 of yacc.c  */
 #line 10558 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1790:
-
-/* Line 1806 of yacc.c  */
 #line 10566 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("placing"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1791:
-
-/* Line 1806 of yacc.c  */
 #line 10574 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("in"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1792:
-
-/* Line 1806 of yacc.c  */
 #line 10578 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1793:
-
-/* Line 1806 of yacc.c  */
 #line 10585 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1794:
-
-/* Line 1806 of yacc.c  */
 #line 10589 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1795:
-
-/* Line 1806 of yacc.c  */
 #line 10593 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1796:
-
-/* Line 1806 of yacc.c  */
 #line 10597 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1797:
-
-/* Line 1806 of yacc.c  */
 #line 10601 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1798:
-
-/* Line 1806 of yacc.c  */
 #line 10605 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1799:
-
-/* Line 1806 of yacc.c  */
 #line 10612 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1800:
-
-/* Line 1806 of yacc.c  */
 #line 10620 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("for"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1801:
-
-/* Line 1806 of yacc.c  */
 #line 10628 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("from"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1802:
-
-/* Line 1806 of yacc.c  */
 #line 10632 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("from"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1803:
-
-/* Line 1806 of yacc.c  */
 #line 10636 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1804:
-
-/* Line 1806 of yacc.c  */
 #line 10644 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1805:
-
-/* Line 1806 of yacc.c  */
 #line 10648 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1806:
-
-/* Line 1806 of yacc.c  */
 #line 10656 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("case"),(yyvsp[(2) - (5)].str),(yyvsp[(3) - (5)].str),(yyvsp[(4) - (5)].str),mm_strdup("end"));
-}
+;}
     break;
 
   case 1807:
-
-/* Line 1806 of yacc.c  */
 #line 10664 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1808:
-
-/* Line 1806 of yacc.c  */
 #line 10668 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1809:
-
-/* Line 1806 of yacc.c  */
 #line 10676 "preproc.y"
     { 
  (yyval.str) = cat_str(4,mm_strdup("when"),(yyvsp[(2) - (4)].str),mm_strdup("then"),(yyvsp[(4) - (4)].str));
-}
+;}
     break;
 
   case 1810:
-
-/* Line 1806 of yacc.c  */
 #line 10684 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("else"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1811:
-
-/* Line 1806 of yacc.c  */
 #line 10688 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1812:
-
-/* Line 1806 of yacc.c  */
 #line 10695 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1813:
-
-/* Line 1806 of yacc.c  */
 #line 10699 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1814:
-
-/* Line 1806 of yacc.c  */
 #line 10706 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1815:
-
-/* Line 1806 of yacc.c  */
 #line 10710 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1816:
-
-/* Line 1806 of yacc.c  */
 #line 10718 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("."),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1817:
-
-/* Line 1806 of yacc.c  */
 #line 10722 "preproc.y"
     { 
  (yyval.str) = mm_strdup(". *");
-}
+;}
     break;
 
   case 1818:
-
-/* Line 1806 of yacc.c  */
 #line 10726 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("["),(yyvsp[(2) - (3)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1819:
-
-/* Line 1806 of yacc.c  */
 #line 10730 "preproc.y"
     { 
  (yyval.str) = cat_str(5,mm_strdup("["),(yyvsp[(2) - (5)].str),mm_strdup(":"),(yyvsp[(4) - (5)].str),mm_strdup("]"));
-}
+;}
     break;
 
   case 1820:
-
-/* Line 1806 of yacc.c  */
 #line 10738 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1821:
-
-/* Line 1806 of yacc.c  */
 #line 10742 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1822:
-
-/* Line 1806 of yacc.c  */
 #line 10750 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1823:
-
-/* Line 1806 of yacc.c  */
 #line 10753 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1824:
-
-/* Line 1806 of yacc.c  */
 #line 10761 "preproc.y"
     { 
  (yyval.str) = mm_strdup("asymmetric");
-}
+;}
     break;
 
   case 1825:
-
-/* Line 1806 of yacc.c  */
 #line 10765 "preproc.y"
     { 
- (yyval.str)=EMPTY; }
+ (yyval.str)=EMPTY; ;}
     break;
 
   case 1826:
-
-/* Line 1806 of yacc.c  */
 #line 10772 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1827:
-
-/* Line 1806 of yacc.c  */
 #line 10776 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default");
-}
+;}
     break;
 
   case 1828:
-
-/* Line 1806 of yacc.c  */
 #line 10784 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1829:
-
-/* Line 1806 of yacc.c  */
 #line 10788 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1830:
-
-/* Line 1806 of yacc.c  */
 #line 10796 "preproc.y"
     { 
  (yyval.str) = cat_str(3,mm_strdup("("),(yyvsp[(2) - (3)].str),mm_strdup(")"));
-}
+;}
     break;
 
   case 1831:
-
-/* Line 1806 of yacc.c  */
 #line 10804 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1832:
-
-/* Line 1806 of yacc.c  */
 #line 10808 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1833:
-
-/* Line 1806 of yacc.c  */
 #line 10816 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup("as"),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1834:
-
-/* Line 1806 of yacc.c  */
 #line 10820 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1835:
-
-/* Line 1806 of yacc.c  */
 #line 10824 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1836:
-
-/* Line 1806 of yacc.c  */
 #line 10828 "preproc.y"
     { 
  (yyval.str) = mm_strdup("*");
-}
+;}
     break;
 
   case 1837:
-
-/* Line 1806 of yacc.c  */
 #line 10836 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1838:
-
-/* Line 1806 of yacc.c  */
 #line 10840 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1839:
-
-/* Line 1806 of yacc.c  */
 #line 10848 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1840:
-
-/* Line 1806 of yacc.c  */
 #line 10852 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1841:
-
-/* Line 1806 of yacc.c  */
 #line 10860 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1842:
-
-/* Line 1806 of yacc.c  */
 #line 10864 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1843:
-
-/* Line 1806 of yacc.c  */
 #line 10872 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1844:
-
-/* Line 1806 of yacc.c  */
 #line 10880 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1845:
-
-/* Line 1806 of yacc.c  */
 #line 10888 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1846:
-
-/* Line 1806 of yacc.c  */
 #line 10896 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1847:
-
-/* Line 1806 of yacc.c  */
 #line 10904 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1848:
-
-/* Line 1806 of yacc.c  */
 #line 10912 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1849:
-
-/* Line 1806 of yacc.c  */
 #line 10920 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1850:
-
-/* Line 1806 of yacc.c  */
 #line 10924 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1851:
-
-/* Line 1806 of yacc.c  */
 #line 10932 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1852:
-
-/* Line 1806 of yacc.c  */
 #line 10936 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1853:
-
-/* Line 1806 of yacc.c  */
 #line 10940 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1854:
-
-/* Line 1806 of yacc.c  */
 #line 10944 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1855:
-
-/* Line 1806 of yacc.c  */
 #line 10948 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xconst");
-}
+;}
     break;
 
   case 1856:
-
-/* Line 1806 of yacc.c  */
 #line 10952 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1857:
-
-/* Line 1806 of yacc.c  */
 #line 10956 "preproc.y"
     { 
  (yyval.str) = cat_str(5,(yyvsp[(1) - (5)].str),mm_strdup("("),(yyvsp[(3) - (5)].str),mm_strdup(")"),(yyvsp[(5) - (5)].str));
-}
+;}
     break;
 
   case 1858:
-
-/* Line 1806 of yacc.c  */
 #line 10960 "preproc.y"
     { 
  (yyval.str) = cat_str(2,(yyvsp[(1) - (2)].str),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1859:
-
-/* Line 1806 of yacc.c  */
 #line 10964 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),(yyvsp[(2) - (3)].str),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1860:
-
-/* Line 1806 of yacc.c  */
 #line 10968 "preproc.y"
     { 
  (yyval.str) = cat_str(6,(yyvsp[(1) - (6)].str),mm_strdup("("),(yyvsp[(3) - (6)].str),mm_strdup(")"),(yyvsp[(5) - (6)].str),(yyvsp[(6) - (6)].str));
-}
+;}
     break;
 
   case 1861:
-
-/* Line 1806 of yacc.c  */
 #line 10972 "preproc.y"
     { 
  (yyval.str) = mm_strdup("true");
-}
+;}
     break;
 
   case 1862:
-
-/* Line 1806 of yacc.c  */
 #line 10976 "preproc.y"
     { 
  (yyval.str) = mm_strdup("false");
-}
+;}
     break;
 
   case 1863:
-
-/* Line 1806 of yacc.c  */
 #line 10980 "preproc.y"
     { 
  (yyval.str) = mm_strdup("null");
-}
+;}
     break;
 
   case 1864:
-
-/* Line 1806 of yacc.c  */
 #line 10983 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1865:
-
-/* Line 1806 of yacc.c  */
 #line 10984 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1866:
-
-/* Line 1806 of yacc.c  */
 #line 10990 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 1867:
-
-/* Line 1806 of yacc.c  */
 #line 10996 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1868:
-
-/* Line 1806 of yacc.c  */
 #line 11004 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1869:
-
-/* Line 1806 of yacc.c  */
 #line 11008 "preproc.y"
     { 
  (yyval.str) = cat_str(3,(yyvsp[(1) - (3)].str),mm_strdup(","),(yyvsp[(3) - (3)].str));
-}
+;}
     break;
 
   case 1870:
-
-/* Line 1806 of yacc.c  */
 #line 11016 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1871:
-
-/* Line 1806 of yacc.c  */
 #line 11019 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 1872:
-
-/* Line 1806 of yacc.c  */
 #line 11021 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("+"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1873:
-
-/* Line 1806 of yacc.c  */
 #line 11025 "preproc.y"
     { 
  (yyval.str) = cat_str(2,mm_strdup("-"),(yyvsp[(2) - (2)].str));
-}
+;}
     break;
 
   case 1874:
-
-/* Line 1806 of yacc.c  */
 #line 11033 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1875:
-
-/* Line 1806 of yacc.c  */
 #line 11037 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1876:
-
-/* Line 1806 of yacc.c  */
 #line 11041 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1877:
-
-/* Line 1806 of yacc.c  */
 #line 11045 "preproc.y"
     { 
  (yyval.str) = (yyvsp[(1) - (1)].str);
-}
+;}
     break;
 
   case 1878:
-
-/* Line 1806 of yacc.c  */
 #line 11053 "preproc.y"
     { 
  (yyval.str) = mm_strdup("abort");
-}
+;}
     break;
 
   case 1879:
-
-/* Line 1806 of yacc.c  */
 #line 11057 "preproc.y"
     { 
  (yyval.str) = mm_strdup("absolute");
-}
+;}
     break;
 
   case 1880:
-
-/* Line 1806 of yacc.c  */
 #line 11061 "preproc.y"
     { 
  (yyval.str) = mm_strdup("access");
-}
+;}
     break;
 
   case 1881:
-
-/* Line 1806 of yacc.c  */
 #line 11065 "preproc.y"
     { 
  (yyval.str) = mm_strdup("action");
-}
+;}
     break;
 
   case 1882:
-
-/* Line 1806 of yacc.c  */
 #line 11069 "preproc.y"
     { 
  (yyval.str) = mm_strdup("add");
-}
+;}
     break;
 
   case 1883:
-
-/* Line 1806 of yacc.c  */
 #line 11073 "preproc.y"
     { 
  (yyval.str) = mm_strdup("admin");
-}
+;}
     break;
 
   case 1884:
-
-/* Line 1806 of yacc.c  */
 #line 11077 "preproc.y"
     { 
  (yyval.str) = mm_strdup("after");
-}
+;}
     break;
 
   case 1885:
-
-/* Line 1806 of yacc.c  */
 #line 11081 "preproc.y"
     { 
  (yyval.str) = mm_strdup("aggregate");
-}
+;}
     break;
 
   case 1886:
-
-/* Line 1806 of yacc.c  */
 #line 11085 "preproc.y"
     { 
  (yyval.str) = mm_strdup("also");
-}
+;}
     break;
 
   case 1887:
-
-/* Line 1806 of yacc.c  */
 #line 11089 "preproc.y"
     { 
  (yyval.str) = mm_strdup("alter");
-}
+;}
     break;
 
   case 1888:
-
-/* Line 1806 of yacc.c  */
 #line 11093 "preproc.y"
     { 
  (yyval.str) = mm_strdup("always");
-}
+;}
     break;
 
   case 1889:
-
-/* Line 1806 of yacc.c  */
 #line 11097 "preproc.y"
     { 
  (yyval.str) = mm_strdup("assertion");
-}
+;}
     break;
 
   case 1890:
-
-/* Line 1806 of yacc.c  */
 #line 11101 "preproc.y"
     { 
  (yyval.str) = mm_strdup("assignment");
-}
+;}
     break;
 
   case 1891:
-
-/* Line 1806 of yacc.c  */
 #line 11105 "preproc.y"
     { 
  (yyval.str) = mm_strdup("at");
-}
+;}
     break;
 
   case 1892:
-
-/* Line 1806 of yacc.c  */
 #line 11109 "preproc.y"
     { 
  (yyval.str) = mm_strdup("attribute");
-}
+;}
     break;
 
   case 1893:
-
-/* Line 1806 of yacc.c  */
 #line 11113 "preproc.y"
     { 
  (yyval.str) = mm_strdup("backward");
-}
+;}
     break;
 
   case 1894:
-
-/* Line 1806 of yacc.c  */
 #line 11117 "preproc.y"
     { 
  (yyval.str) = mm_strdup("before");
-}
+;}
     break;
 
   case 1895:
-
-/* Line 1806 of yacc.c  */
 #line 11121 "preproc.y"
     { 
  (yyval.str) = mm_strdup("begin");
-}
+;}
     break;
 
   case 1896:
-
-/* Line 1806 of yacc.c  */
 #line 11125 "preproc.y"
     { 
  (yyval.str) = mm_strdup("by");
-}
+;}
     break;
 
   case 1897:
-
-/* Line 1806 of yacc.c  */
 #line 11129 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cache");
-}
+;}
     break;
 
   case 1898:
-
-/* Line 1806 of yacc.c  */
 #line 11133 "preproc.y"
     { 
  (yyval.str) = mm_strdup("called");
-}
+;}
     break;
 
   case 1899:
-
-/* Line 1806 of yacc.c  */
 #line 11137 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cascade");
-}
+;}
     break;
 
   case 1900:
-
-/* Line 1806 of yacc.c  */
 #line 11141 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cascaded");
-}
+;}
     break;
 
   case 1901:
-
-/* Line 1806 of yacc.c  */
 #line 11145 "preproc.y"
     { 
  (yyval.str) = mm_strdup("catalog");
-}
+;}
     break;
 
   case 1902:
-
-/* Line 1806 of yacc.c  */
 #line 11149 "preproc.y"
     { 
  (yyval.str) = mm_strdup("chain");
-}
+;}
     break;
 
   case 1903:
-
-/* Line 1806 of yacc.c  */
 #line 11153 "preproc.y"
     { 
  (yyval.str) = mm_strdup("characteristics");
-}
+;}
     break;
 
   case 1904:
-
-/* Line 1806 of yacc.c  */
 #line 11157 "preproc.y"
     { 
  (yyval.str) = mm_strdup("checkpoint");
-}
+;}
     break;
 
   case 1905:
-
-/* Line 1806 of yacc.c  */
 #line 11161 "preproc.y"
     { 
  (yyval.str) = mm_strdup("class");
-}
+;}
     break;
 
   case 1906:
-
-/* Line 1806 of yacc.c  */
 #line 11165 "preproc.y"
     { 
  (yyval.str) = mm_strdup("close");
-}
+;}
     break;
 
   case 1907:
-
-/* Line 1806 of yacc.c  */
 #line 11169 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cluster");
-}
+;}
     break;
 
   case 1908:
-
-/* Line 1806 of yacc.c  */
 #line 11173 "preproc.y"
     { 
  (yyval.str) = mm_strdup("comment");
-}
+;}
     break;
 
   case 1909:
-
-/* Line 1806 of yacc.c  */
 #line 11177 "preproc.y"
     { 
  (yyval.str) = mm_strdup("comments");
-}
+;}
     break;
 
   case 1910:
-
-/* Line 1806 of yacc.c  */
 #line 11181 "preproc.y"
     { 
  (yyval.str) = mm_strdup("commit");
-}
+;}
     break;
 
   case 1911:
-
-/* Line 1806 of yacc.c  */
 #line 11185 "preproc.y"
     { 
  (yyval.str) = mm_strdup("committed");
-}
+;}
     break;
 
   case 1912:
-
-/* Line 1806 of yacc.c  */
 #line 11189 "preproc.y"
     { 
  (yyval.str) = mm_strdup("configuration");
-}
+;}
     break;
 
   case 1913:
-
-/* Line 1806 of yacc.c  */
 #line 11193 "preproc.y"
     { 
  (yyval.str) = mm_strdup("constraints");
-}
+;}
     break;
 
   case 1914:
-
-/* Line 1806 of yacc.c  */
 #line 11197 "preproc.y"
     { 
  (yyval.str) = mm_strdup("content");
-}
+;}
     break;
 
   case 1915:
-
-/* Line 1806 of yacc.c  */
 #line 11201 "preproc.y"
     { 
  (yyval.str) = mm_strdup("continue");
-}
+;}
     break;
 
   case 1916:
-
-/* Line 1806 of yacc.c  */
 #line 11205 "preproc.y"
     { 
  (yyval.str) = mm_strdup("conversion");
-}
+;}
     break;
 
   case 1917:
-
-/* Line 1806 of yacc.c  */
 #line 11209 "preproc.y"
     { 
  (yyval.str) = mm_strdup("copy");
-}
+;}
     break;
 
   case 1918:
-
-/* Line 1806 of yacc.c  */
 #line 11213 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cost");
-}
+;}
     break;
 
   case 1919:
-
-/* Line 1806 of yacc.c  */
 #line 11217 "preproc.y"
     { 
  (yyval.str) = mm_strdup("csv");
-}
+;}
     break;
 
   case 1920:
-
-/* Line 1806 of yacc.c  */
 #line 11221 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cursor");
-}
+;}
     break;
 
   case 1921:
-
-/* Line 1806 of yacc.c  */
 #line 11225 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cycle");
-}
+;}
     break;
 
   case 1922:
-
-/* Line 1806 of yacc.c  */
 #line 11229 "preproc.y"
     { 
  (yyval.str) = mm_strdup("data");
-}
+;}
     break;
 
   case 1923:
-
-/* Line 1806 of yacc.c  */
 #line 11233 "preproc.y"
     { 
  (yyval.str) = mm_strdup("database");
-}
+;}
     break;
 
   case 1924:
-
-/* Line 1806 of yacc.c  */
 #line 11237 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deallocate");
-}
+;}
     break;
 
   case 1925:
-
-/* Line 1806 of yacc.c  */
 #line 11241 "preproc.y"
     { 
  (yyval.str) = mm_strdup("declare");
-}
+;}
     break;
 
   case 1926:
-
-/* Line 1806 of yacc.c  */
 #line 11245 "preproc.y"
     { 
  (yyval.str) = mm_strdup("defaults");
-}
+;}
     break;
 
   case 1927:
-
-/* Line 1806 of yacc.c  */
 #line 11249 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferred");
-}
+;}
     break;
 
   case 1928:
-
-/* Line 1806 of yacc.c  */
 #line 11253 "preproc.y"
     { 
  (yyval.str) = mm_strdup("definer");
-}
+;}
     break;
 
   case 1929:
-
-/* Line 1806 of yacc.c  */
 #line 11257 "preproc.y"
     { 
  (yyval.str) = mm_strdup("delete");
-}
+;}
     break;
 
   case 1930:
-
-/* Line 1806 of yacc.c  */
 #line 11261 "preproc.y"
     { 
  (yyval.str) = mm_strdup("delimiter");
-}
+;}
     break;
 
   case 1931:
-
-/* Line 1806 of yacc.c  */
 #line 11265 "preproc.y"
     { 
  (yyval.str) = mm_strdup("delimiters");
-}
+;}
     break;
 
   case 1932:
-
-/* Line 1806 of yacc.c  */
 #line 11269 "preproc.y"
     { 
  (yyval.str) = mm_strdup("dictionary");
-}
+;}
     break;
 
   case 1933:
-
-/* Line 1806 of yacc.c  */
 #line 11273 "preproc.y"
     { 
  (yyval.str) = mm_strdup("disable");
-}
+;}
     break;
 
   case 1934:
-
-/* Line 1806 of yacc.c  */
 #line 11277 "preproc.y"
     { 
  (yyval.str) = mm_strdup("discard");
-}
+;}
     break;
 
   case 1935:
-
-/* Line 1806 of yacc.c  */
 #line 11281 "preproc.y"
     { 
  (yyval.str) = mm_strdup("document");
-}
+;}
     break;
 
   case 1936:
-
-/* Line 1806 of yacc.c  */
 #line 11285 "preproc.y"
     { 
  (yyval.str) = mm_strdup("domain");
-}
+;}
     break;
 
   case 1937:
-
-/* Line 1806 of yacc.c  */
 #line 11289 "preproc.y"
     { 
  (yyval.str) = mm_strdup("double");
-}
+;}
     break;
 
   case 1938:
-
-/* Line 1806 of yacc.c  */
 #line 11293 "preproc.y"
     { 
  (yyval.str) = mm_strdup("drop");
-}
+;}
     break;
 
   case 1939:
-
-/* Line 1806 of yacc.c  */
 #line 11297 "preproc.y"
     { 
  (yyval.str) = mm_strdup("each");
-}
+;}
     break;
 
   case 1940:
-
-/* Line 1806 of yacc.c  */
 #line 11301 "preproc.y"
     { 
  (yyval.str) = mm_strdup("enable");
-}
+;}
     break;
 
   case 1941:
-
-/* Line 1806 of yacc.c  */
 #line 11305 "preproc.y"
     { 
  (yyval.str) = mm_strdup("encoding");
-}
+;}
     break;
 
   case 1942:
-
-/* Line 1806 of yacc.c  */
 #line 11309 "preproc.y"
     { 
  (yyval.str) = mm_strdup("encrypted");
-}
+;}
     break;
 
   case 1943:
-
-/* Line 1806 of yacc.c  */
 #line 11313 "preproc.y"
     { 
  (yyval.str) = mm_strdup("enum");
-}
+;}
     break;
 
   case 1944:
-
-/* Line 1806 of yacc.c  */
 #line 11317 "preproc.y"
     { 
  (yyval.str) = mm_strdup("escape");
-}
+;}
     break;
 
   case 1945:
-
-/* Line 1806 of yacc.c  */
 #line 11321 "preproc.y"
     { 
  (yyval.str) = mm_strdup("exclude");
-}
+;}
     break;
 
   case 1946:
-
-/* Line 1806 of yacc.c  */
 #line 11325 "preproc.y"
     { 
  (yyval.str) = mm_strdup("excluding");
-}
+;}
     break;
 
   case 1947:
-
-/* Line 1806 of yacc.c  */
 #line 11329 "preproc.y"
     { 
  (yyval.str) = mm_strdup("exclusive");
-}
+;}
     break;
 
   case 1948:
-
-/* Line 1806 of yacc.c  */
 #line 11333 "preproc.y"
     { 
  (yyval.str) = mm_strdup("execute");
-}
+;}
     break;
 
   case 1949:
-
-/* Line 1806 of yacc.c  */
 #line 11337 "preproc.y"
     { 
  (yyval.str) = mm_strdup("explain");
-}
+;}
     break;
 
   case 1950:
-
-/* Line 1806 of yacc.c  */
 #line 11341 "preproc.y"
     { 
  (yyval.str) = mm_strdup("extension");
-}
+;}
     break;
 
   case 1951:
-
-/* Line 1806 of yacc.c  */
 #line 11345 "preproc.y"
     { 
  (yyval.str) = mm_strdup("external");
-}
+;}
     break;
 
   case 1952:
-
-/* Line 1806 of yacc.c  */
 #line 11349 "preproc.y"
     { 
  (yyval.str) = mm_strdup("family");
-}
+;}
     break;
 
   case 1953:
-
-/* Line 1806 of yacc.c  */
 #line 11353 "preproc.y"
     { 
  (yyval.str) = mm_strdup("first");
-}
+;}
     break;
 
   case 1954:
-
-/* Line 1806 of yacc.c  */
 #line 11357 "preproc.y"
     { 
  (yyval.str) = mm_strdup("following");
-}
+;}
     break;
 
   case 1955:
-
-/* Line 1806 of yacc.c  */
 #line 11361 "preproc.y"
     { 
  (yyval.str) = mm_strdup("force");
-}
+;}
     break;
 
   case 1956:
-
-/* Line 1806 of yacc.c  */
 #line 11365 "preproc.y"
     { 
  (yyval.str) = mm_strdup("forward");
-}
+;}
     break;
 
   case 1957:
-
-/* Line 1806 of yacc.c  */
 #line 11369 "preproc.y"
     { 
  (yyval.str) = mm_strdup("function");
-}
+;}
     break;
 
   case 1958:
-
-/* Line 1806 of yacc.c  */
 #line 11373 "preproc.y"
     { 
  (yyval.str) = mm_strdup("functions");
-}
+;}
     break;
 
   case 1959:
-
-/* Line 1806 of yacc.c  */
 #line 11377 "preproc.y"
     { 
  (yyval.str) = mm_strdup("global");
-}
+;}
     break;
 
   case 1960:
-
-/* Line 1806 of yacc.c  */
 #line 11381 "preproc.y"
     { 
  (yyval.str) = mm_strdup("granted");
-}
+;}
     break;
 
   case 1961:
-
-/* Line 1806 of yacc.c  */
 #line 11385 "preproc.y"
     { 
  (yyval.str) = mm_strdup("handler");
-}
+;}
     break;
 
   case 1962:
-
-/* Line 1806 of yacc.c  */
 #line 11389 "preproc.y"
     { 
  (yyval.str) = mm_strdup("header");
-}
+;}
     break;
 
   case 1963:
-
-/* Line 1806 of yacc.c  */
 #line 11393 "preproc.y"
     { 
  (yyval.str) = mm_strdup("hold");
-}
+;}
     break;
 
   case 1964:
-
-/* Line 1806 of yacc.c  */
 #line 11397 "preproc.y"
     { 
  (yyval.str) = mm_strdup("identity");
-}
+;}
     break;
 
   case 1965:
-
-/* Line 1806 of yacc.c  */
 #line 11401 "preproc.y"
     { 
  (yyval.str) = mm_strdup("if");
-}
+;}
     break;
 
   case 1966:
-
-/* Line 1806 of yacc.c  */
 #line 11405 "preproc.y"
     { 
  (yyval.str) = mm_strdup("immediate");
-}
+;}
     break;
 
   case 1967:
-
-/* Line 1806 of yacc.c  */
 #line 11409 "preproc.y"
     { 
  (yyval.str) = mm_strdup("immutable");
-}
+;}
     break;
 
   case 1968:
-
-/* Line 1806 of yacc.c  */
 #line 11413 "preproc.y"
     { 
  (yyval.str) = mm_strdup("implicit");
-}
+;}
     break;
 
   case 1969:
-
-/* Line 1806 of yacc.c  */
 #line 11417 "preproc.y"
     { 
  (yyval.str) = mm_strdup("including");
-}
+;}
     break;
 
   case 1970:
-
-/* Line 1806 of yacc.c  */
 #line 11421 "preproc.y"
     { 
  (yyval.str) = mm_strdup("increment");
-}
+;}
     break;
 
   case 1971:
-
-/* Line 1806 of yacc.c  */
 #line 11425 "preproc.y"
     { 
  (yyval.str) = mm_strdup("index");
-}
+;}
     break;
 
   case 1972:
-
-/* Line 1806 of yacc.c  */
 #line 11429 "preproc.y"
     { 
  (yyval.str) = mm_strdup("indexes");
-}
+;}
     break;
 
   case 1973:
-
-/* Line 1806 of yacc.c  */
 #line 11433 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inherit");
-}
+;}
     break;
 
   case 1974:
-
-/* Line 1806 of yacc.c  */
 #line 11437 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inherits");
-}
+;}
     break;
 
   case 1975:
-
-/* Line 1806 of yacc.c  */
 #line 11441 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inline");
-}
+;}
     break;
 
   case 1976:
-
-/* Line 1806 of yacc.c  */
 #line 11445 "preproc.y"
     { 
  (yyval.str) = mm_strdup("insensitive");
-}
+;}
     break;
 
   case 1977:
-
-/* Line 1806 of yacc.c  */
 #line 11449 "preproc.y"
     { 
  (yyval.str) = mm_strdup("insert");
-}
+;}
     break;
 
   case 1978:
-
-/* Line 1806 of yacc.c  */
 #line 11453 "preproc.y"
     { 
  (yyval.str) = mm_strdup("instead");
-}
+;}
     break;
 
   case 1979:
-
-/* Line 1806 of yacc.c  */
 #line 11457 "preproc.y"
     { 
  (yyval.str) = mm_strdup("invoker");
-}
+;}
     break;
 
   case 1980:
-
-/* Line 1806 of yacc.c  */
 #line 11461 "preproc.y"
     { 
  (yyval.str) = mm_strdup("isolation");
-}
+;}
     break;
 
   case 1981:
-
-/* Line 1806 of yacc.c  */
 #line 11465 "preproc.y"
     { 
  (yyval.str) = mm_strdup("key");
-}
+;}
     break;
 
   case 1982:
-
-/* Line 1806 of yacc.c  */
 #line 11469 "preproc.y"
     { 
  (yyval.str) = mm_strdup("label");
-}
+;}
     break;
 
   case 1983:
-
-/* Line 1806 of yacc.c  */
 #line 11473 "preproc.y"
     { 
  (yyval.str) = mm_strdup("language");
-}
+;}
     break;
 
   case 1984:
-
-/* Line 1806 of yacc.c  */
 #line 11477 "preproc.y"
     { 
  (yyval.str) = mm_strdup("large");
-}
+;}
     break;
 
   case 1985:
-
-/* Line 1806 of yacc.c  */
 #line 11481 "preproc.y"
     { 
  (yyval.str) = mm_strdup("last");
-}
+;}
     break;
 
   case 1986:
-
-/* Line 1806 of yacc.c  */
 #line 11485 "preproc.y"
     { 
  (yyval.str) = mm_strdup("lc_collate");
-}
+;}
     break;
 
   case 1987:
-
-/* Line 1806 of yacc.c  */
 #line 11489 "preproc.y"
     { 
  (yyval.str) = mm_strdup("lc_ctype");
-}
+;}
     break;
 
   case 1988:
-
-/* Line 1806 of yacc.c  */
 #line 11493 "preproc.y"
     { 
  (yyval.str) = mm_strdup("leakproof");
-}
+;}
     break;
 
   case 1989:
-
-/* Line 1806 of yacc.c  */
 #line 11497 "preproc.y"
     { 
  (yyval.str) = mm_strdup("level");
-}
+;}
     break;
 
   case 1990:
-
-/* Line 1806 of yacc.c  */
 #line 11501 "preproc.y"
     { 
  (yyval.str) = mm_strdup("listen");
-}
+;}
     break;
 
   case 1991:
-
-/* Line 1806 of yacc.c  */
 #line 11505 "preproc.y"
     { 
  (yyval.str) = mm_strdup("load");
-}
+;}
     break;
 
   case 1992:
-
-/* Line 1806 of yacc.c  */
 #line 11509 "preproc.y"
     { 
  (yyval.str) = mm_strdup("local");
-}
+;}
     break;
 
   case 1993:
-
-/* Line 1806 of yacc.c  */
 #line 11513 "preproc.y"
     { 
  (yyval.str) = mm_strdup("location");
-}
+;}
     break;
 
   case 1994:
-
-/* Line 1806 of yacc.c  */
 #line 11517 "preproc.y"
     { 
  (yyval.str) = mm_strdup("lock");
-}
+;}
     break;
 
   case 1995:
-
-/* Line 1806 of yacc.c  */
 #line 11521 "preproc.y"
     { 
  (yyval.str) = mm_strdup("mapping");
-}
+;}
     break;
 
   case 1996:
-
-/* Line 1806 of yacc.c  */
 #line 11525 "preproc.y"
     { 
  (yyval.str) = mm_strdup("match");
-}
+;}
     break;
 
   case 1997:
-
-/* Line 1806 of yacc.c  */
 #line 11529 "preproc.y"
     { 
  (yyval.str) = mm_strdup("maxvalue");
-}
+;}
     break;
 
   case 1998:
-
-/* Line 1806 of yacc.c  */
 #line 11533 "preproc.y"
     { 
  (yyval.str) = mm_strdup("minvalue");
-}
+;}
     break;
 
   case 1999:
-
-/* Line 1806 of yacc.c  */
 #line 11537 "preproc.y"
     { 
  (yyval.str) = mm_strdup("mode");
-}
+;}
     break;
 
   case 2000:
-
-/* Line 1806 of yacc.c  */
 #line 11541 "preproc.y"
     { 
  (yyval.str) = mm_strdup("move");
-}
+;}
     break;
 
   case 2001:
-
-/* Line 1806 of yacc.c  */
 #line 11545 "preproc.y"
     { 
  (yyval.str) = mm_strdup("name");
-}
+;}
     break;
 
   case 2002:
-
-/* Line 1806 of yacc.c  */
 #line 11549 "preproc.y"
     { 
  (yyval.str) = mm_strdup("names");
-}
+;}
     break;
 
   case 2003:
-
-/* Line 1806 of yacc.c  */
 #line 11553 "preproc.y"
     { 
  (yyval.str) = mm_strdup("next");
-}
+;}
     break;
 
   case 2004:
-
-/* Line 1806 of yacc.c  */
 #line 11557 "preproc.y"
     { 
  (yyval.str) = mm_strdup("no");
-}
+;}
     break;
 
   case 2005:
-
-/* Line 1806 of yacc.c  */
 #line 11561 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nothing");
-}
+;}
     break;
 
   case 2006:
-
-/* Line 1806 of yacc.c  */
 #line 11565 "preproc.y"
     { 
  (yyval.str) = mm_strdup("notify");
-}
+;}
     break;
 
   case 2007:
-
-/* Line 1806 of yacc.c  */
 #line 11569 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nowait");
-}
+;}
     break;
 
   case 2008:
-
-/* Line 1806 of yacc.c  */
 #line 11573 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nulls");
-}
+;}
     break;
 
   case 2009:
-
-/* Line 1806 of yacc.c  */
 #line 11577 "preproc.y"
     { 
  (yyval.str) = mm_strdup("object");
-}
+;}
     break;
 
   case 2010:
-
-/* Line 1806 of yacc.c  */
 #line 11581 "preproc.y"
     { 
  (yyval.str) = mm_strdup("of");
-}
+;}
     break;
 
   case 2011:
-
-/* Line 1806 of yacc.c  */
 #line 11585 "preproc.y"
     { 
  (yyval.str) = mm_strdup("off");
-}
+;}
     break;
 
   case 2012:
-
-/* Line 1806 of yacc.c  */
 #line 11589 "preproc.y"
     { 
  (yyval.str) = mm_strdup("oids");
-}
+;}
     break;
 
   case 2013:
-
-/* Line 1806 of yacc.c  */
 #line 11593 "preproc.y"
     { 
  (yyval.str) = mm_strdup("operator");
-}
+;}
     break;
 
   case 2014:
-
-/* Line 1806 of yacc.c  */
 #line 11597 "preproc.y"
     { 
  (yyval.str) = mm_strdup("option");
-}
+;}
     break;
 
   case 2015:
-
-/* Line 1806 of yacc.c  */
 #line 11601 "preproc.y"
     { 
  (yyval.str) = mm_strdup("options");
-}
+;}
     break;
 
   case 2016:
-
-/* Line 1806 of yacc.c  */
 #line 11605 "preproc.y"
     { 
  (yyval.str) = mm_strdup("owned");
-}
+;}
     break;
 
   case 2017:
-
-/* Line 1806 of yacc.c  */
 #line 11609 "preproc.y"
     { 
  (yyval.str) = mm_strdup("owner");
-}
+;}
     break;
 
   case 2018:
-
-/* Line 1806 of yacc.c  */
 #line 11613 "preproc.y"
     { 
  (yyval.str) = mm_strdup("parser");
-}
+;}
     break;
 
   case 2019:
-
-/* Line 1806 of yacc.c  */
 #line 11617 "preproc.y"
     { 
  (yyval.str) = mm_strdup("partial");
-}
+;}
     break;
 
   case 2020:
-
-/* Line 1806 of yacc.c  */
 #line 11621 "preproc.y"
     { 
  (yyval.str) = mm_strdup("partition");
-}
+;}
     break;
 
   case 2021:
-
-/* Line 1806 of yacc.c  */
 #line 11625 "preproc.y"
     { 
  (yyval.str) = mm_strdup("passing");
-}
+;}
     break;
 
   case 2022:
-
-/* Line 1806 of yacc.c  */
 #line 11629 "preproc.y"
     { 
  (yyval.str) = mm_strdup("password");
-}
+;}
     break;
 
   case 2023:
-
-/* Line 1806 of yacc.c  */
 #line 11633 "preproc.y"
     { 
  (yyval.str) = mm_strdup("plans");
-}
+;}
     break;
 
   case 2024:
-
-/* Line 1806 of yacc.c  */
 #line 11637 "preproc.y"
     { 
  (yyval.str) = mm_strdup("preceding");
-}
+;}
     break;
 
   case 2025:
-
-/* Line 1806 of yacc.c  */
 #line 11641 "preproc.y"
     { 
  (yyval.str) = mm_strdup("prepare");
-}
+;}
     break;
 
   case 2026:
-
-/* Line 1806 of yacc.c  */
 #line 11645 "preproc.y"
     { 
  (yyval.str) = mm_strdup("prepared");
-}
+;}
     break;
 
   case 2027:
-
-/* Line 1806 of yacc.c  */
 #line 11649 "preproc.y"
     { 
  (yyval.str) = mm_strdup("preserve");
-}
+;}
     break;
 
   case 2028:
-
-/* Line 1806 of yacc.c  */
 #line 11653 "preproc.y"
     { 
  (yyval.str) = mm_strdup("prior");
-}
+;}
     break;
 
   case 2029:
-
-/* Line 1806 of yacc.c  */
 #line 11657 "preproc.y"
     { 
  (yyval.str) = mm_strdup("privileges");
-}
+;}
     break;
 
   case 2030:
-
-/* Line 1806 of yacc.c  */
 #line 11661 "preproc.y"
     { 
  (yyval.str) = mm_strdup("procedural");
-}
+;}
     break;
 
   case 2031:
-
-/* Line 1806 of yacc.c  */
 #line 11665 "preproc.y"
     { 
  (yyval.str) = mm_strdup("procedure");
-}
+;}
     break;
 
   case 2032:
-
-/* Line 1806 of yacc.c  */
 #line 11669 "preproc.y"
     { 
  (yyval.str) = mm_strdup("quote");
-}
+;}
     break;
 
   case 2033:
-
-/* Line 1806 of yacc.c  */
 #line 11673 "preproc.y"
     { 
  (yyval.str) = mm_strdup("range");
-}
+;}
     break;
 
   case 2034:
-
-/* Line 1806 of yacc.c  */
 #line 11677 "preproc.y"
     { 
  (yyval.str) = mm_strdup("read");
-}
+;}
     break;
 
   case 2035:
-
-/* Line 1806 of yacc.c  */
 #line 11681 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reassign");
-}
+;}
     break;
 
   case 2036:
-
-/* Line 1806 of yacc.c  */
 #line 11685 "preproc.y"
     { 
  (yyval.str) = mm_strdup("recheck");
-}
+;}
     break;
 
   case 2037:
-
-/* Line 1806 of yacc.c  */
 #line 11689 "preproc.y"
     { 
  (yyval.str) = mm_strdup("recursive");
-}
+;}
     break;
 
   case 2038:
-
-/* Line 1806 of yacc.c  */
 #line 11693 "preproc.y"
     { 
  (yyval.str) = mm_strdup("ref");
-}
+;}
     break;
 
   case 2039:
-
-/* Line 1806 of yacc.c  */
 #line 11697 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reindex");
-}
+;}
     break;
 
   case 2040:
-
-/* Line 1806 of yacc.c  */
 #line 11701 "preproc.y"
     { 
  (yyval.str) = mm_strdup("relative");
-}
+;}
     break;
 
   case 2041:
-
-/* Line 1806 of yacc.c  */
 #line 11705 "preproc.y"
     { 
  (yyval.str) = mm_strdup("release");
-}
+;}
     break;
 
   case 2042:
-
-/* Line 1806 of yacc.c  */
 #line 11709 "preproc.y"
     { 
  (yyval.str) = mm_strdup("rename");
-}
+;}
     break;
 
   case 2043:
-
-/* Line 1806 of yacc.c  */
 #line 11713 "preproc.y"
     { 
  (yyval.str) = mm_strdup("repeatable");
-}
+;}
     break;
 
   case 2044:
-
-/* Line 1806 of yacc.c  */
 #line 11717 "preproc.y"
     { 
  (yyval.str) = mm_strdup("replace");
-}
+;}
     break;
 
   case 2045:
-
-/* Line 1806 of yacc.c  */
 #line 11721 "preproc.y"
     { 
  (yyval.str) = mm_strdup("replica");
-}
+;}
     break;
 
   case 2046:
-
-/* Line 1806 of yacc.c  */
 #line 11725 "preproc.y"
     { 
  (yyval.str) = mm_strdup("reset");
-}
+;}
     break;
 
   case 2047:
-
-/* Line 1806 of yacc.c  */
 #line 11729 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restart");
-}
+;}
     break;
 
   case 2048:
-
-/* Line 1806 of yacc.c  */
 #line 11733 "preproc.y"
     { 
  (yyval.str) = mm_strdup("restrict");
-}
+;}
     break;
 
   case 2049:
-
-/* Line 1806 of yacc.c  */
 #line 11737 "preproc.y"
     { 
  (yyval.str) = mm_strdup("returns");
-}
+;}
     break;
 
   case 2050:
-
-/* Line 1806 of yacc.c  */
 #line 11741 "preproc.y"
     { 
  (yyval.str) = mm_strdup("revoke");
-}
+;}
     break;
 
   case 2051:
-
-/* Line 1806 of yacc.c  */
 #line 11745 "preproc.y"
     { 
  (yyval.str) = mm_strdup("role");
-}
+;}
     break;
 
   case 2052:
-
-/* Line 1806 of yacc.c  */
 #line 11749 "preproc.y"
     { 
  (yyval.str) = mm_strdup("rollback");
-}
+;}
     break;
 
   case 2053:
-
-/* Line 1806 of yacc.c  */
 #line 11753 "preproc.y"
     { 
  (yyval.str) = mm_strdup("rows");
-}
+;}
     break;
 
   case 2054:
-
-/* Line 1806 of yacc.c  */
 #line 11757 "preproc.y"
     { 
  (yyval.str) = mm_strdup("rule");
-}
+;}
     break;
 
   case 2055:
-
-/* Line 1806 of yacc.c  */
 #line 11761 "preproc.y"
     { 
  (yyval.str) = mm_strdup("savepoint");
-}
+;}
     break;
 
   case 2056:
-
-/* Line 1806 of yacc.c  */
 #line 11765 "preproc.y"
     { 
  (yyval.str) = mm_strdup("schema");
-}
+;}
     break;
 
   case 2057:
-
-/* Line 1806 of yacc.c  */
 #line 11769 "preproc.y"
     { 
  (yyval.str) = mm_strdup("scroll");
-}
+;}
     break;
 
   case 2058:
-
-/* Line 1806 of yacc.c  */
 #line 11773 "preproc.y"
     { 
  (yyval.str) = mm_strdup("search");
-}
+;}
     break;
 
   case 2059:
-
-/* Line 1806 of yacc.c  */
 #line 11777 "preproc.y"
     { 
  (yyval.str) = mm_strdup("security");
-}
+;}
     break;
 
   case 2060:
-
-/* Line 1806 of yacc.c  */
 #line 11781 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequence");
-}
+;}
     break;
 
   case 2061:
-
-/* Line 1806 of yacc.c  */
 #line 11785 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sequences");
-}
+;}
     break;
 
   case 2062:
-
-/* Line 1806 of yacc.c  */
 #line 11789 "preproc.y"
     { 
  (yyval.str) = mm_strdup("serializable");
-}
+;}
     break;
 
   case 2063:
-
-/* Line 1806 of yacc.c  */
 #line 11793 "preproc.y"
     { 
  (yyval.str) = mm_strdup("server");
-}
+;}
     break;
 
   case 2064:
-
-/* Line 1806 of yacc.c  */
 #line 11797 "preproc.y"
     { 
  (yyval.str) = mm_strdup("session");
-}
+;}
     break;
 
   case 2065:
-
-/* Line 1806 of yacc.c  */
 #line 11801 "preproc.y"
     { 
  (yyval.str) = mm_strdup("set");
-}
+;}
     break;
 
   case 2066:
-
-/* Line 1806 of yacc.c  */
 #line 11805 "preproc.y"
     { 
  (yyval.str) = mm_strdup("share");
-}
+;}
     break;
 
   case 2067:
-
-/* Line 1806 of yacc.c  */
 #line 11809 "preproc.y"
     { 
  (yyval.str) = mm_strdup("show");
-}
+;}
     break;
 
   case 2068:
-
-/* Line 1806 of yacc.c  */
 #line 11813 "preproc.y"
     { 
  (yyval.str) = mm_strdup("simple");
-}
+;}
     break;
 
   case 2069:
-
-/* Line 1806 of yacc.c  */
 #line 11817 "preproc.y"
     { 
  (yyval.str) = mm_strdup("snapshot");
-}
+;}
     break;
 
   case 2070:
-
-/* Line 1806 of yacc.c  */
 #line 11821 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stable");
-}
+;}
     break;
 
   case 2071:
-
-/* Line 1806 of yacc.c  */
 #line 11825 "preproc.y"
     { 
  (yyval.str) = mm_strdup("standalone");
-}
+;}
     break;
 
   case 2072:
-
-/* Line 1806 of yacc.c  */
 #line 11829 "preproc.y"
     { 
  (yyval.str) = mm_strdup("start");
-}
+;}
     break;
 
   case 2073:
-
-/* Line 1806 of yacc.c  */
 #line 11833 "preproc.y"
     { 
  (yyval.str) = mm_strdup("statement");
-}
+;}
     break;
 
   case 2074:
-
-/* Line 1806 of yacc.c  */
 #line 11837 "preproc.y"
     { 
  (yyval.str) = mm_strdup("statistics");
-}
+;}
     break;
 
   case 2075:
-
-/* Line 1806 of yacc.c  */
 #line 11841 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stdin");
-}
+;}
     break;
 
   case 2076:
-
-/* Line 1806 of yacc.c  */
 #line 11845 "preproc.y"
     { 
  (yyval.str) = mm_strdup("stdout");
-}
+;}
     break;
 
   case 2077:
-
-/* Line 1806 of yacc.c  */
 #line 11849 "preproc.y"
     { 
  (yyval.str) = mm_strdup("storage");
-}
+;}
     break;
 
   case 2078:
-
-/* Line 1806 of yacc.c  */
 #line 11853 "preproc.y"
     { 
  (yyval.str) = mm_strdup("strict");
-}
+;}
     break;
 
   case 2079:
-
-/* Line 1806 of yacc.c  */
 #line 11857 "preproc.y"
     { 
  (yyval.str) = mm_strdup("strip");
-}
+;}
     break;
 
   case 2080:
-
-/* Line 1806 of yacc.c  */
 #line 11861 "preproc.y"
     { 
  (yyval.str) = mm_strdup("sysid");
-}
+;}
     break;
 
   case 2081:
-
-/* Line 1806 of yacc.c  */
 #line 11865 "preproc.y"
     { 
  (yyval.str) = mm_strdup("system");
-}
+;}
     break;
 
   case 2082:
-
-/* Line 1806 of yacc.c  */
 #line 11869 "preproc.y"
     { 
  (yyval.str) = mm_strdup("tables");
-}
+;}
     break;
 
   case 2083:
-
-/* Line 1806 of yacc.c  */
 #line 11873 "preproc.y"
     { 
  (yyval.str) = mm_strdup("tablespace");
-}
+;}
     break;
 
   case 2084:
-
-/* Line 1806 of yacc.c  */
 #line 11877 "preproc.y"
     { 
  (yyval.str) = mm_strdup("temp");
-}
+;}
     break;
 
   case 2085:
-
-/* Line 1806 of yacc.c  */
 #line 11881 "preproc.y"
     { 
  (yyval.str) = mm_strdup("template");
-}
+;}
     break;
 
   case 2086:
-
-/* Line 1806 of yacc.c  */
 #line 11885 "preproc.y"
     { 
  (yyval.str) = mm_strdup("temporary");
-}
+;}
     break;
 
   case 2087:
-
-/* Line 1806 of yacc.c  */
 #line 11889 "preproc.y"
     { 
  (yyval.str) = mm_strdup("text");
-}
+;}
     break;
 
   case 2088:
-
-/* Line 1806 of yacc.c  */
 #line 11893 "preproc.y"
     { 
  (yyval.str) = mm_strdup("transaction");
-}
+;}
     break;
 
   case 2089:
-
-/* Line 1806 of yacc.c  */
 #line 11897 "preproc.y"
     { 
  (yyval.str) = mm_strdup("trigger");
-}
+;}
     break;
 
   case 2090:
-
-/* Line 1806 of yacc.c  */
 #line 11901 "preproc.y"
     { 
  (yyval.str) = mm_strdup("truncate");
-}
+;}
     break;
 
   case 2091:
-
-/* Line 1806 of yacc.c  */
 #line 11905 "preproc.y"
     { 
  (yyval.str) = mm_strdup("trusted");
-}
+;}
     break;
 
   case 2092:
-
-/* Line 1806 of yacc.c  */
 #line 11909 "preproc.y"
     { 
  (yyval.str) = mm_strdup("type");
-}
+;}
     break;
 
   case 2093:
-
-/* Line 1806 of yacc.c  */
 #line 11913 "preproc.y"
     { 
  (yyval.str) = mm_strdup("types");
-}
+;}
     break;
 
   case 2094:
-
-/* Line 1806 of yacc.c  */
 #line 11917 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unbounded");
-}
+;}
     break;
 
   case 2095:
-
-/* Line 1806 of yacc.c  */
 #line 11921 "preproc.y"
     { 
  (yyval.str) = mm_strdup("uncommitted");
-}
+;}
     break;
 
   case 2096:
-
-/* Line 1806 of yacc.c  */
 #line 11925 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unencrypted");
-}
+;}
     break;
 
   case 2097:
-
-/* Line 1806 of yacc.c  */
 #line 11929 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unknown");
-}
+;}
     break;
 
   case 2098:
-
-/* Line 1806 of yacc.c  */
 #line 11933 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unlisten");
-}
+;}
     break;
 
   case 2099:
-
-/* Line 1806 of yacc.c  */
 #line 11937 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unlogged");
-}
+;}
     break;
 
   case 2100:
-
-/* Line 1806 of yacc.c  */
 #line 11941 "preproc.y"
     { 
  (yyval.str) = mm_strdup("until");
-}
+;}
     break;
 
   case 2101:
-
-/* Line 1806 of yacc.c  */
 #line 11945 "preproc.y"
     { 
  (yyval.str) = mm_strdup("update");
-}
+;}
     break;
 
   case 2102:
-
-/* Line 1806 of yacc.c  */
 #line 11949 "preproc.y"
     { 
  (yyval.str) = mm_strdup("vacuum");
-}
+;}
     break;
 
   case 2103:
-
-/* Line 1806 of yacc.c  */
 #line 11953 "preproc.y"
     { 
  (yyval.str) = mm_strdup("valid");
-}
+;}
     break;
 
   case 2104:
-
-/* Line 1806 of yacc.c  */
 #line 11957 "preproc.y"
     { 
  (yyval.str) = mm_strdup("validate");
-}
+;}
     break;
 
   case 2105:
-
-/* Line 1806 of yacc.c  */
 #line 11961 "preproc.y"
     { 
  (yyval.str) = mm_strdup("validator");
-}
+;}
     break;
 
   case 2106:
-
-/* Line 1806 of yacc.c  */
 #line 11965 "preproc.y"
     { 
  (yyval.str) = mm_strdup("value");
-}
+;}
     break;
 
   case 2107:
-
-/* Line 1806 of yacc.c  */
 #line 11969 "preproc.y"
     { 
  (yyval.str) = mm_strdup("varying");
-}
+;}
     break;
 
   case 2108:
-
-/* Line 1806 of yacc.c  */
 #line 11973 "preproc.y"
     { 
  (yyval.str) = mm_strdup("version");
-}
+;}
     break;
 
   case 2109:
-
-/* Line 1806 of yacc.c  */
 #line 11977 "preproc.y"
     { 
  (yyval.str) = mm_strdup("view");
-}
+;}
     break;
 
   case 2110:
-
-/* Line 1806 of yacc.c  */
 #line 11981 "preproc.y"
     { 
  (yyval.str) = mm_strdup("volatile");
-}
+;}
     break;
 
   case 2111:
-
-/* Line 1806 of yacc.c  */
 #line 11985 "preproc.y"
     { 
  (yyval.str) = mm_strdup("whitespace");
-}
+;}
     break;
 
   case 2112:
-
-/* Line 1806 of yacc.c  */
 #line 11989 "preproc.y"
     { 
  (yyval.str) = mm_strdup("without");
-}
+;}
     break;
 
   case 2113:
-
-/* Line 1806 of yacc.c  */
 #line 11993 "preproc.y"
     { 
  (yyval.str) = mm_strdup("work");
-}
+;}
     break;
 
   case 2114:
-
-/* Line 1806 of yacc.c  */
 #line 11997 "preproc.y"
     { 
  (yyval.str) = mm_strdup("wrapper");
-}
+;}
     break;
 
   case 2115:
-
-/* Line 1806 of yacc.c  */
 #line 12001 "preproc.y"
     { 
  (yyval.str) = mm_strdup("write");
-}
+;}
     break;
 
   case 2116:
-
-/* Line 1806 of yacc.c  */
 #line 12005 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xml");
-}
+;}
     break;
 
   case 2117:
-
-/* Line 1806 of yacc.c  */
 #line 12009 "preproc.y"
     { 
  (yyval.str) = mm_strdup("yes");
-}
+;}
     break;
 
   case 2118:
-
-/* Line 1806 of yacc.c  */
 #line 12013 "preproc.y"
     { 
  (yyval.str) = mm_strdup("zone");
-}
+;}
     break;
 
   case 2119:
-
-/* Line 1806 of yacc.c  */
 #line 12021 "preproc.y"
     { 
  (yyval.str) = mm_strdup("between");
-}
+;}
     break;
 
   case 2120:
-
-/* Line 1806 of yacc.c  */
 #line 12025 "preproc.y"
     { 
  (yyval.str) = mm_strdup("bigint");
-}
+;}
     break;
 
   case 2121:
-
-/* Line 1806 of yacc.c  */
 #line 12029 "preproc.y"
     { 
  (yyval.str) = mm_strdup("bit");
-}
+;}
     break;
 
   case 2122:
-
-/* Line 1806 of yacc.c  */
 #line 12033 "preproc.y"
     { 
  (yyval.str) = mm_strdup("boolean");
-}
+;}
     break;
 
   case 2123:
-
-/* Line 1806 of yacc.c  */
 #line 12037 "preproc.y"
     { 
  (yyval.str) = mm_strdup("character");
-}
+;}
     break;
 
   case 2124:
-
-/* Line 1806 of yacc.c  */
 #line 12041 "preproc.y"
     { 
  (yyval.str) = mm_strdup("coalesce");
-}
+;}
     break;
 
   case 2125:
-
-/* Line 1806 of yacc.c  */
 #line 12045 "preproc.y"
     { 
  (yyval.str) = mm_strdup("dec");
-}
+;}
     break;
 
   case 2126:
-
-/* Line 1806 of yacc.c  */
 #line 12049 "preproc.y"
     { 
  (yyval.str) = mm_strdup("decimal");
-}
+;}
     break;
 
   case 2127:
-
-/* Line 1806 of yacc.c  */
 #line 12053 "preproc.y"
     { 
  (yyval.str) = mm_strdup("exists");
-}
+;}
     break;
 
   case 2128:
-
-/* Line 1806 of yacc.c  */
 #line 12057 "preproc.y"
     { 
  (yyval.str) = mm_strdup("extract");
-}
+;}
     break;
 
   case 2129:
-
-/* Line 1806 of yacc.c  */
 #line 12061 "preproc.y"
     { 
  (yyval.str) = mm_strdup("float");
-}
+;}
     break;
 
   case 2130:
-
-/* Line 1806 of yacc.c  */
 #line 12065 "preproc.y"
     { 
  (yyval.str) = mm_strdup("greatest");
-}
+;}
     break;
 
   case 2131:
-
-/* Line 1806 of yacc.c  */
 #line 12069 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inout");
-}
+;}
     break;
 
   case 2132:
-
-/* Line 1806 of yacc.c  */
 #line 12073 "preproc.y"
     { 
  (yyval.str) = mm_strdup("integer");
-}
+;}
     break;
 
   case 2133:
-
-/* Line 1806 of yacc.c  */
 #line 12077 "preproc.y"
     { 
  (yyval.str) = mm_strdup("interval");
-}
+;}
     break;
 
   case 2134:
-
-/* Line 1806 of yacc.c  */
 #line 12081 "preproc.y"
     { 
  (yyval.str) = mm_strdup("least");
-}
+;}
     break;
 
   case 2135:
-
-/* Line 1806 of yacc.c  */
 #line 12085 "preproc.y"
     { 
  (yyval.str) = mm_strdup("national");
-}
+;}
     break;
 
   case 2136:
-
-/* Line 1806 of yacc.c  */
 #line 12089 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nchar");
-}
+;}
     break;
 
   case 2137:
-
-/* Line 1806 of yacc.c  */
 #line 12093 "preproc.y"
     { 
  (yyval.str) = mm_strdup("none");
-}
+;}
     break;
 
   case 2138:
-
-/* Line 1806 of yacc.c  */
 #line 12097 "preproc.y"
     { 
  (yyval.str) = mm_strdup("nullif");
-}
+;}
     break;
 
   case 2139:
-
-/* Line 1806 of yacc.c  */
 #line 12101 "preproc.y"
     { 
  (yyval.str) = mm_strdup("numeric");
-}
+;}
     break;
 
   case 2140:
-
-/* Line 1806 of yacc.c  */
 #line 12105 "preproc.y"
     { 
  (yyval.str) = mm_strdup("out");
-}
+;}
     break;
 
   case 2141:
-
-/* Line 1806 of yacc.c  */
 #line 12109 "preproc.y"
     { 
  (yyval.str) = mm_strdup("overlay");
-}
+;}
     break;
 
   case 2142:
-
-/* Line 1806 of yacc.c  */
 #line 12113 "preproc.y"
     { 
  (yyval.str) = mm_strdup("position");
-}
+;}
     break;
 
   case 2143:
-
-/* Line 1806 of yacc.c  */
 #line 12117 "preproc.y"
     { 
  (yyval.str) = mm_strdup("precision");
-}
+;}
     break;
 
   case 2144:
-
-/* Line 1806 of yacc.c  */
 #line 12121 "preproc.y"
     { 
  (yyval.str) = mm_strdup("real");
-}
+;}
     break;
 
   case 2145:
-
-/* Line 1806 of yacc.c  */
 #line 12125 "preproc.y"
     { 
  (yyval.str) = mm_strdup("row");
-}
+;}
     break;
 
   case 2146:
-
-/* Line 1806 of yacc.c  */
 #line 12129 "preproc.y"
     { 
  (yyval.str) = mm_strdup("setof");
-}
+;}
     break;
 
   case 2147:
-
-/* Line 1806 of yacc.c  */
 #line 12133 "preproc.y"
     { 
  (yyval.str) = mm_strdup("smallint");
-}
+;}
     break;
 
   case 2148:
-
-/* Line 1806 of yacc.c  */
 #line 12137 "preproc.y"
     { 
  (yyval.str) = mm_strdup("substring");
-}
+;}
     break;
 
   case 2149:
-
-/* Line 1806 of yacc.c  */
 #line 12141 "preproc.y"
     { 
  (yyval.str) = mm_strdup("time");
-}
+;}
     break;
 
   case 2150:
-
-/* Line 1806 of yacc.c  */
 #line 12145 "preproc.y"
     { 
  (yyval.str) = mm_strdup("timestamp");
-}
+;}
     break;
 
   case 2151:
-
-/* Line 1806 of yacc.c  */
 #line 12149 "preproc.y"
     { 
  (yyval.str) = mm_strdup("treat");
-}
+;}
     break;
 
   case 2152:
-
-/* Line 1806 of yacc.c  */
 #line 12153 "preproc.y"
     { 
  (yyval.str) = mm_strdup("trim");
-}
+;}
     break;
 
   case 2153:
-
-/* Line 1806 of yacc.c  */
 #line 12157 "preproc.y"
     { 
  (yyval.str) = mm_strdup("varchar");
-}
+;}
     break;
 
   case 2154:
-
-/* Line 1806 of yacc.c  */
 #line 12161 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlattributes");
-}
+;}
     break;
 
   case 2155:
-
-/* Line 1806 of yacc.c  */
 #line 12165 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlconcat");
-}
+;}
     break;
 
   case 2156:
-
-/* Line 1806 of yacc.c  */
 #line 12169 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlelement");
-}
+;}
     break;
 
   case 2157:
-
-/* Line 1806 of yacc.c  */
 #line 12173 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlexists");
-}
+;}
     break;
 
   case 2158:
-
-/* Line 1806 of yacc.c  */
 #line 12177 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlforest");
-}
+;}
     break;
 
   case 2159:
-
-/* Line 1806 of yacc.c  */
 #line 12181 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlparse");
-}
+;}
     break;
 
   case 2160:
-
-/* Line 1806 of yacc.c  */
 #line 12185 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlpi");
-}
+;}
     break;
 
   case 2161:
-
-/* Line 1806 of yacc.c  */
 #line 12189 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlroot");
-}
+;}
     break;
 
   case 2162:
-
-/* Line 1806 of yacc.c  */
 #line 12193 "preproc.y"
     { 
  (yyval.str) = mm_strdup("xmlserialize");
-}
+;}
     break;
 
   case 2163:
-
-/* Line 1806 of yacc.c  */
 #line 12201 "preproc.y"
     { 
  (yyval.str) = mm_strdup("authorization");
-}
+;}
     break;
 
   case 2164:
-
-/* Line 1806 of yacc.c  */
 #line 12205 "preproc.y"
     { 
  (yyval.str) = mm_strdup("binary");
-}
+;}
     break;
 
   case 2165:
-
-/* Line 1806 of yacc.c  */
 #line 12209 "preproc.y"
     { 
  (yyval.str) = mm_strdup("collation");
-}
+;}
     break;
 
   case 2166:
-
-/* Line 1806 of yacc.c  */
 #line 12213 "preproc.y"
     { 
  (yyval.str) = mm_strdup("concurrently");
-}
+;}
     break;
 
   case 2167:
-
-/* Line 1806 of yacc.c  */
 #line 12217 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cross");
-}
+;}
     break;
 
   case 2168:
-
-/* Line 1806 of yacc.c  */
 #line 12221 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_schema");
-}
+;}
     break;
 
   case 2169:
-
-/* Line 1806 of yacc.c  */
 #line 12225 "preproc.y"
     { 
  (yyval.str) = mm_strdup("freeze");
-}
+;}
     break;
 
   case 2170:
-
-/* Line 1806 of yacc.c  */
 #line 12229 "preproc.y"
     { 
  (yyval.str) = mm_strdup("full");
-}
+;}
     break;
 
   case 2171:
-
-/* Line 1806 of yacc.c  */
 #line 12233 "preproc.y"
     { 
  (yyval.str) = mm_strdup("ilike");
-}
+;}
     break;
 
   case 2172:
-
-/* Line 1806 of yacc.c  */
 #line 12237 "preproc.y"
     { 
  (yyval.str) = mm_strdup("inner");
-}
+;}
     break;
 
   case 2173:
-
-/* Line 1806 of yacc.c  */
 #line 12241 "preproc.y"
     { 
  (yyval.str) = mm_strdup("is");
-}
+;}
     break;
 
   case 2174:
-
-/* Line 1806 of yacc.c  */
 #line 12245 "preproc.y"
     { 
  (yyval.str) = mm_strdup("isnull");
-}
+;}
     break;
 
   case 2175:
-
-/* Line 1806 of yacc.c  */
 #line 12249 "preproc.y"
     { 
  (yyval.str) = mm_strdup("join");
-}
+;}
     break;
 
   case 2176:
-
-/* Line 1806 of yacc.c  */
 #line 12253 "preproc.y"
     { 
  (yyval.str) = mm_strdup("left");
-}
+;}
     break;
 
   case 2177:
-
-/* Line 1806 of yacc.c  */
 #line 12257 "preproc.y"
     { 
  (yyval.str) = mm_strdup("like");
-}
+;}
     break;
 
   case 2178:
-
-/* Line 1806 of yacc.c  */
 #line 12261 "preproc.y"
     { 
  (yyval.str) = mm_strdup("natural");
-}
+;}
     break;
 
   case 2179:
-
-/* Line 1806 of yacc.c  */
 #line 12265 "preproc.y"
     { 
  (yyval.str) = mm_strdup("notnull");
-}
+;}
     break;
 
   case 2180:
-
-/* Line 1806 of yacc.c  */
 #line 12269 "preproc.y"
     { 
  (yyval.str) = mm_strdup("outer");
-}
+;}
     break;
 
   case 2181:
-
-/* Line 1806 of yacc.c  */
 #line 12273 "preproc.y"
     { 
  (yyval.str) = mm_strdup("over");
-}
+;}
     break;
 
   case 2182:
-
-/* Line 1806 of yacc.c  */
 #line 12277 "preproc.y"
     { 
  (yyval.str) = mm_strdup("overlaps");
-}
+;}
     break;
 
   case 2183:
-
-/* Line 1806 of yacc.c  */
 #line 12281 "preproc.y"
     { 
  (yyval.str) = mm_strdup("right");
-}
+;}
     break;
 
   case 2184:
-
-/* Line 1806 of yacc.c  */
 #line 12285 "preproc.y"
     { 
  (yyval.str) = mm_strdup("similar");
-}
+;}
     break;
 
   case 2185:
-
-/* Line 1806 of yacc.c  */
 #line 12289 "preproc.y"
     { 
  (yyval.str) = mm_strdup("verbose");
-}
+;}
     break;
 
   case 2186:
-
-/* Line 1806 of yacc.c  */
 #line 12297 "preproc.y"
     { 
  (yyval.str) = mm_strdup("all");
-}
+;}
     break;
 
   case 2187:
-
-/* Line 1806 of yacc.c  */
 #line 12301 "preproc.y"
     { 
  (yyval.str) = mm_strdup("analyse");
-}
+;}
     break;
 
   case 2188:
-
-/* Line 1806 of yacc.c  */
 #line 12305 "preproc.y"
     { 
  (yyval.str) = mm_strdup("analyze");
-}
+;}
     break;
 
   case 2189:
-
-/* Line 1806 of yacc.c  */
 #line 12309 "preproc.y"
     { 
  (yyval.str) = mm_strdup("and");
-}
+;}
     break;
 
   case 2190:
-
-/* Line 1806 of yacc.c  */
 #line 12313 "preproc.y"
     { 
  (yyval.str) = mm_strdup("any");
-}
+;}
     break;
 
   case 2191:
-
-/* Line 1806 of yacc.c  */
 #line 12317 "preproc.y"
     { 
  (yyval.str) = mm_strdup("array");
-}
+;}
     break;
 
   case 2192:
-
-/* Line 1806 of yacc.c  */
 #line 12321 "preproc.y"
     { 
  (yyval.str) = mm_strdup("as");
-}
+;}
     break;
 
   case 2193:
-
-/* Line 1806 of yacc.c  */
 #line 12325 "preproc.y"
     { 
  (yyval.str) = mm_strdup("asc");
-}
+;}
     break;
 
   case 2194:
-
-/* Line 1806 of yacc.c  */
 #line 12329 "preproc.y"
     { 
  (yyval.str) = mm_strdup("asymmetric");
-}
+;}
     break;
 
   case 2195:
-
-/* Line 1806 of yacc.c  */
 #line 12333 "preproc.y"
     { 
  (yyval.str) = mm_strdup("both");
-}
+;}
     break;
 
   case 2196:
-
-/* Line 1806 of yacc.c  */
 #line 12337 "preproc.y"
     { 
  (yyval.str) = mm_strdup("case");
-}
+;}
     break;
 
   case 2197:
-
-/* Line 1806 of yacc.c  */
 #line 12341 "preproc.y"
     { 
  (yyval.str) = mm_strdup("cast");
-}
+;}
     break;
 
   case 2198:
-
-/* Line 1806 of yacc.c  */
 #line 12345 "preproc.y"
     { 
  (yyval.str) = mm_strdup("check");
-}
+;}
     break;
 
   case 2199:
-
-/* Line 1806 of yacc.c  */
 #line 12349 "preproc.y"
     { 
  (yyval.str) = mm_strdup("collate");
-}
+;}
     break;
 
   case 2200:
-
-/* Line 1806 of yacc.c  */
 #line 12353 "preproc.y"
     { 
  (yyval.str) = mm_strdup("column");
-}
+;}
     break;
 
   case 2201:
-
-/* Line 1806 of yacc.c  */
 #line 12357 "preproc.y"
     { 
  (yyval.str) = mm_strdup("constraint");
-}
+;}
     break;
 
   case 2202:
-
-/* Line 1806 of yacc.c  */
 #line 12361 "preproc.y"
     { 
  (yyval.str) = mm_strdup("create");
-}
+;}
     break;
 
   case 2203:
-
-/* Line 1806 of yacc.c  */
 #line 12365 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_catalog");
-}
+;}
     break;
 
   case 2204:
-
-/* Line 1806 of yacc.c  */
 #line 12369 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_date");
-}
+;}
     break;
 
   case 2205:
-
-/* Line 1806 of yacc.c  */
 #line 12373 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_role");
-}
+;}
     break;
 
   case 2206:
-
-/* Line 1806 of yacc.c  */
 #line 12377 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_time");
-}
+;}
     break;
 
   case 2207:
-
-/* Line 1806 of yacc.c  */
 #line 12381 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_timestamp");
-}
+;}
     break;
 
   case 2208:
-
-/* Line 1806 of yacc.c  */
 #line 12385 "preproc.y"
     { 
  (yyval.str) = mm_strdup("current_user");
-}
+;}
     break;
 
   case 2209:
-
-/* Line 1806 of yacc.c  */
 #line 12389 "preproc.y"
     { 
  (yyval.str) = mm_strdup("default");
-}
+;}
     break;
 
   case 2210:
-
-/* Line 1806 of yacc.c  */
 #line 12393 "preproc.y"
     { 
  (yyval.str) = mm_strdup("deferrable");
-}
+;}
     break;
 
   case 2211:
-
-/* Line 1806 of yacc.c  */
 #line 12397 "preproc.y"
     { 
  (yyval.str) = mm_strdup("desc");
-}
+;}
     break;
 
   case 2212:
-
-/* Line 1806 of yacc.c  */
 #line 12401 "preproc.y"
     { 
  (yyval.str) = mm_strdup("distinct");
-}
+;}
     break;
 
   case 2213:
-
-/* Line 1806 of yacc.c  */
 #line 12405 "preproc.y"
     { 
  (yyval.str) = mm_strdup("do");
-}
+;}
     break;
 
   case 2214:
-
-/* Line 1806 of yacc.c  */
 #line 12409 "preproc.y"
     { 
  (yyval.str) = mm_strdup("else");
-}
+;}
     break;
 
   case 2215:
-
-/* Line 1806 of yacc.c  */
 #line 12413 "preproc.y"
     { 
  (yyval.str) = mm_strdup("end");
-}
+;}
     break;
 
   case 2216:
-
-/* Line 1806 of yacc.c  */
 #line 12417 "preproc.y"
     { 
  (yyval.str) = mm_strdup("except");
-}
+;}
     break;
 
   case 2217:
-
-/* Line 1806 of yacc.c  */
 #line 12421 "preproc.y"
     { 
  (yyval.str) = mm_strdup("false");
-}
+;}
     break;
 
   case 2218:
-
-/* Line 1806 of yacc.c  */
 #line 12425 "preproc.y"
     { 
  (yyval.str) = mm_strdup("fetch");
-}
+;}
     break;
 
   case 2219:
-
-/* Line 1806 of yacc.c  */
 #line 12429 "preproc.y"
     { 
  (yyval.str) = mm_strdup("for");
-}
+;}
     break;
 
   case 2220:
-
-/* Line 1806 of yacc.c  */
 #line 12433 "preproc.y"
     { 
  (yyval.str) = mm_strdup("foreign");
-}
+;}
     break;
 
   case 2221:
-
-/* Line 1806 of yacc.c  */
 #line 12437 "preproc.y"
     { 
  (yyval.str) = mm_strdup("from");
-}
+;}
     break;
 
   case 2222:
-
-/* Line 1806 of yacc.c  */
 #line 12441 "preproc.y"
     { 
  (yyval.str) = mm_strdup("grant");
-}
+;}
     break;
 
   case 2223:
-
-/* Line 1806 of yacc.c  */
 #line 12445 "preproc.y"
     { 
  (yyval.str) = mm_strdup("group");
-}
+;}
     break;
 
   case 2224:
-
-/* Line 1806 of yacc.c  */
 #line 12449 "preproc.y"
     { 
  (yyval.str) = mm_strdup("having");
-}
+;}
     break;
 
   case 2225:
-
-/* Line 1806 of yacc.c  */
 #line 12453 "preproc.y"
     { 
  (yyval.str) = mm_strdup("in");
-}
+;}
     break;
 
   case 2226:
-
-/* Line 1806 of yacc.c  */
 #line 12457 "preproc.y"
     { 
  (yyval.str) = mm_strdup("initially");
-}
+;}
     break;
 
   case 2227:
-
-/* Line 1806 of yacc.c  */
 #line 12461 "preproc.y"
     { 
  (yyval.str) = mm_strdup("intersect");
-}
+;}
     break;
 
   case 2228:
-
-/* Line 1806 of yacc.c  */
 #line 12465 "preproc.y"
     { 
  (yyval.str) = mm_strdup("into");
-}
+;}
     break;
 
   case 2229:
-
-/* Line 1806 of yacc.c  */
 #line 12469 "preproc.y"
     { 
  (yyval.str) = mm_strdup("leading");
-}
+;}
     break;
 
   case 2230:
-
-/* Line 1806 of yacc.c  */
 #line 12473 "preproc.y"
     { 
  (yyval.str) = mm_strdup("limit");
-}
+;}
     break;
 
   case 2231:
-
-/* Line 1806 of yacc.c  */
 #line 12477 "preproc.y"
     { 
  (yyval.str) = mm_strdup("localtime");
-}
+;}
     break;
 
   case 2232:
-
-/* Line 1806 of yacc.c  */
 #line 12481 "preproc.y"
     { 
  (yyval.str) = mm_strdup("localtimestamp");
-}
+;}
     break;
 
   case 2233:
-
-/* Line 1806 of yacc.c  */
 #line 12485 "preproc.y"
     { 
  (yyval.str) = mm_strdup("not");
-}
+;}
     break;
 
   case 2234:
-
-/* Line 1806 of yacc.c  */
 #line 12489 "preproc.y"
     { 
  (yyval.str) = mm_strdup("null");
-}
+;}
     break;
 
   case 2235:
-
-/* Line 1806 of yacc.c  */
 #line 12493 "preproc.y"
     { 
  (yyval.str) = mm_strdup("offset");
-}
+;}
     break;
 
   case 2236:
-
-/* Line 1806 of yacc.c  */
 #line 12497 "preproc.y"
     { 
  (yyval.str) = mm_strdup("on");
-}
+;}
     break;
 
   case 2237:
-
-/* Line 1806 of yacc.c  */
 #line 12501 "preproc.y"
     { 
  (yyval.str) = mm_strdup("only");
-}
+;}
     break;
 
   case 2238:
-
-/* Line 1806 of yacc.c  */
 #line 12505 "preproc.y"
     { 
  (yyval.str) = mm_strdup("or");
-}
+;}
     break;
 
   case 2239:
-
-/* Line 1806 of yacc.c  */
 #line 12509 "preproc.y"
     { 
  (yyval.str) = mm_strdup("order");
-}
+;}
     break;
 
   case 2240:
-
-/* Line 1806 of yacc.c  */
 #line 12513 "preproc.y"
     { 
  (yyval.str) = mm_strdup("placing");
-}
+;}
     break;
 
   case 2241:
-
-/* Line 1806 of yacc.c  */
 #line 12517 "preproc.y"
     { 
  (yyval.str) = mm_strdup("primary");
-}
+;}
     break;
 
   case 2242:
-
-/* Line 1806 of yacc.c  */
 #line 12521 "preproc.y"
     { 
  (yyval.str) = mm_strdup("references");
-}
+;}
     break;
 
   case 2243:
-
-/* Line 1806 of yacc.c  */
 #line 12525 "preproc.y"
     { 
  (yyval.str) = mm_strdup("returning");
-}
+;}
     break;
 
   case 2244:
-
-/* Line 1806 of yacc.c  */
 #line 12529 "preproc.y"
     { 
  (yyval.str) = mm_strdup("select");
-}
+;}
     break;
 
   case 2245:
-
-/* Line 1806 of yacc.c  */
 #line 12533 "preproc.y"
     { 
  (yyval.str) = mm_strdup("session_user");
-}
+;}
     break;
 
   case 2246:
-
-/* Line 1806 of yacc.c  */
 #line 12537 "preproc.y"
     { 
  (yyval.str) = mm_strdup("some");
-}
+;}
     break;
 
   case 2247:
-
-/* Line 1806 of yacc.c  */
 #line 12541 "preproc.y"
     { 
  (yyval.str) = mm_strdup("symmetric");
-}
+;}
     break;
 
   case 2248:
-
-/* Line 1806 of yacc.c  */
 #line 12545 "preproc.y"
     { 
  (yyval.str) = mm_strdup("table");
-}
+;}
     break;
 
   case 2249:
-
-/* Line 1806 of yacc.c  */
 #line 12549 "preproc.y"
     { 
  (yyval.str) = mm_strdup("then");
-}
+;}
     break;
 
   case 2250:
-
-/* Line 1806 of yacc.c  */
 #line 12553 "preproc.y"
     { 
  (yyval.str) = mm_strdup("trailing");
-}
+;}
     break;
 
   case 2251:
-
-/* Line 1806 of yacc.c  */
 #line 12557 "preproc.y"
     { 
  (yyval.str) = mm_strdup("true");
-}
+;}
     break;
 
   case 2252:
-
-/* Line 1806 of yacc.c  */
 #line 12561 "preproc.y"
     { 
  (yyval.str) = mm_strdup("unique");
-}
+;}
     break;
 
   case 2253:
-
-/* Line 1806 of yacc.c  */
 #line 12565 "preproc.y"
     { 
  (yyval.str) = mm_strdup("user");
-}
+;}
     break;
 
   case 2254:
-
-/* Line 1806 of yacc.c  */
 #line 12569 "preproc.y"
     { 
  (yyval.str) = mm_strdup("using");
-}
+;}
     break;
 
   case 2255:
-
-/* Line 1806 of yacc.c  */
 #line 12573 "preproc.y"
     { 
  (yyval.str) = mm_strdup("variadic");
-}
+;}
     break;
 
   case 2256:
-
-/* Line 1806 of yacc.c  */
 #line 12577 "preproc.y"
     { 
  (yyval.str) = mm_strdup("when");
-}
+;}
     break;
 
   case 2257:
-
-/* Line 1806 of yacc.c  */
 #line 12581 "preproc.y"
     { 
  (yyval.str) = mm_strdup("where");
-}
+;}
     break;
 
   case 2258:
-
-/* Line 1806 of yacc.c  */
 #line 12585 "preproc.y"
     { 
  (yyval.str) = mm_strdup("window");
-}
+;}
     break;
 
   case 2259:
-
-/* Line 1806 of yacc.c  */
 #line 12589 "preproc.y"
     { 
  (yyval.str) = mm_strdup("with");
-}
+;}
     break;
 
   case 2262:
-
-/* Line 1806 of yacc.c  */
 #line 12602 "preproc.y"
-    { connection = NULL; }
+    { connection = NULL; ;}
     break;
 
   case 2264:
-
-/* Line 1806 of yacc.c  */
 #line 12605 "preproc.y"
     {
 					fprintf(yyout, "%s", (yyvsp[(2) - (2)].str));
 					free((yyvsp[(2) - (2)].str));
 					output_line_number();
-				}
+				;}
     break;
 
   case 2266:
-
-/* Line 1806 of yacc.c  */
 #line 12611 "preproc.y"
-    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); }
+    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 2267:
-
-/* Line 1806 of yacc.c  */
 #line 12612 "preproc.y"
-    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); }
+    { fprintf(yyout, "%s", (yyvsp[(1) - (1)].str)); free((yyvsp[(1) - (1)].str)); ;}
     break;
 
   case 2268:
-
-/* Line 1806 of yacc.c  */
 #line 12613 "preproc.y"
-    { braces_open++; fputs("{", yyout); }
+    { braces_open++; fputs("{", yyout); ;}
     break;
 
   case 2269:
-
-/* Line 1806 of yacc.c  */
 #line 12615 "preproc.y"
     {
 			remove_typedefs(braces_open);
@@ -47817,31 +43717,25 @@
 				current_function = NULL;
 			}
 			fputs("}", yyout);
-		}
+		;}
     break;
 
   case 2270:
-
-/* Line 1806 of yacc.c  */
 #line 12627 "preproc.y"
-    {FoundInto = 0;}
+    {FoundInto = 0;;}
     break;
 
   case 2271:
-
-/* Line 1806 of yacc.c  */
 #line 12628 "preproc.y"
     {
 			if (FoundInto == 1)
 				mmerror(PARSE_ERROR, ET_ERROR, "CREATE TABLE AS cannot specify INTO");
 
 			(yyval.str) = cat_str(6, mm_strdup("create"), (yyvsp[(2) - (8)].str), mm_strdup("table"), (yyvsp[(4) - (8)].str), mm_strdup("as"), (yyvsp[(7) - (8)].str));
-		}
+		;}
     break;
 
   case 2272:
-
-/* Line 1806 of yacc.c  */
 #line 12637 "preproc.y"
     {
 			connection = (yyvsp[(2) - (2)].str);
@@ -47851,40 +43745,30 @@
 			 */
 			if (argsinsert != NULL)
 				argsinsert = NULL;
-		}
+		;}
     break;
 
   case 2273:
-
-/* Line 1806 of yacc.c  */
 #line 12652 "preproc.y"
-    { (yyval.str) = cat_str(5, (yyvsp[(3) - (5)].str), mm_strdup(","), (yyvsp[(5) - (5)].str), mm_strdup(","), (yyvsp[(4) - (5)].str)); }
+    { (yyval.str) = cat_str(5, (yyvsp[(3) - (5)].str), mm_strdup(","), (yyvsp[(5) - (5)].str), mm_strdup(","), (yyvsp[(4) - (5)].str)); ;}
     break;
 
   case 2274:
-
-/* Line 1806 of yacc.c  */
 #line 12654 "preproc.y"
-    { (yyval.str) = mm_strdup("NULL, NULL, NULL, \"DEFAULT\""); }
+    { (yyval.str) = mm_strdup("NULL, NULL, NULL, \"DEFAULT\""); ;}
     break;
 
   case 2275:
-
-/* Line 1806 of yacc.c  */
 #line 12657 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("NULL,"), (yyvsp[(2) - (2)].str), mm_strdup(", NULL")); }
+    { (yyval.str) = cat_str(3, mm_strdup("NULL,"), (yyvsp[(2) - (2)].str), mm_strdup(", NULL")); ;}
     break;
 
   case 2276:
-
-/* Line 1806 of yacc.c  */
 #line 12659 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(2) - (2)].str), mm_strdup(", NULL, NULL, NULL")); }
+    { (yyval.str) = cat2_str((yyvsp[(2) - (2)].str), mm_strdup(", NULL, NULL, NULL")); ;}
     break;
 
   case 2277:
-
-/* Line 1806 of yacc.c  */
 #line 12663 "preproc.y"
     {
 			/* old style: dbname[@server][:port] */
@@ -47896,12 +43780,10 @@
 				(yyval.str) = (yyvsp[(1) - (3)].str);
 			else
 				(yyval.str) = make3_str(mm_strdup("\""), make3_str((yyvsp[(1) - (3)].str), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str)), mm_strdup("\""));
-		}
+		;}
     break;
 
   case 2278:
-
-/* Line 1806 of yacc.c  */
 #line 12675 "preproc.y"
     {
 			/* new style: <tcp|unix>:postgresql://server[:port][/dbname] */
@@ -47917,21 +43799,17 @@
 				mmerror(PARSE_ERROR, ET_ERROR, "Unix-domain sockets only work on \"localhost\" but not on \"%s\"", (yyvsp[(3) - (7)].str) + strlen("//"));
 
 			(yyval.str) = make3_str(make3_str(mm_strdup("\""), (yyvsp[(1) - (7)].str), mm_strdup(":")), (yyvsp[(3) - (7)].str), make3_str(make3_str((yyvsp[(4) - (7)].str), mm_strdup("/"), (yyvsp[(6) - (7)].str)),	(yyvsp[(7) - (7)].str), mm_strdup("\"")));
-		}
+		;}
     break;
 
   case 2279:
-
-/* Line 1806 of yacc.c  */
 #line 12691 "preproc.y"
     {
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2280:
-
-/* Line 1806 of yacc.c  */
 #line 12695 "preproc.y"
     {
 			/* We can only process double quoted strings not single quotes ones,
@@ -47940,26 +43818,20 @@
 			(yyvsp[(1) - (1)].str)[0] = '\"';
 			(yyvsp[(1) - (1)].str)[strlen((yyvsp[(1) - (1)].str))-1] = '\"';
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2281:
-
-/* Line 1806 of yacc.c  */
 #line 12705 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2282:
-
-/* Line 1806 of yacc.c  */
 #line 12706 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2283:
-
-/* Line 1806 of yacc.c  */
 #line 12710 "preproc.y"
     {
 			if (strcmp((yyvsp[(2) - (2)].str), "postgresql") != 0 && strcmp((yyvsp[(2) - (2)].str), "postgres") != 0)
@@ -47969,153 +43841,115 @@
 				mmerror(PARSE_ERROR, ET_ERROR, "invalid connection type: %s", (yyvsp[(1) - (2)].str));
 
 			(yyval.str) = make3_str((yyvsp[(1) - (2)].str), mm_strdup(":"), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2284:
-
-/* Line 1806 of yacc.c  */
 #line 12722 "preproc.y"
     {
 			if (strcmp((yyvsp[(1) - (2)].str), "@") != 0 && strcmp((yyvsp[(1) - (2)].str), "//") != 0)
 				mmerror(PARSE_ERROR, ET_ERROR, "expected \"@\" or \"://\", found \"%s\"", (yyvsp[(1) - (2)].str));
 
 			(yyval.str) = make2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2285:
-
-/* Line 1806 of yacc.c  */
 #line 12730 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2286:
-
-/* Line 1806 of yacc.c  */
 #line 12731 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2287:
-
-/* Line 1806 of yacc.c  */
 #line 12734 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2288:
-
-/* Line 1806 of yacc.c  */
 #line 12735 "preproc.y"
-    { (yyval.str) = make3_str((yyvsp[(1) - (3)].str), mm_strdup("."), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = make3_str((yyvsp[(1) - (3)].str), mm_strdup("."), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2289:
-
-/* Line 1806 of yacc.c  */
 #line 12736 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2290:
-
-/* Line 1806 of yacc.c  */
 #line 12739 "preproc.y"
-    { (yyval.str) = make2_str(mm_strdup(":"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(mm_strdup(":"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2291:
-
-/* Line 1806 of yacc.c  */
 #line 12740 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2292:
-
-/* Line 1806 of yacc.c  */
 #line 12743 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2293:
-
-/* Line 1806 of yacc.c  */
 #line 12744 "preproc.y"
-    { (yyval.str) = mm_strdup("NULL"); }
+    { (yyval.str) = mm_strdup("NULL"); ;}
     break;
 
   case 2294:
-
-/* Line 1806 of yacc.c  */
 #line 12747 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2295:
-
-/* Line 1806 of yacc.c  */
 #line 12748 "preproc.y"
-    { (yyval.str) = mm_strdup("NULL, NULL"); }
+    { (yyval.str) = mm_strdup("NULL, NULL"); ;}
     break;
 
   case 2296:
-
-/* Line 1806 of yacc.c  */
 #line 12752 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (1)].str), mm_strdup(", NULL")); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (1)].str), mm_strdup(", NULL")); ;}
     break;
 
   case 2297:
-
-/* Line 1806 of yacc.c  */
 #line 12754 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2298:
-
-/* Line 1806 of yacc.c  */
 #line 12756 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (4)].str), mm_strdup(","), (yyvsp[(4) - (4)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (4)].str), mm_strdup(","), (yyvsp[(4) - (4)].str)); ;}
     break;
 
   case 2299:
-
-/* Line 1806 of yacc.c  */
 #line 12758 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2300:
-
-/* Line 1806 of yacc.c  */
 #line 12762 "preproc.y"
     {
 			if ((yyvsp[(1) - (1)].str)[0] == '\"')
 				(yyval.str) = (yyvsp[(1) - (1)].str);
 			else
 				(yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\""));
-		}
+		;}
     break;
 
   case 2301:
-
-/* Line 1806 of yacc.c  */
 #line 12769 "preproc.y"
     {
 			if ((yyvsp[(1) - (1)].str)[0] == '\"')
 				(yyval.str) = (yyvsp[(1) - (1)].str);
 			else
 				(yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\""));
-		}
+		;}
     break;
 
   case 2302:
-
-/* Line 1806 of yacc.c  */
 #line 12776 "preproc.y"
     {
 			enum ECPGttype type = argsinsert->variable->type->type;
@@ -48129,12 +43963,10 @@
 				(yyval.str) = make2_str(mm_strdup(argsinsert->variable->name), mm_strdup(".arr"));
 			else
 				(yyval.str) = mm_strdup(argsinsert->variable->name);
-		}
+		;}
     break;
 
   case 2303:
-
-/* Line 1806 of yacc.c  */
 #line 12792 "preproc.y"
     {
 			/* check if we have a string variable */
@@ -48166,12 +43998,10 @@
 						break;
 				}
 			}
-		}
+		;}
     break;
 
   case 2304:
-
-/* Line 1806 of yacc.c  */
 #line 12826 "preproc.y"
     {
 			if (strlen((yyvsp[(1) - (2)].str)) == 0)
@@ -48181,28 +44011,22 @@
 				mmerror(PARSE_ERROR, ET_ERROR, "unrecognized token \"%s\"", (yyvsp[(1) - (2)].str));
 
 			(yyval.str) = make2_str(mm_strdup("?"), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2305:
-
-/* Line 1806 of yacc.c  */
 #line 12835 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2306:
-
-/* Line 1806 of yacc.c  */
 #line 12839 "preproc.y"
     {
 				(yyval.str) = make2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str));
-			}
+			;}
     break;
 
   case 2307:
-
-/* Line 1806 of yacc.c  */
 #line 12843 "preproc.y"
     {
 				if (strlen((yyvsp[(3) - (4)].str)) == 0)
@@ -48212,40 +44036,30 @@
 					mmerror(PARSE_ERROR, ET_ERROR, "unrecognized token \"%s\"", (yyvsp[(3) - (4)].str));
 
 				(yyval.str) = cat_str(3, make2_str((yyvsp[(1) - (4)].str), (yyvsp[(2) - (4)].str)), (yyvsp[(3) - (4)].str), (yyvsp[(4) - (4)].str));
-			}
+			;}
     break;
 
   case 2308:
-
-/* Line 1806 of yacc.c  */
 #line 12855 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2309:
-
-/* Line 1806 of yacc.c  */
 #line 12857 "preproc.y"
-    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2310:
-
-/* Line 1806 of yacc.c  */
 #line 12859 "preproc.y"
-    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2311:
-
-/* Line 1806 of yacc.c  */
 #line 12861 "preproc.y"
-    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = make2_str(mm_strdup("="), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2312:
-
-/* Line 1806 of yacc.c  */
 #line 12865 "preproc.y"
     {
 			if ((yyvsp[(1) - (1)].str)[0] == '\"' && (yyvsp[(1) - (1)].str)[strlen((yyvsp[(1) - (1)].str))-1] == '\"') /* already quoted? */
@@ -48259,19 +44073,15 @@
 
 				(yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\""));
 			}
-		}
+		;}
     break;
 
   case 2313:
-
-/* Line 1806 of yacc.c  */
 #line 12878 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2314:
-
-/* Line 1806 of yacc.c  */
 #line 12886 "preproc.y"
     {
 			struct cursor *ptr, *this;
@@ -48330,192 +44140,142 @@
 					comment);
 			else
 				(yyval.str) = cat2_str(adjust_outofscope_cursor_vars(this), comment);
-		}
+		;}
     break;
 
   case 2315:
-
-/* Line 1806 of yacc.c  */
 #line 12947 "preproc.y"
     {
 			  /* execute immediate means prepare the statement and
 			   * immediately execute it */
 			  (yyval.str) = (yyvsp[(3) - (3)].str);
-			}
+			;}
     break;
 
   case 2317:
-
-/* Line 1806 of yacc.c  */
 #line 12957 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2318:
-
-/* Line 1806 of yacc.c  */
 #line 12958 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2319:
-
-/* Line 1806 of yacc.c  */
 #line 12961 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2320:
-
-/* Line 1806 of yacc.c  */
 #line 12963 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2321:
-
-/* Line 1806 of yacc.c  */
 #line 12964 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2322:
-
-/* Line 1806 of yacc.c  */
 #line 12967 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2323:
-
-/* Line 1806 of yacc.c  */
 #line 12968 "preproc.y"
-    { (yyval.str) = mm_strdup("year to minute"); }
+    { (yyval.str) = mm_strdup("year to minute"); ;}
     break;
 
   case 2324:
-
-/* Line 1806 of yacc.c  */
 #line 12969 "preproc.y"
-    { (yyval.str) = mm_strdup("year to second"); }
+    { (yyval.str) = mm_strdup("year to second"); ;}
     break;
 
   case 2325:
-
-/* Line 1806 of yacc.c  */
 #line 12970 "preproc.y"
-    { (yyval.str) = mm_strdup("day to day"); }
+    { (yyval.str) = mm_strdup("day to day"); ;}
     break;
 
   case 2326:
-
-/* Line 1806 of yacc.c  */
 #line 12971 "preproc.y"
-    { (yyval.str) = mm_strdup("month to month"); }
+    { (yyval.str) = mm_strdup("month to month"); ;}
     break;
 
   case 2327:
-
-/* Line 1806 of yacc.c  */
 #line 12978 "preproc.y"
-    { fputs("/* exec sql begin declare section */", yyout); }
+    { fputs("/* exec sql begin declare section */", yyout); ;}
     break;
 
   case 2328:
-
-/* Line 1806 of yacc.c  */
 #line 12980 "preproc.y"
     {
 			fprintf(yyout, "%s/* exec sql end declare section */", (yyvsp[(3) - (4)].str));
 			free((yyvsp[(3) - (4)].str));
 			output_line_number();
-		}
+		;}
     break;
 
   case 2329:
-
-/* Line 1806 of yacc.c  */
 #line 12987 "preproc.y"
-    {}
+    {;}
     break;
 
   case 2330:
-
-/* Line 1806 of yacc.c  */
 #line 12989 "preproc.y"
-    {}
+    {;}
     break;
 
   case 2331:
-
-/* Line 1806 of yacc.c  */
 #line 12991 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2332:
-
-/* Line 1806 of yacc.c  */
 #line 12992 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2333:
-
-/* Line 1806 of yacc.c  */
 #line 12995 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2334:
-
-/* Line 1806 of yacc.c  */
 #line 12996 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2335:
-
-/* Line 1806 of yacc.c  */
 #line 12997 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2336:
-
-/* Line 1806 of yacc.c  */
 #line 12998 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2337:
-
-/* Line 1806 of yacc.c  */
 #line 13001 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2338:
-
-/* Line 1806 of yacc.c  */
 #line 13002 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2339:
-
-/* Line 1806 of yacc.c  */
 #line 13006 "preproc.y"
     {
 		/* reset this variable so we see if there was */
 		/* an initializer specified */
 		initializer = 0;
-	}
+	;}
     break;
 
   case 2340:
-
-/* Line 1806 of yacc.c  */
 #line 13012 "preproc.y"
     {
 		add_typedef((yyvsp[(5) - (7)].str), (yyvsp[(6) - (7)].index).index1, (yyvsp[(6) - (7)].index).index2, (yyvsp[(3) - (7)].type).type_enum, (yyvsp[(3) - (7)].type).type_dimension, (yyvsp[(3) - (7)].type).type_index, initializer, *(yyvsp[(4) - (7)].str) ? 1 : 0);
@@ -48523,12 +44283,10 @@
 		fprintf(yyout, "typedef %s %s %s %s;\n", (yyvsp[(3) - (7)].type).type_str, *(yyvsp[(4) - (7)].str) ? "*" : "", (yyvsp[(5) - (7)].str), (yyvsp[(6) - (7)].index).str);
 		output_line_number();
 		(yyval.str) = mm_strdup("");
-	}
+	;}
     break;
 
   case 2341:
-
-/* Line 1806 of yacc.c  */
 #line 13022 "preproc.y"
     {
 			actual_type[struct_level].type_enum = (yyvsp[(2) - (2)].type).type_enum;
@@ -48538,21 +44296,17 @@
 			actual_type[struct_level].type_sizeof = (yyvsp[(2) - (2)].type).type_sizeof;
 
 			actual_startline[struct_level] = hashline_number();
-		}
+		;}
     break;
 
   case 2342:
-
-/* Line 1806 of yacc.c  */
 #line 13032 "preproc.y"
     {
 			(yyval.str) = cat_str(5, actual_startline[struct_level], (yyvsp[(1) - (5)].str), (yyvsp[(2) - (5)].type).type_str, (yyvsp[(4) - (5)].str), mm_strdup(";\n"));
-		}
+		;}
     break;
 
   case 2343:
-
-/* Line 1806 of yacc.c  */
 #line 13036 "preproc.y"
     {
 			actual_type[struct_level].type_enum = (yyvsp[(1) - (1)].type).type_enum;
@@ -48562,107 +44316,79 @@
 			actual_type[struct_level].type_sizeof = (yyvsp[(1) - (1)].type).type_sizeof;
 
 			actual_startline[struct_level] = hashline_number();
-		}
+		;}
     break;
 
   case 2344:
-
-/* Line 1806 of yacc.c  */
 #line 13046 "preproc.y"
     {
 			(yyval.str) = cat_str(4, actual_startline[struct_level], (yyvsp[(1) - (4)].type).type_str, (yyvsp[(3) - (4)].str), mm_strdup(";\n"));
-		}
+		;}
     break;
 
   case 2345:
-
-/* Line 1806 of yacc.c  */
 #line 13050 "preproc.y"
     {
 			(yyval.str) = cat2_str((yyvsp[(1) - (2)].str), mm_strdup(";"));
-		}
+		;}
     break;
 
   case 2346:
-
-/* Line 1806 of yacc.c  */
 #line 13055 "preproc.y"
-    { (yyval.str) =cat2_str(mm_strdup(":"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) =cat2_str(mm_strdup(":"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2347:
-
-/* Line 1806 of yacc.c  */
 #line 13056 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2348:
-
-/* Line 1806 of yacc.c  */
 #line 13060 "preproc.y"
-    {(yyval.str) = cat2_str ((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    {(yyval.str) = cat2_str ((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2349:
-
-/* Line 1806 of yacc.c  */
 #line 13061 "preproc.y"
-    {(yyval.str) = (yyvsp[(1) - (1)].str); }
+    {(yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2350:
-
-/* Line 1806 of yacc.c  */
 #line 13062 "preproc.y"
-    {(yyval.str) = (yyvsp[(1) - (1)].str); }
+    {(yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2351:
-
-/* Line 1806 of yacc.c  */
 #line 13065 "preproc.y"
-    { (yyval.str) = mm_strdup("extern"); }
+    { (yyval.str) = mm_strdup("extern"); ;}
     break;
 
   case 2352:
-
-/* Line 1806 of yacc.c  */
 #line 13066 "preproc.y"
-    { (yyval.str) = mm_strdup("static"); }
+    { (yyval.str) = mm_strdup("static"); ;}
     break;
 
   case 2353:
-
-/* Line 1806 of yacc.c  */
 #line 13067 "preproc.y"
-    { (yyval.str) = mm_strdup("register"); }
+    { (yyval.str) = mm_strdup("register"); ;}
     break;
 
   case 2354:
-
-/* Line 1806 of yacc.c  */
 #line 13068 "preproc.y"
-    { (yyval.str) = mm_strdup("auto"); }
+    { (yyval.str) = mm_strdup("auto"); ;}
     break;
 
   case 2355:
-
-/* Line 1806 of yacc.c  */
 #line 13071 "preproc.y"
-    { (yyval.str) = mm_strdup("const"); }
+    { (yyval.str) = mm_strdup("const"); ;}
     break;
 
   case 2356:
-
-/* Line 1806 of yacc.c  */
 #line 13072 "preproc.y"
-    { (yyval.str) = mm_strdup("volatile"); }
+    { (yyval.str) = mm_strdup("volatile"); ;}
     break;
 
   case 2357:
-
-/* Line 1806 of yacc.c  */
 #line 13076 "preproc.y"
     {
 			(yyval.type).type_enum = (yyvsp[(1) - (1)].type_enum);
@@ -48670,12 +44396,10 @@
 			(yyval.type).type_dimension = mm_strdup("-1");
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
-		}
+		;}
     break;
 
   case 2358:
-
-/* Line 1806 of yacc.c  */
 #line 13084 "preproc.y"
     {
 			(yyval.type).type_str = (yyvsp[(1) - (1)].str);
@@ -48692,12 +44416,10 @@
 				(yyval.type).type_enum = ECPGt_union;
 				(yyval.type).type_sizeof = NULL;
 			}
-		}
+		;}
     break;
 
   case 2359:
-
-/* Line 1806 of yacc.c  */
 #line 13101 "preproc.y"
     {
 			(yyval.type).type_str = (yyvsp[(1) - (1)].str);
@@ -48705,12 +44427,10 @@
 			(yyval.type).type_dimension = mm_strdup("-1");
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
-		}
+		;}
     break;
 
   case 2360:
-
-/* Line 1806 of yacc.c  */
 #line 13109 "preproc.y"
     {
 			if (strcmp((yyvsp[(1) - (5)].str), "numeric") == 0)
@@ -48733,12 +44453,10 @@
 			(yyval.type).type_dimension = mm_strdup("-1");
 			(yyval.type).type_index = mm_strdup("-1");
 			(yyval.type).type_sizeof = NULL;
-		}
+		;}
     break;
 
   case 2361:
-
-/* Line 1806 of yacc.c  */
 #line 13132 "preproc.y"
     {
 			if (strlen((yyvsp[(2) - (2)].str)) != 0 && strcmp ((yyvsp[(1) - (2)].str), "datetime") != 0 && strcmp ((yyvsp[(1) - (2)].str), "interval") != 0)
@@ -48844,12 +44562,10 @@
 
 				struct_member_list[struct_level] = ECPGstruct_member_dup(this->struct_member_list);
 			}
-		}
+		;}
     break;
 
   case 2362:
-
-/* Line 1806 of yacc.c  */
 #line 13238 "preproc.y"
     {
 			/* this is for named structs/unions */
@@ -48881,52 +44597,40 @@
 				(yyval.type).type_sizeof = mm_strdup("");
 				struct_member_list[struct_level] = NULL;
 			}
-		}
+		;}
     break;
 
   case 2363:
-
-/* Line 1806 of yacc.c  */
 #line 13272 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("enum"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, mm_strdup("enum"), (yyvsp[(2) - (3)].str), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2364:
-
-/* Line 1806 of yacc.c  */
 #line 13274 "preproc.y"
-    { (yyval.str) = cat2_str(mm_strdup("enum"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str(mm_strdup("enum"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2365:
-
-/* Line 1806 of yacc.c  */
 #line 13276 "preproc.y"
-    { (yyval.str) = cat2_str(mm_strdup("enum"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str(mm_strdup("enum"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2366:
-
-/* Line 1806 of yacc.c  */
 #line 13280 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("{"), (yyvsp[(2) - (3)].str), mm_strdup("}")); }
+    { (yyval.str) = cat_str(3, mm_strdup("{"), (yyvsp[(2) - (3)].str), mm_strdup("}")); ;}
     break;
 
   case 2367:
-
-/* Line 1806 of yacc.c  */
 #line 13283 "preproc.y"
     {
 			struct_member_list[struct_level++] = NULL;
 			if (struct_level >= STRUCT_DEPTH)
 				 mmerror(PARSE_ERROR, ET_ERROR, "too many levels in nested structure/union definition");
 			forward_name = mm_strdup((yyvsp[(1) - (1)].struct_union).symbol);
-		}
+		;}
     break;
 
   case 2368:
-
-/* Line 1806 of yacc.c  */
 #line 13290 "preproc.y"
     {
 			struct typedefs *ptr, *this;
@@ -48968,138 +44672,106 @@
 
 			types = this;
 			(yyval.str) = cat_str(4, su_type.type_str, mm_strdup("{"), (yyvsp[(4) - (5)].str), mm_strdup("}"));
-		}
+		;}
     break;
 
   case 2369:
-
-/* Line 1806 of yacc.c  */
 #line 13333 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2370:
-
-/* Line 1806 of yacc.c  */
 #line 13335 "preproc.y"
     {
 			struct_member_list[struct_level++] = NULL;
 			if (struct_level >= STRUCT_DEPTH)
 				 mmerror(PARSE_ERROR, ET_ERROR, "too many levels in nested structure/union definition");
-		}
+		;}
     break;
 
   case 2371:
-
-/* Line 1806 of yacc.c  */
 #line 13341 "preproc.y"
     {
 			ECPGfree_struct_member(struct_member_list[struct_level]);
 			struct_member_list[struct_level] = NULL;
 			struct_level--;
 			(yyval.str) = cat_str(4, (yyvsp[(1) - (5)].str), mm_strdup("{"), (yyvsp[(4) - (5)].str), mm_strdup("}"));
-		}
+		;}
     break;
 
   case 2372:
-
-/* Line 1806 of yacc.c  */
 #line 13350 "preproc.y"
     {
 			(yyval.struct_union).su = mm_strdup("struct");
 			(yyval.struct_union).symbol = (yyvsp[(2) - (2)].str);
 			ECPGstruct_sizeof = cat_str(3, mm_strdup("sizeof("), cat2_str(mm_strdup((yyval.struct_union).su), mm_strdup((yyval.struct_union).symbol)), mm_strdup(")"));
-		}
+		;}
     break;
 
   case 2373:
-
-/* Line 1806 of yacc.c  */
 #line 13356 "preproc.y"
     {
 			(yyval.struct_union).su = mm_strdup("union");
 			(yyval.struct_union).symbol = (yyvsp[(2) - (2)].str);
-		}
+		;}
     break;
 
   case 2374:
-
-/* Line 1806 of yacc.c  */
 #line 13363 "preproc.y"
     {
 			ECPGstruct_sizeof = mm_strdup(""); /* This must not be NULL to distinguish from simple types. */
 			(yyval.str) = mm_strdup("struct");
-		}
+		;}
     break;
 
   case 2375:
-
-/* Line 1806 of yacc.c  */
 #line 13368 "preproc.y"
     {
 			(yyval.str) = mm_strdup("union");
-		}
+		;}
     break;
 
   case 2376:
-
-/* Line 1806 of yacc.c  */
 #line 13373 "preproc.y"
-    { (yyval.type_enum)=(yyvsp[(1) - (1)].type_enum); }
+    { (yyval.type_enum)=(yyvsp[(1) - (1)].type_enum); ;}
     break;
 
   case 2377:
-
-/* Line 1806 of yacc.c  */
 #line 13374 "preproc.y"
-    { (yyval.type_enum)=(yyvsp[(2) - (2)].type_enum); }
+    { (yyval.type_enum)=(yyvsp[(2) - (2)].type_enum); ;}
     break;
 
   case 2378:
-
-/* Line 1806 of yacc.c  */
 #line 13377 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_short; }
+    { (yyval.type_enum) = ECPGt_unsigned_short; ;}
     break;
 
   case 2379:
-
-/* Line 1806 of yacc.c  */
 #line 13378 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_short; }
+    { (yyval.type_enum) = ECPGt_unsigned_short; ;}
     break;
 
   case 2380:
-
-/* Line 1806 of yacc.c  */
 #line 13379 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_int; }
+    { (yyval.type_enum) = ECPGt_unsigned_int; ;}
     break;
 
   case 2381:
-
-/* Line 1806 of yacc.c  */
 #line 13380 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_int; }
+    { (yyval.type_enum) = ECPGt_unsigned_int; ;}
     break;
 
   case 2382:
-
-/* Line 1806 of yacc.c  */
 #line 13381 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_long; }
+    { (yyval.type_enum) = ECPGt_unsigned_long; ;}
     break;
 
   case 2383:
-
-/* Line 1806 of yacc.c  */
 #line 13382 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_long; }
+    { (yyval.type_enum) = ECPGt_unsigned_long; ;}
     break;
 
   case 2384:
-
-/* Line 1806 of yacc.c  */
 #line 13384 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -49107,12 +44779,10 @@
 #else
 			(yyval.type_enum) = ECPGt_unsigned_long;
 #endif
-		}
+		;}
     break;
 
   case 2385:
-
-/* Line 1806 of yacc.c  */
 #line 13392 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -49120,54 +44790,40 @@
 #else
 			(yyval.type_enum) = ECPGt_unsigned_long;
 #endif
-		}
+		;}
     break;
 
   case 2386:
-
-/* Line 1806 of yacc.c  */
 #line 13399 "preproc.y"
-    { (yyval.type_enum) = ECPGt_unsigned_char; }
+    { (yyval.type_enum) = ECPGt_unsigned_char; ;}
     break;
 
   case 2387:
-
-/* Line 1806 of yacc.c  */
 #line 13402 "preproc.y"
-    { (yyval.type_enum) = ECPGt_short; }
+    { (yyval.type_enum) = ECPGt_short; ;}
     break;
 
   case 2388:
-
-/* Line 1806 of yacc.c  */
 #line 13403 "preproc.y"
-    { (yyval.type_enum) = ECPGt_short; }
+    { (yyval.type_enum) = ECPGt_short; ;}
     break;
 
   case 2389:
-
-/* Line 1806 of yacc.c  */
 #line 13404 "preproc.y"
-    { (yyval.type_enum) = ECPGt_int; }
+    { (yyval.type_enum) = ECPGt_int; ;}
     break;
 
   case 2390:
-
-/* Line 1806 of yacc.c  */
 #line 13405 "preproc.y"
-    { (yyval.type_enum) = ECPGt_long; }
+    { (yyval.type_enum) = ECPGt_long; ;}
     break;
 
   case 2391:
-
-/* Line 1806 of yacc.c  */
 #line 13406 "preproc.y"
-    { (yyval.type_enum) = ECPGt_long; }
+    { (yyval.type_enum) = ECPGt_long; ;}
     break;
 
   case 2392:
-
-/* Line 1806 of yacc.c  */
 #line 13408 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -49175,12 +44831,10 @@
 #else
 			(yyval.type_enum) = ECPGt_long;
 #endif
-		}
+		;}
     break;
 
   case 2393:
-
-/* Line 1806 of yacc.c  */
 #line 13416 "preproc.y"
     {
 #ifdef HAVE_LONG_LONG_INT
@@ -49188,52 +44842,40 @@
 #else
 			(yyval.type_enum) = ECPGt_long;
 #endif
-		}
+		;}
     break;
 
   case 2394:
-
-/* Line 1806 of yacc.c  */
 #line 13423 "preproc.y"
-    { (yyval.type_enum) = ECPGt_bool; }
+    { (yyval.type_enum) = ECPGt_bool; ;}
     break;
 
   case 2395:
-
-/* Line 1806 of yacc.c  */
 #line 13424 "preproc.y"
-    { (yyval.type_enum) = ECPGt_char; }
+    { (yyval.type_enum) = ECPGt_char; ;}
     break;
 
   case 2396:
-
-/* Line 1806 of yacc.c  */
 #line 13425 "preproc.y"
-    { (yyval.type_enum) = ECPGt_double; }
+    { (yyval.type_enum) = ECPGt_double; ;}
     break;
 
   case 2399:
-
-/* Line 1806 of yacc.c  */
 #line 13433 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2400:
-
-/* Line 1806 of yacc.c  */
 #line 13435 "preproc.y"
     {
 			if (actual_type[struct_level].type_enum == ECPGt_varchar)
 				(yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(";"), (yyvsp[(3) - (3)].str));
 			else
 				(yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str));
-		}
+		;}
     break;
 
   case 2401:
-
-/* Line 1806 of yacc.c  */
 #line 13444 "preproc.y"
     {
 			struct ECPGtype * type;
@@ -49318,334 +44960,250 @@
 				ECPGmake_struct_member((yyvsp[(2) - (5)].str), type, &(struct_member_list[struct_level - 1]));
 
 			free((yyvsp[(2) - (5)].str));
-		}
+		;}
     break;
 
   case 2402:
-
-/* Line 1806 of yacc.c  */
 #line 13531 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2403:
-
-/* Line 1806 of yacc.c  */
 #line 13533 "preproc.y"
     {
 			initializer = 1;
 			(yyval.str) = cat2_str(mm_strdup("="), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2404:
-
-/* Line 1806 of yacc.c  */
 #line 13539 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2405:
-
-/* Line 1806 of yacc.c  */
 #line 13540 "preproc.y"
-    { (yyval.str) = mm_strdup("*"); }
+    { (yyval.str) = mm_strdup("*"); ;}
     break;
 
   case 2406:
-
-/* Line 1806 of yacc.c  */
 #line 13541 "preproc.y"
-    { (yyval.str) = mm_strdup("**"); }
+    { (yyval.str) = mm_strdup("**"); ;}
     break;
 
   case 2407:
-
-/* Line 1806 of yacc.c  */
 #line 13548 "preproc.y"
     {
 			/* this is only supported for compatibility */
 			(yyval.str) = cat_str(3, mm_strdup("/* declare statement"), (yyvsp[(3) - (3)].str), mm_strdup("*/"));
-		}
+		;}
     break;
 
   case 2408:
-
-/* Line 1806 of yacc.c  */
 #line 13556 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2409:
-
-/* Line 1806 of yacc.c  */
 #line 13559 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2410:
-
-/* Line 1806 of yacc.c  */
 #line 13560 "preproc.y"
-    { (yyval.str) = mm_strdup("\"CURRENT\""); }
+    { (yyval.str) = mm_strdup("\"CURRENT\""); ;}
     break;
 
   case 2411:
-
-/* Line 1806 of yacc.c  */
 #line 13561 "preproc.y"
-    { (yyval.str) = mm_strdup("\"ALL\""); }
+    { (yyval.str) = mm_strdup("\"ALL\""); ;}
     break;
 
   case 2412:
-
-/* Line 1806 of yacc.c  */
 #line 13562 "preproc.y"
-    { (yyval.str) = mm_strdup("\"CURRENT\""); }
+    { (yyval.str) = mm_strdup("\"CURRENT\""); ;}
     break;
 
   case 2413:
-
-/* Line 1806 of yacc.c  */
 #line 13565 "preproc.y"
-    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); }
+    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); ;}
     break;
 
   case 2414:
-
-/* Line 1806 of yacc.c  */
 #line 13566 "preproc.y"
-    { (yyval.str) = mm_strdup("\"DEFAULT\""); }
+    { (yyval.str) = mm_strdup("\"DEFAULT\""); ;}
     break;
 
   case 2415:
-
-/* Line 1806 of yacc.c  */
 #line 13567 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2416:
-
-/* Line 1806 of yacc.c  */
 #line 13571 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2417:
-
-/* Line 1806 of yacc.c  */
 #line 13573 "preproc.y"
-    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); }
+    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); ;}
     break;
 
   case 2418:
-
-/* Line 1806 of yacc.c  */
 #line 13580 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2419:
-
-/* Line 1806 of yacc.c  */
 #line 13581 "preproc.y"
-    { (yyval.str) = mm_strdup("all"); }
+    { (yyval.str) = mm_strdup("all"); ;}
     break;
 
   case 2420:
-
-/* Line 1806 of yacc.c  */
 #line 13588 "preproc.y"
     {
 			if ((yyvsp[(2) - (3)].str)[0] == ':')
 				remove_variable_from_list(&argsinsert, find_variable((yyvsp[(2) - (3)].str) + 1));
 			(yyval.str) = (yyvsp[(2) - (3)].str);
-		}
+		;}
     break;
 
   case 2421:
-
-/* Line 1806 of yacc.c  */
 #line 13595 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2422:
-
-/* Line 1806 of yacc.c  */
 #line 13596 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2423:
-
-/* Line 1806 of yacc.c  */
 #line 13599 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2424:
-
-/* Line 1806 of yacc.c  */
 #line 13600 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2425:
-
-/* Line 1806 of yacc.c  */
 #line 13604 "preproc.y"
     {
 			add_variable_to_head(&argsinsert, descriptor_variable((yyvsp[(4) - (4)].str),0), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2426:
-
-/* Line 1806 of yacc.c  */
 #line 13609 "preproc.y"
     {
 			add_variable_to_head(&argsinsert, sqlda_variable((yyvsp[(3) - (3)].str)), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2427:
-
-/* Line 1806 of yacc.c  */
 #line 13616 "preproc.y"
     {
 			add_variable_to_head(&argsresult, descriptor_variable((yyvsp[(4) - (4)].str),1), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2428:
-
-/* Line 1806 of yacc.c  */
 #line 13621 "preproc.y"
     {
 			add_variable_to_head(&argsresult, sqlda_variable((yyvsp[(3) - (3)].str)), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2429:
-
-/* Line 1806 of yacc.c  */
 #line 13628 "preproc.y"
     {
 			add_variable_to_head(&argsresult, sqlda_variable((yyvsp[(2) - (2)].str)), &no_indicator);
 			(yyval.str) = EMPTY;
-		}
+		;}
     break;
 
   case 2432:
-
-/* Line 1806 of yacc.c  */
 #line 13637 "preproc.y"
     {
 			char *length = mm_alloc(32);
 
 			sprintf(length, "%d", (int) strlen((yyvsp[(1) - (1)].str)));
 			add_variable_to_head(&argsinsert, new_variable((yyvsp[(1) - (1)].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0), &no_indicator);
-		}
+		;}
     break;
 
   case 2433:
-
-/* Line 1806 of yacc.c  */
 #line 13643 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2434:
-
-/* Line 1806 of yacc.c  */
 #line 13644 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2435:
-
-/* Line 1806 of yacc.c  */
 #line 13647 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2436:
-
-/* Line 1806 of yacc.c  */
 #line 13648 "preproc.y"
-    { (yyval.str) = cat_str(2, mm_strdup("+"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, mm_strdup("+"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2437:
-
-/* Line 1806 of yacc.c  */
 #line 13649 "preproc.y"
-    { (yyval.str) = cat_str(2, mm_strdup("-"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, mm_strdup("-"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2438:
-
-/* Line 1806 of yacc.c  */
 #line 13650 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2439:
-
-/* Line 1806 of yacc.c  */
 #line 13651 "preproc.y"
-    { (yyval.str) = cat_str(2, mm_strdup("+"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, mm_strdup("+"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2440:
-
-/* Line 1806 of yacc.c  */
 #line 13652 "preproc.y"
-    { (yyval.str) = cat_str(2, mm_strdup("-"), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat_str(2, mm_strdup("-"), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2441:
-
-/* Line 1806 of yacc.c  */
 #line 13653 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2442:
-
-/* Line 1806 of yacc.c  */
 #line 13654 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2443:
-
-/* Line 1806 of yacc.c  */
 #line 13655 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2444:
-
-/* Line 1806 of yacc.c  */
 #line 13662 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		mmerror(PARSE_ERROR, ET_WARNING, "using unsupported DESCRIBE statement");
 		(yyval.str) = (char *) mm_alloc(sizeof("1, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "1, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2445:
-
-/* Line 1806 of yacc.c  */
 #line 13669 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
@@ -49657,110 +45215,86 @@
 
 		(yyval.str) = (char *) mm_alloc(sizeof("0, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "0, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2446:
-
-/* Line 1806 of yacc.c  */
 #line 13681 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		(yyval.str) = (char *) mm_alloc(sizeof("0, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "0, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2447:
-
-/* Line 1806 of yacc.c  */
 #line 13687 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		mmerror(PARSE_ERROR, ET_WARNING, "using unsupported DESCRIBE statement");
 		(yyval.str) = (char *) mm_alloc(sizeof("1, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "1, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2448:
-
-/* Line 1806 of yacc.c  */
 #line 13694 "preproc.y"
     {
 		const char *con = connection ? connection : "NULL";
 		(yyval.str) = (char *) mm_alloc(sizeof("0, , ") + strlen(con) + strlen((yyvsp[(3) - (4)].str)));
 		sprintf((yyval.str), "0, %s, %s", con, (yyvsp[(3) - (4)].str));
-	}
+	;}
     break;
 
   case 2449:
-
-/* Line 1806 of yacc.c  */
 #line 13701 "preproc.y"
-    { (yyval.str) = mm_strdup("output"); }
+    { (yyval.str) = mm_strdup("output"); ;}
     break;
 
   case 2450:
-
-/* Line 1806 of yacc.c  */
 #line 13702 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2451:
-
-/* Line 1806 of yacc.c  */
 #line 13715 "preproc.y"
     {
 			add_descriptor((yyvsp[(3) - (3)].str),connection);
 			(yyval.str) = (yyvsp[(3) - (3)].str);
-		}
+		;}
     break;
 
   case 2452:
-
-/* Line 1806 of yacc.c  */
 #line 13726 "preproc.y"
     {
 			drop_descriptor((yyvsp[(3) - (3)].str),connection);
 			(yyval.str) = (yyvsp[(3) - (3)].str);
-		}
+		;}
     break;
 
   case 2453:
-
-/* Line 1806 of yacc.c  */
 #line 13737 "preproc.y"
-    {  (yyval.str) = (yyvsp[(3) - (4)].str); }
+    {  (yyval.str) = (yyvsp[(3) - (4)].str); ;}
     break;
 
   case 2456:
-
-/* Line 1806 of yacc.c  */
 #line 13745 "preproc.y"
-    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); }
+    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); ;}
     break;
 
   case 2457:
-
-/* Line 1806 of yacc.c  */
 #line 13750 "preproc.y"
-    { (yyval.str) = (yyvsp[(3) - (4)].str); }
+    { (yyval.str) = (yyvsp[(3) - (4)].str); ;}
     break;
 
   case 2460:
-
-/* Line 1806 of yacc.c  */
 #line 13758 "preproc.y"
     {
 			push_assignment((yyvsp[(3) - (3)].str), (yyvsp[(1) - (3)].dtype_enum));
-		}
+		;}
     break;
 
   case 2461:
-
-/* Line 1806 of yacc.c  */
 #line 13764 "preproc.y"
     {
 			char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -49768,58 +45302,44 @@
 			sprintf(length, "%d", (int) strlen((yyvsp[(1) - (1)].str)));
 			new_variable((yyvsp[(1) - (1)].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2462:
-
-/* Line 1806 of yacc.c  */
 #line 13772 "preproc.y"
     {
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2463:
-
-/* Line 1806 of yacc.c  */
 #line 13777 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_count; }
+    { (yyval.dtype_enum) = ECPGd_count; ;}
     break;
 
   case 2464:
-
-/* Line 1806 of yacc.c  */
 #line 13785 "preproc.y"
-    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); }
+    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); ;}
     break;
 
   case 2467:
-
-/* Line 1806 of yacc.c  */
 #line 13792 "preproc.y"
-    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); }
+    { push_assignment((yyvsp[(1) - (3)].str), (yyvsp[(3) - (3)].dtype_enum)); ;}
     break;
 
   case 2468:
-
-/* Line 1806 of yacc.c  */
 #line 13796 "preproc.y"
-    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); }
+    {  (yyval.descriptor).str = (yyvsp[(5) - (6)].str); (yyval.descriptor).name = (yyvsp[(3) - (6)].str); ;}
     break;
 
   case 2471:
-
-/* Line 1806 of yacc.c  */
 #line 13804 "preproc.y"
     {
 			push_assignment((yyvsp[(3) - (3)].str), (yyvsp[(1) - (3)].dtype_enum));
-		}
+		;}
     break;
 
   case 2472:
-
-/* Line 1806 of yacc.c  */
 #line 13810 "preproc.y"
     {
 			char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -49827,21 +45347,17 @@
 			sprintf(length, "%d", (int) strlen((yyvsp[(1) - (1)].str)));
 			new_variable((yyvsp[(1) - (1)].str), ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2473:
-
-/* Line 1806 of yacc.c  */
 #line 13819 "preproc.y"
     {
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2474:
-
-/* Line 1806 of yacc.c  */
 #line 13824 "preproc.y"
     {
 			char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -49850,12 +45366,10 @@
 			sprintf(length, "%d", (int) strlen(var));
 			new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = var;
-		}
+		;}
     break;
 
   case 2475:
-
-/* Line 1806 of yacc.c  */
 #line 13834 "preproc.y"
     {
 			char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -49864,12 +45378,10 @@
 			sprintf(length, "%d", (int) strlen(var));
 			new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = var;
-		}
+		;}
     break;
 
   case 2476:
-
-/* Line 1806 of yacc.c  */
 #line 13844 "preproc.y"
     {
 			char *length = mm_alloc(sizeof(int) * CHAR_BIT * 10 / 3);
@@ -49879,177 +45391,129 @@
 			sprintf(length, "%d", (int) strlen(var));
 			new_variable(var, ECPGmake_simple_type(ECPGt_const, length, 0), 0);
 			(yyval.str) = var;
-		}
+		;}
     break;
 
   case 2477:
-
-/* Line 1806 of yacc.c  */
 #line 13855 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_cardinality; }
+    { (yyval.dtype_enum) = ECPGd_cardinality; ;}
     break;
 
   case 2478:
-
-/* Line 1806 of yacc.c  */
 #line 13856 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_data; }
+    { (yyval.dtype_enum) = ECPGd_data; ;}
     break;
 
   case 2479:
-
-/* Line 1806 of yacc.c  */
 #line 13857 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_di_code; }
+    { (yyval.dtype_enum) = ECPGd_di_code; ;}
     break;
 
   case 2480:
-
-/* Line 1806 of yacc.c  */
 #line 13858 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_di_precision; }
+    { (yyval.dtype_enum) = ECPGd_di_precision; ;}
     break;
 
   case 2481:
-
-/* Line 1806 of yacc.c  */
 #line 13859 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_indicator; }
+    { (yyval.dtype_enum) = ECPGd_indicator; ;}
     break;
 
   case 2482:
-
-/* Line 1806 of yacc.c  */
 #line 13860 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_key_member; }
+    { (yyval.dtype_enum) = ECPGd_key_member; ;}
     break;
 
   case 2483:
-
-/* Line 1806 of yacc.c  */
 #line 13861 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_length; }
+    { (yyval.dtype_enum) = ECPGd_length; ;}
     break;
 
   case 2484:
-
-/* Line 1806 of yacc.c  */
 #line 13862 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_name; }
+    { (yyval.dtype_enum) = ECPGd_name; ;}
     break;
 
   case 2485:
-
-/* Line 1806 of yacc.c  */
 #line 13863 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_nullable; }
+    { (yyval.dtype_enum) = ECPGd_nullable; ;}
     break;
 
   case 2486:
-
-/* Line 1806 of yacc.c  */
 #line 13864 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_octet; }
+    { (yyval.dtype_enum) = ECPGd_octet; ;}
     break;
 
   case 2487:
-
-/* Line 1806 of yacc.c  */
 #line 13865 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_precision; }
+    { (yyval.dtype_enum) = ECPGd_precision; ;}
     break;
 
   case 2488:
-
-/* Line 1806 of yacc.c  */
 #line 13866 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_length; }
+    { (yyval.dtype_enum) = ECPGd_length; ;}
     break;
 
   case 2489:
-
-/* Line 1806 of yacc.c  */
 #line 13867 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_ret_octet; }
+    { (yyval.dtype_enum) = ECPGd_ret_octet; ;}
     break;
 
   case 2490:
-
-/* Line 1806 of yacc.c  */
 #line 13868 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_scale; }
+    { (yyval.dtype_enum) = ECPGd_scale; ;}
     break;
 
   case 2491:
-
-/* Line 1806 of yacc.c  */
 #line 13869 "preproc.y"
-    { (yyval.dtype_enum) = ECPGd_type; }
+    { (yyval.dtype_enum) = ECPGd_type; ;}
     break;
 
   case 2492:
-
-/* Line 1806 of yacc.c  */
 #line 13876 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2493:
-
-/* Line 1806 of yacc.c  */
 #line 13877 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2494:
-
-/* Line 1806 of yacc.c  */
 #line 13880 "preproc.y"
-    { (yyval.str) = mm_strdup("on"); }
+    { (yyval.str) = mm_strdup("on"); ;}
     break;
 
   case 2495:
-
-/* Line 1806 of yacc.c  */
 #line 13881 "preproc.y"
-    { (yyval.str) = mm_strdup("off"); }
+    { (yyval.str) = mm_strdup("off"); ;}
     break;
 
   case 2496:
-
-/* Line 1806 of yacc.c  */
 #line 13888 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2497:
-
-/* Line 1806 of yacc.c  */
 #line 13889 "preproc.y"
-    { (yyval.str) = (yyvsp[(4) - (4)].str); }
+    { (yyval.str) = (yyvsp[(4) - (4)].str); ;}
     break;
 
   case 2498:
-
-/* Line 1806 of yacc.c  */
 #line 13890 "preproc.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 2499:
-
-/* Line 1806 of yacc.c  */
 #line 13897 "preproc.y"
     {
 			/* reset this variable so we see if there was */
 			/* an initializer specified */
 			initializer = 0;
-		}
+		;}
     break;
 
   case 2500:
-
-/* Line 1806 of yacc.c  */
 #line 13903 "preproc.y"
     {
 			add_typedef((yyvsp[(3) - (7)].str), (yyvsp[(6) - (7)].index).index1, (yyvsp[(6) - (7)].index).index2, (yyvsp[(5) - (7)].type).type_enum, (yyvsp[(5) - (7)].type).type_dimension, (yyvsp[(5) - (7)].type).type_index, initializer, *(yyvsp[(7) - (7)].str) ? 1 : 0);
@@ -50058,37 +45522,29 @@
 				(yyval.str) = cat_str(7, mm_strdup("/* exec sql type"), mm_strdup((yyvsp[(3) - (7)].str)), mm_strdup("is"), mm_strdup((yyvsp[(5) - (7)].type).type_str), mm_strdup((yyvsp[(6) - (7)].index).str), (yyvsp[(7) - (7)].str), mm_strdup("*/"));
 			else
 				(yyval.str) = cat_str(6, mm_strdup("typedef "), mm_strdup((yyvsp[(5) - (7)].type).type_str), *(yyvsp[(7) - (7)].str)?mm_strdup("*"):mm_strdup(""), mm_strdup((yyvsp[(6) - (7)].index).str), mm_strdup((yyvsp[(3) - (7)].str)), mm_strdup(";"));
-		}
+		;}
     break;
 
   case 2501:
-
-/* Line 1806 of yacc.c  */
 #line 13913 "preproc.y"
-    { (yyval.str) = mm_strdup("reference"); }
+    { (yyval.str) = mm_strdup("reference"); ;}
     break;
 
   case 2502:
-
-/* Line 1806 of yacc.c  */
 #line 13914 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2503:
-
-/* Line 1806 of yacc.c  */
 #line 13921 "preproc.y"
     {
 			/* reset this variable so we see if there was */
 			/* an initializer specified */
 			initializer = 0;
-		}
+		;}
     break;
 
   case 2504:
-
-/* Line 1806 of yacc.c  */
 #line 13927 "preproc.y"
     {
 			struct variable *p = find_variable((yyvsp[(3) - (7)].str));
@@ -50146,861 +45602,631 @@
 			}
 
 			(yyval.str) = cat_str(7, mm_strdup("/* exec sql var"), mm_strdup((yyvsp[(3) - (7)].str)), mm_strdup("is"), mm_strdup((yyvsp[(5) - (7)].type).type_str), mm_strdup((yyvsp[(6) - (7)].index).str), (yyvsp[(7) - (7)].str), mm_strdup("*/"));
-		}
+		;}
     break;
 
   case 2505:
-
-/* Line 1806 of yacc.c  */
 #line 13991 "preproc.y"
     {
 			when_error.code = (yyvsp[(3) - (3)].action).code;
 			when_error.command = (yyvsp[(3) - (3)].action).command;
 			(yyval.str) = cat_str(3, mm_strdup("/* exec sql whenever sqlerror "), (yyvsp[(3) - (3)].action).str, mm_strdup("; */"));
-		}
+		;}
     break;
 
   case 2506:
-
-/* Line 1806 of yacc.c  */
 #line 13997 "preproc.y"
     {
 			when_nf.code = (yyvsp[(4) - (4)].action).code;
 			when_nf.command = (yyvsp[(4) - (4)].action).command;
 			(yyval.str) = cat_str(3, mm_strdup("/* exec sql whenever not found "), (yyvsp[(4) - (4)].action).str, mm_strdup("; */"));
-		}
+		;}
     break;
 
   case 2507:
-
-/* Line 1806 of yacc.c  */
 #line 14003 "preproc.y"
     {
 			when_warn.code = (yyvsp[(3) - (3)].action).code;
 			when_warn.command = (yyvsp[(3) - (3)].action).command;
 			(yyval.str) = cat_str(3, mm_strdup("/* exec sql whenever sql_warning "), (yyvsp[(3) - (3)].action).str, mm_strdup("; */"));
-		}
+		;}
     break;
 
   case 2508:
-
-/* Line 1806 of yacc.c  */
 #line 14011 "preproc.y"
     {
 			(yyval.action).code = W_NOTHING;
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("continue");
-		}
+		;}
     break;
 
   case 2509:
-
-/* Line 1806 of yacc.c  */
 #line 14017 "preproc.y"
     {
 			(yyval.action).code = W_SQLPRINT;
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("sqlprint");
-		}
+		;}
     break;
 
   case 2510:
-
-/* Line 1806 of yacc.c  */
 #line 14023 "preproc.y"
     {
 			(yyval.action).code = W_STOP;
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("stop");
-		}
+		;}
     break;
 
   case 2511:
-
-/* Line 1806 of yacc.c  */
 #line 14029 "preproc.y"
     {
 			(yyval.action).code = W_GOTO;
 			(yyval.action).command = strdup((yyvsp[(2) - (2)].str));
 			(yyval.action).str = cat2_str(mm_strdup("goto "), (yyvsp[(2) - (2)].str));
-		}
+		;}
     break;
 
   case 2512:
-
-/* Line 1806 of yacc.c  */
 #line 14035 "preproc.y"
     {
 			(yyval.action).code = W_GOTO;
 			(yyval.action).command = strdup((yyvsp[(3) - (3)].str));
 			(yyval.action).str = cat2_str(mm_strdup("goto "), (yyvsp[(3) - (3)].str));
-		}
+		;}
     break;
 
   case 2513:
-
-/* Line 1806 of yacc.c  */
 #line 14041 "preproc.y"
     {
 			(yyval.action).code = W_DO;
 			(yyval.action).command = cat_str(4, (yyvsp[(2) - (5)].str), mm_strdup("("), (yyvsp[(4) - (5)].str), mm_strdup(")"));
 			(yyval.action).str = cat2_str(mm_strdup("do"), mm_strdup((yyval.action).command));
-		}
+		;}
     break;
 
   case 2514:
-
-/* Line 1806 of yacc.c  */
 #line 14047 "preproc.y"
     {
 			(yyval.action).code = W_BREAK;
 			(yyval.action).command = NULL;
 			(yyval.action).str = mm_strdup("break");
-		}
+		;}
     break;
 
   case 2515:
-
-/* Line 1806 of yacc.c  */
 #line 14053 "preproc.y"
     {
 			(yyval.action).code = W_DO;
 			(yyval.action).command = cat_str(4, (yyvsp[(2) - (5)].str), mm_strdup("("), (yyvsp[(4) - (5)].str), mm_strdup(")"));
 			(yyval.action).str = cat2_str(mm_strdup("call"), mm_strdup((yyval.action).command));
-		}
+		;}
     break;
 
   case 2516:
-
-/* Line 1806 of yacc.c  */
 #line 14059 "preproc.y"
     {
 			(yyval.action).code = W_DO;
 			(yyval.action).command = cat2_str((yyvsp[(2) - (2)].str), mm_strdup("()"));
 			(yyval.action).str = cat2_str(mm_strdup("call"), mm_strdup((yyval.action).command));
-		}
+		;}
     break;
 
   case 2517:
-
-/* Line 1806 of yacc.c  */
 #line 14069 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2518:
-
-/* Line 1806 of yacc.c  */
 #line 14070 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2519:
-
-/* Line 1806 of yacc.c  */
 #line 14073 "preproc.y"
-    { (yyval.str) = mm_strdup("break"); }
+    { (yyval.str) = mm_strdup("break"); ;}
     break;
 
   case 2520:
-
-/* Line 1806 of yacc.c  */
 #line 14074 "preproc.y"
-    { (yyval.str) = mm_strdup("call"); }
+    { (yyval.str) = mm_strdup("call"); ;}
     break;
 
   case 2521:
-
-/* Line 1806 of yacc.c  */
 #line 14075 "preproc.y"
-    { (yyval.str) = mm_strdup("cardinality"); }
+    { (yyval.str) = mm_strdup("cardinality"); ;}
     break;
 
   case 2522:
-
-/* Line 1806 of yacc.c  */
 #line 14076 "preproc.y"
-    { (yyval.str) = mm_strdup("count"); }
+    { (yyval.str) = mm_strdup("count"); ;}
     break;
 
   case 2523:
-
-/* Line 1806 of yacc.c  */
 #line 14077 "preproc.y"
-    { (yyval.str) = mm_strdup("datetime_interval_code"); }
+    { (yyval.str) = mm_strdup("datetime_interval_code"); ;}
     break;
 
   case 2524:
-
-/* Line 1806 of yacc.c  */
 #line 14078 "preproc.y"
-    { (yyval.str) = mm_strdup("datetime_interval_precision"); }
+    { (yyval.str) = mm_strdup("datetime_interval_precision"); ;}
     break;
 
   case 2525:
-
-/* Line 1806 of yacc.c  */
 #line 14079 "preproc.y"
-    { (yyval.str) = mm_strdup("found"); }
+    { (yyval.str) = mm_strdup("found"); ;}
     break;
 
   case 2526:
-
-/* Line 1806 of yacc.c  */
 #line 14080 "preproc.y"
-    { (yyval.str) = mm_strdup("go"); }
+    { (yyval.str) = mm_strdup("go"); ;}
     break;
 
   case 2527:
-
-/* Line 1806 of yacc.c  */
 #line 14081 "preproc.y"
-    { (yyval.str) = mm_strdup("goto"); }
+    { (yyval.str) = mm_strdup("goto"); ;}
     break;
 
   case 2528:
-
-/* Line 1806 of yacc.c  */
 #line 14082 "preproc.y"
-    { (yyval.str) = mm_strdup("identified"); }
+    { (yyval.str) = mm_strdup("identified"); ;}
     break;
 
   case 2529:
-
-/* Line 1806 of yacc.c  */
 #line 14083 "preproc.y"
-    { (yyval.str) = mm_strdup("indicator"); }
+    { (yyval.str) = mm_strdup("indicator"); ;}
     break;
 
   case 2530:
-
-/* Line 1806 of yacc.c  */
 #line 14084 "preproc.y"
-    { (yyval.str) = mm_strdup("key_member"); }
+    { (yyval.str) = mm_strdup("key_member"); ;}
     break;
 
   case 2531:
-
-/* Line 1806 of yacc.c  */
 #line 14085 "preproc.y"
-    { (yyval.str) = mm_strdup("length"); }
+    { (yyval.str) = mm_strdup("length"); ;}
     break;
 
   case 2532:
-
-/* Line 1806 of yacc.c  */
 #line 14086 "preproc.y"
-    { (yyval.str) = mm_strdup("nullable"); }
+    { (yyval.str) = mm_strdup("nullable"); ;}
     break;
 
   case 2533:
-
-/* Line 1806 of yacc.c  */
 #line 14087 "preproc.y"
-    { (yyval.str) = mm_strdup("octet_length"); }
+    { (yyval.str) = mm_strdup("octet_length"); ;}
     break;
 
   case 2534:
-
-/* Line 1806 of yacc.c  */
 #line 14088 "preproc.y"
-    { (yyval.str) = mm_strdup("returned_length"); }
+    { (yyval.str) = mm_strdup("returned_length"); ;}
     break;
 
   case 2535:
-
-/* Line 1806 of yacc.c  */
 #line 14089 "preproc.y"
-    { (yyval.str) = mm_strdup("returned_octet_length"); }
+    { (yyval.str) = mm_strdup("returned_octet_length"); ;}
     break;
 
   case 2536:
-
-/* Line 1806 of yacc.c  */
 #line 14090 "preproc.y"
-    { (yyval.str) = mm_strdup("scale"); }
+    { (yyval.str) = mm_strdup("scale"); ;}
     break;
 
   case 2537:
-
-/* Line 1806 of yacc.c  */
 #line 14091 "preproc.y"
-    { (yyval.str) = mm_strdup("section"); }
+    { (yyval.str) = mm_strdup("section"); ;}
     break;
 
   case 2538:
-
-/* Line 1806 of yacc.c  */
 #line 14092 "preproc.y"
-    { (yyval.str) = mm_strdup("sql"); }
+    { (yyval.str) = mm_strdup("sql"); ;}
     break;
 
   case 2539:
-
-/* Line 1806 of yacc.c  */
 #line 14093 "preproc.y"
-    { (yyval.str) = mm_strdup("sqlerror"); }
+    { (yyval.str) = mm_strdup("sqlerror"); ;}
     break;
 
   case 2540:
-
-/* Line 1806 of yacc.c  */
 #line 14094 "preproc.y"
-    { (yyval.str) = mm_strdup("sqlprint"); }
+    { (yyval.str) = mm_strdup("sqlprint"); ;}
     break;
 
   case 2541:
-
-/* Line 1806 of yacc.c  */
 #line 14095 "preproc.y"
-    { (yyval.str) = mm_strdup("sqlwarning"); }
+    { (yyval.str) = mm_strdup("sqlwarning"); ;}
     break;
 
   case 2542:
-
-/* Line 1806 of yacc.c  */
 #line 14096 "preproc.y"
-    { (yyval.str) = mm_strdup("stop"); }
+    { (yyval.str) = mm_strdup("stop"); ;}
     break;
 
   case 2543:
-
-/* Line 1806 of yacc.c  */
 #line 14099 "preproc.y"
-    { (yyval.str) = mm_strdup("connect"); }
+    { (yyval.str) = mm_strdup("connect"); ;}
     break;
 
   case 2544:
-
-/* Line 1806 of yacc.c  */
 #line 14100 "preproc.y"
-    { (yyval.str) = mm_strdup("describe"); }
+    { (yyval.str) = mm_strdup("describe"); ;}
     break;
 
   case 2545:
-
-/* Line 1806 of yacc.c  */
 #line 14101 "preproc.y"
-    { (yyval.str) = mm_strdup("disconnect"); }
+    { (yyval.str) = mm_strdup("disconnect"); ;}
     break;
 
   case 2546:
-
-/* Line 1806 of yacc.c  */
 #line 14102 "preproc.y"
-    { (yyval.str) = mm_strdup("open"); }
+    { (yyval.str) = mm_strdup("open"); ;}
     break;
 
   case 2547:
-
-/* Line 1806 of yacc.c  */
 #line 14103 "preproc.y"
-    { (yyval.str) = mm_strdup("var"); }
+    { (yyval.str) = mm_strdup("var"); ;}
     break;
 
   case 2548:
-
-/* Line 1806 of yacc.c  */
 #line 14104 "preproc.y"
-    { (yyval.str) = mm_strdup("whenever"); }
+    { (yyval.str) = mm_strdup("whenever"); ;}
     break;
 
   case 2549:
-
-/* Line 1806 of yacc.c  */
 #line 14108 "preproc.y"
-    { (yyval.str) = mm_strdup("bool"); }
+    { (yyval.str) = mm_strdup("bool"); ;}
     break;
 
   case 2550:
-
-/* Line 1806 of yacc.c  */
 #line 14109 "preproc.y"
-    { (yyval.str) = mm_strdup("long"); }
+    { (yyval.str) = mm_strdup("long"); ;}
     break;
 
   case 2551:
-
-/* Line 1806 of yacc.c  */
 #line 14110 "preproc.y"
-    { (yyval.str) = mm_strdup("output"); }
+    { (yyval.str) = mm_strdup("output"); ;}
     break;
 
   case 2552:
-
-/* Line 1806 of yacc.c  */
 #line 14111 "preproc.y"
-    { (yyval.str) = mm_strdup("short"); }
+    { (yyval.str) = mm_strdup("short"); ;}
     break;
 
   case 2553:
-
-/* Line 1806 of yacc.c  */
 #line 14112 "preproc.y"
-    { (yyval.str) = mm_strdup("struct"); }
+    { (yyval.str) = mm_strdup("struct"); ;}
     break;
 
   case 2554:
-
-/* Line 1806 of yacc.c  */
 #line 14113 "preproc.y"
-    { (yyval.str) = mm_strdup("signed"); }
+    { (yyval.str) = mm_strdup("signed"); ;}
     break;
 
   case 2555:
-
-/* Line 1806 of yacc.c  */
 #line 14114 "preproc.y"
-    { (yyval.str) = mm_strdup("unsigned"); }
+    { (yyval.str) = mm_strdup("unsigned"); ;}
     break;
 
   case 2556:
-
-/* Line 1806 of yacc.c  */
 #line 14117 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2557:
-
-/* Line 1806 of yacc.c  */
 #line 14120 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2558:
-
-/* Line 1806 of yacc.c  */
 #line 14121 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2559:
-
-/* Line 1806 of yacc.c  */
 #line 14122 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2560:
-
-/* Line 1806 of yacc.c  */
 #line 14123 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2561:
-
-/* Line 1806 of yacc.c  */
 #line 14124 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2562:
-
-/* Line 1806 of yacc.c  */
 #line 14125 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2563:
-
-/* Line 1806 of yacc.c  */
 #line 14126 "preproc.y"
-    { (yyval.str) = mm_strdup("char"); }
+    { (yyval.str) = mm_strdup("char"); ;}
     break;
 
   case 2564:
-
-/* Line 1806 of yacc.c  */
 #line 14127 "preproc.y"
-    { (yyval.str) = mm_strdup("values"); }
+    { (yyval.str) = mm_strdup("values"); ;}
     break;
 
   case 2565:
-
-/* Line 1806 of yacc.c  */
 #line 14140 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2566:
-
-/* Line 1806 of yacc.c  */
 #line 14141 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2567:
-
-/* Line 1806 of yacc.c  */
 #line 14142 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2568:
-
-/* Line 1806 of yacc.c  */
 #line 14143 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2569:
-
-/* Line 1806 of yacc.c  */
 #line 14144 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2570:
-
-/* Line 1806 of yacc.c  */
 #line 14145 "preproc.y"
-    { (yyval.str) = mm_strdup("char"); }
+    { (yyval.str) = mm_strdup("char"); ;}
     break;
 
   case 2571:
-
-/* Line 1806 of yacc.c  */
 #line 14146 "preproc.y"
-    { (yyval.str) = mm_strdup("values"); }
+    { (yyval.str) = mm_strdup("values"); ;}
     break;
 
   case 2572:
-
-/* Line 1806 of yacc.c  */
 #line 14151 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2573:
-
-/* Line 1806 of yacc.c  */
 #line 14152 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2574:
-
-/* Line 1806 of yacc.c  */
 #line 14153 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2575:
-
-/* Line 1806 of yacc.c  */
 #line 14154 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2576:
-
-/* Line 1806 of yacc.c  */
 #line 14155 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2577:
-
-/* Line 1806 of yacc.c  */
 #line 14156 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2578:
-
-/* Line 1806 of yacc.c  */
 #line 14162 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2579:
-
-/* Line 1806 of yacc.c  */
 #line 14163 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2580:
-
-/* Line 1806 of yacc.c  */
 #line 14164 "preproc.y"
-    { (yyval.str) = mm_strdup("char"); }
+    { (yyval.str) = mm_strdup("char"); ;}
     break;
 
   case 2581:
-
-/* Line 1806 of yacc.c  */
 #line 14165 "preproc.y"
-    { (yyval.str) = mm_strdup("current"); }
+    { (yyval.str) = mm_strdup("current"); ;}
     break;
 
   case 2582:
-
-/* Line 1806 of yacc.c  */
 #line 14166 "preproc.y"
-    { (yyval.str) = mm_strdup("input"); }
+    { (yyval.str) = mm_strdup("input"); ;}
     break;
 
   case 2583:
-
-/* Line 1806 of yacc.c  */
 #line 14167 "preproc.y"
-    { (yyval.str) = mm_strdup("int"); }
+    { (yyval.str) = mm_strdup("int"); ;}
     break;
 
   case 2584:
-
-/* Line 1806 of yacc.c  */
 #line 14168 "preproc.y"
-    { (yyval.str) = mm_strdup("to"); }
+    { (yyval.str) = mm_strdup("to"); ;}
     break;
 
   case 2585:
-
-/* Line 1806 of yacc.c  */
 #line 14169 "preproc.y"
-    { (yyval.str) = mm_strdup("union"); }
+    { (yyval.str) = mm_strdup("union"); ;}
     break;
 
   case 2586:
-
-/* Line 1806 of yacc.c  */
 #line 14170 "preproc.y"
-    { (yyval.str) = mm_strdup("values"); }
+    { (yyval.str) = mm_strdup("values"); ;}
     break;
 
   case 2587:
-
-/* Line 1806 of yacc.c  */
 #line 14171 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2588:
-
-/* Line 1806 of yacc.c  */
 #line 14172 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2589:
-
-/* Line 1806 of yacc.c  */
 #line 14175 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2590:
-
-/* Line 1806 of yacc.c  */
 #line 14176 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2591:
-
-/* Line 1806 of yacc.c  */
 #line 14177 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2592:
-
-/* Line 1806 of yacc.c  */
 #line 14178 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2593:
-
-/* Line 1806 of yacc.c  */
 #line 14179 "preproc.y"
-    { (yyval.str) = mm_strdup("connection"); }
+    { (yyval.str) = mm_strdup("connection"); ;}
     break;
 
   case 2594:
-
-/* Line 1806 of yacc.c  */
 #line 14182 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2595:
-
-/* Line 1806 of yacc.c  */
 #line 14183 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2596:
-
-/* Line 1806 of yacc.c  */
 #line 14184 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2597:
-
-/* Line 1806 of yacc.c  */
 #line 14185 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2598:
-
-/* Line 1806 of yacc.c  */
 #line 14188 "preproc.y"
-    { (yyval.str) = mm_strdup("auto"); }
+    { (yyval.str) = mm_strdup("auto"); ;}
     break;
 
   case 2599:
-
-/* Line 1806 of yacc.c  */
 #line 14189 "preproc.y"
-    { (yyval.str) = mm_strdup("const"); }
+    { (yyval.str) = mm_strdup("const"); ;}
     break;
 
   case 2600:
-
-/* Line 1806 of yacc.c  */
 #line 14190 "preproc.y"
-    { (yyval.str) = mm_strdup("extern"); }
+    { (yyval.str) = mm_strdup("extern"); ;}
     break;
 
   case 2601:
-
-/* Line 1806 of yacc.c  */
 #line 14191 "preproc.y"
-    { (yyval.str) = mm_strdup("register"); }
+    { (yyval.str) = mm_strdup("register"); ;}
     break;
 
   case 2602:
-
-/* Line 1806 of yacc.c  */
 #line 14192 "preproc.y"
-    { (yyval.str) = mm_strdup("static"); }
+    { (yyval.str) = mm_strdup("static"); ;}
     break;
 
   case 2603:
-
-/* Line 1806 of yacc.c  */
 #line 14193 "preproc.y"
-    { (yyval.str) = mm_strdup("typedef"); }
+    { (yyval.str) = mm_strdup("typedef"); ;}
     break;
 
   case 2604:
-
-/* Line 1806 of yacc.c  */
 #line 14194 "preproc.y"
-    { (yyval.str) = mm_strdup("volatile"); }
+    { (yyval.str) = mm_strdup("volatile"); ;}
     break;
 
   case 2605:
-
-/* Line 1806 of yacc.c  */
 #line 14211 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2606:
-
-/* Line 1806 of yacc.c  */
 #line 14212 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2607:
-
-/* Line 1806 of yacc.c  */
 #line 14213 "preproc.y"
-    { (yyval.str) = mm_strdup("connection"); }
+    { (yyval.str) = mm_strdup("connection"); ;}
     break;
 
   case 2608:
-
-/* Line 1806 of yacc.c  */
 #line 14216 "preproc.y"
-    { (yyval.str) = mm_strdup("day"); }
+    { (yyval.str) = mm_strdup("day"); ;}
     break;
 
   case 2609:
-
-/* Line 1806 of yacc.c  */
 #line 14217 "preproc.y"
-    { (yyval.str) = mm_strdup("hour"); }
+    { (yyval.str) = mm_strdup("hour"); ;}
     break;
 
   case 2610:
-
-/* Line 1806 of yacc.c  */
 #line 14218 "preproc.y"
-    { (yyval.str) = mm_strdup("minute"); }
+    { (yyval.str) = mm_strdup("minute"); ;}
     break;
 
   case 2611:
-
-/* Line 1806 of yacc.c  */
 #line 14219 "preproc.y"
-    { (yyval.str) = mm_strdup("month"); }
+    { (yyval.str) = mm_strdup("month"); ;}
     break;
 
   case 2612:
-
-/* Line 1806 of yacc.c  */
 #line 14220 "preproc.y"
-    { (yyval.str) = mm_strdup("second"); }
+    { (yyval.str) = mm_strdup("second"); ;}
     break;
 
   case 2613:
-
-/* Line 1806 of yacc.c  */
 #line 14221 "preproc.y"
-    { (yyval.str) = mm_strdup("year"); }
+    { (yyval.str) = mm_strdup("year"); ;}
     break;
 
   case 2616:
-
-/* Line 1806 of yacc.c  */
 #line 14228 "preproc.y"
     {
 				reset_variables();
 				pacounter = 1;
-			}
+			;}
     break;
 
   case 2617:
-
-/* Line 1806 of yacc.c  */
 #line 14234 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2618:
-
-/* Line 1806 of yacc.c  */
 #line 14235 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2619:
-
-/* Line 1806 of yacc.c  */
 #line 14239 "preproc.y"
-    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (2)].str)), find_variable((yyvsp[(2) - (2)].str))); }
+    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (2)].str)), find_variable((yyvsp[(2) - (2)].str))); ;}
     break;
 
   case 2620:
-
-/* Line 1806 of yacc.c  */
 #line 14241 "preproc.y"
-    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (1)].str)), &no_indicator); }
+    { add_variable_to_head(&argsresult, find_variable((yyvsp[(1) - (1)].str)), &no_indicator); ;}
     break;
 
   case 2621:
-
-/* Line 1806 of yacc.c  */
 #line 14246 "preproc.y"
     {
 			if (find_variable((yyvsp[(2) - (2)].str))->type->type == ECPGt_array)
@@ -51008,12 +46234,10 @@
 
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[(1) - (2)].str)), find_variable((yyvsp[(2) - (2)].str)));
 			(yyval.str) = create_questionmarks((yyvsp[(1) - (2)].str), false);
-		}
+		;}
     break;
 
   case 2622:
-
-/* Line 1806 of yacc.c  */
 #line 14256 "preproc.y"
     {
 			char *ptr = strstr((yyvsp[(1) - (1)].str), ".arr");
@@ -51022,43 +46246,33 @@
 				*ptr = '\0';
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[(1) - (1)].str)), &no_indicator);
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2623:
-
-/* Line 1806 of yacc.c  */
 #line 14267 "preproc.y"
     {
 			add_variable_to_head(&argsinsert, find_variable((yyvsp[(1) - (1)].str)), &no_indicator);
 			(yyval.str) = create_questionmarks((yyvsp[(1) - (1)].str), false);
-		}
+		;}
     break;
 
   case 2624:
-
-/* Line 1806 of yacc.c  */
 #line 14273 "preproc.y"
-    { check_indicator((find_variable((yyvsp[(1) - (1)].str)))->type); (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { check_indicator((find_variable((yyvsp[(1) - (1)].str)))->type); (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2625:
-
-/* Line 1806 of yacc.c  */
 #line 14274 "preproc.y"
-    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2626:
-
-/* Line 1806 of yacc.c  */
 #line 14275 "preproc.y"
-    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { check_indicator((find_variable((yyvsp[(2) - (2)].str)))->type); (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2627:
-
-/* Line 1806 of yacc.c  */
 #line 14279 "preproc.y"
     {
 			/* As long as multidimensional arrays are not implemented we have to check for those here */
@@ -51089,33 +46303,25 @@
 				}
 			}
 			(yyval.str) = (yyvsp[(1) - (1)].str);
-		}
+		;}
     break;
 
   case 2628:
-
-/* Line 1806 of yacc.c  */
 #line 14311 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2629:
-
-/* Line 1806 of yacc.c  */
 #line 14313 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2630:
-
-/* Line 1806 of yacc.c  */
 #line 14315 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2631:
-
-/* Line 1806 of yacc.c  */
 #line 14319 "preproc.y"
     {
 			/* could have been input as '' or $$ */
@@ -51125,12 +46331,10 @@
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+1]='\'';
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+2]='\0';
 			free((yyvsp[(1) - (1)].str));
-		}
+		;}
     break;
 
   case 2632:
-
-/* Line 1806 of yacc.c  */
 #line 14329 "preproc.y"
     {
 			(yyval.str) = (char *)mm_alloc(strlen((yyvsp[(1) - (1)].str)) + 4);
@@ -51140,12 +46344,10 @@
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+2]='\'';
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+3]='\0';
 			free((yyvsp[(1) - (1)].str));
-		}
+		;}
     break;
 
   case 2633:
-
-/* Line 1806 of yacc.c  */
 #line 14339 "preproc.y"
     {
 			(yyval.str) = (char *)mm_alloc(strlen((yyvsp[(1) - (1)].str)) + 4);
@@ -51155,705 +46357,505 @@
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+2]='\'';
 			(yyval.str)[strlen((yyvsp[(1) - (1)].str))+3]='\0';
 			free((yyvsp[(1) - (1)].str));
-		}
+		;}
     break;
 
   case 2634:
-
-/* Line 1806 of yacc.c  */
 #line 14348 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2635:
-
-/* Line 1806 of yacc.c  */
 #line 14349 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2636:
-
-/* Line 1806 of yacc.c  */
 #line 14352 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2637:
-
-/* Line 1806 of yacc.c  */
 #line 14354 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2638:
-
-/* Line 1806 of yacc.c  */
 #line 14355 "preproc.y"
-    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); }
+    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); ;}
     break;
 
   case 2639:
-
-/* Line 1806 of yacc.c  */
 #line 14356 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2640:
-
-/* Line 1806 of yacc.c  */
 #line 14360 "preproc.y"
-    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); }
+    { (yyval.str) = make3_str(mm_strdup("\""), (yyvsp[(1) - (1)].str), mm_strdup("\"")); ;}
     break;
 
   case 2641:
-
-/* Line 1806 of yacc.c  */
 #line 14362 "preproc.y"
-    { (yyval.str) = make3_str(mm_strdup("("), (yyvsp[(1) - (1)].str), mm_strdup(")")); }
+    { (yyval.str) = make3_str(mm_strdup("("), (yyvsp[(1) - (1)].str), mm_strdup(")")); ;}
     break;
 
   case 2642:
-
-/* Line 1806 of yacc.c  */
 #line 14369 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2643:
-
-/* Line 1806 of yacc.c  */
 #line 14370 "preproc.y"
-    { (yyval.str) = mm_strdup("()"); }
+    { (yyval.str) = mm_strdup("()"); ;}
     break;
 
   case 2644:
-
-/* Line 1806 of yacc.c  */
 #line 14372 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("("), (yyvsp[(2) - (3)].str), mm_strdup(")")); }
+    { (yyval.str) = cat_str(3, mm_strdup("("), (yyvsp[(2) - (3)].str), mm_strdup(")")); ;}
     break;
 
   case 2645:
-
-/* Line 1806 of yacc.c  */
 #line 14375 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2646:
-
-/* Line 1806 of yacc.c  */
 #line 14377 "preproc.y"
-    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); }
+    { (yyval.str) = cat2_str((yyvsp[(1) - (2)].str), (yyvsp[(2) - (2)].str)); ;}
     break;
 
   case 2647:
-
-/* Line 1806 of yacc.c  */
 #line 14380 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2648:
-
-/* Line 1806 of yacc.c  */
 #line 14381 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup(","), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2649:
-
-/* Line 1806 of yacc.c  */
 #line 14384 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2650:
-
-/* Line 1806 of yacc.c  */
 #line 14385 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("{"), (yyvsp[(2) - (3)].str), mm_strdup("}")); }
+    { (yyval.str) = cat_str(3, mm_strdup("{"), (yyvsp[(2) - (3)].str), mm_strdup("}")); ;}
     break;
 
   case 2651:
-
-/* Line 1806 of yacc.c  */
 #line 14388 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2652:
-
-/* Line 1806 of yacc.c  */
 #line 14389 "preproc.y"
-    { (yyval.str) = mm_strdup("("); }
+    { (yyval.str) = mm_strdup("("); ;}
     break;
 
   case 2653:
-
-/* Line 1806 of yacc.c  */
 #line 14390 "preproc.y"
-    { (yyval.str) = mm_strdup(")"); }
+    { (yyval.str) = mm_strdup(")"); ;}
     break;
 
   case 2654:
-
-/* Line 1806 of yacc.c  */
 #line 14391 "preproc.y"
-    { (yyval.str) = mm_strdup(","); }
+    { (yyval.str) = mm_strdup(","); ;}
     break;
 
   case 2655:
-
-/* Line 1806 of yacc.c  */
 #line 14392 "preproc.y"
-    { (yyval.str) = mm_strdup(";"); }
+    { (yyval.str) = mm_strdup(";"); ;}
     break;
 
   case 2656:
-
-/* Line 1806 of yacc.c  */
 #line 14395 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2657:
-
-/* Line 1806 of yacc.c  */
 #line 14396 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2658:
-
-/* Line 1806 of yacc.c  */
 #line 14397 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2659:
-
-/* Line 1806 of yacc.c  */
 #line 14398 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2660:
-
-/* Line 1806 of yacc.c  */
 #line 14399 "preproc.y"
-    { (yyval.str) = mm_strdup("*"); }
+    { (yyval.str) = mm_strdup("*"); ;}
     break;
 
   case 2661:
-
-/* Line 1806 of yacc.c  */
 #line 14400 "preproc.y"
-    { (yyval.str) = mm_strdup("+"); }
+    { (yyval.str) = mm_strdup("+"); ;}
     break;
 
   case 2662:
-
-/* Line 1806 of yacc.c  */
 #line 14401 "preproc.y"
-    { (yyval.str) = mm_strdup("-"); }
+    { (yyval.str) = mm_strdup("-"); ;}
     break;
 
   case 2663:
-
-/* Line 1806 of yacc.c  */
 #line 14402 "preproc.y"
-    { (yyval.str) = mm_strdup("/"); }
+    { (yyval.str) = mm_strdup("/"); ;}
     break;
 
   case 2664:
-
-/* Line 1806 of yacc.c  */
 #line 14403 "preproc.y"
-    { (yyval.str) = mm_strdup("%"); }
+    { (yyval.str) = mm_strdup("%"); ;}
     break;
 
   case 2665:
-
-/* Line 1806 of yacc.c  */
 #line 14404 "preproc.y"
-    { (yyval.str) = mm_strdup("NULL"); }
+    { (yyval.str) = mm_strdup("NULL"); ;}
     break;
 
   case 2666:
-
-/* Line 1806 of yacc.c  */
 #line 14405 "preproc.y"
-    { (yyval.str) = mm_strdup("+="); }
+    { (yyval.str) = mm_strdup("+="); ;}
     break;
 
   case 2667:
-
-/* Line 1806 of yacc.c  */
 #line 14406 "preproc.y"
-    { (yyval.str) = mm_strdup("&&"); }
+    { (yyval.str) = mm_strdup("&&"); ;}
     break;
 
   case 2668:
-
-/* Line 1806 of yacc.c  */
 #line 14407 "preproc.y"
-    { (yyval.str) = make_name(); }
+    { (yyval.str) = make_name(); ;}
     break;
 
   case 2669:
-
-/* Line 1806 of yacc.c  */
 #line 14408 "preproc.y"
-    { (yyval.str) = mm_strdup("auto"); }
+    { (yyval.str) = mm_strdup("auto"); ;}
     break;
 
   case 2670:
-
-/* Line 1806 of yacc.c  */
 #line 14409 "preproc.y"
-    { (yyval.str) = mm_strdup("const"); }
+    { (yyval.str) = mm_strdup("const"); ;}
     break;
 
   case 2671:
-
-/* Line 1806 of yacc.c  */
 #line 14410 "preproc.y"
-    { (yyval.str) = mm_strdup("--"); }
+    { (yyval.str) = mm_strdup("--"); ;}
     break;
 
   case 2672:
-
-/* Line 1806 of yacc.c  */
 #line 14411 "preproc.y"
-    { (yyval.str) = mm_strdup("/="); }
+    { (yyval.str) = mm_strdup("/="); ;}
     break;
 
   case 2673:
-
-/* Line 1806 of yacc.c  */
 #line 14412 "preproc.y"
-    { (yyval.str) = mm_strdup(".*"); }
+    { (yyval.str) = mm_strdup(".*"); ;}
     break;
 
   case 2674:
-
-/* Line 1806 of yacc.c  */
 #line 14413 "preproc.y"
-    { (yyval.str) = mm_strdup("=="); }
+    { (yyval.str) = mm_strdup("=="); ;}
     break;
 
   case 2675:
-
-/* Line 1806 of yacc.c  */
 #line 14414 "preproc.y"
-    { (yyval.str) = mm_strdup("extern"); }
+    { (yyval.str) = mm_strdup("extern"); ;}
     break;
 
   case 2676:
-
-/* Line 1806 of yacc.c  */
 #line 14415 "preproc.y"
-    { (yyval.str) = mm_strdup("++"); }
+    { (yyval.str) = mm_strdup("++"); ;}
     break;
 
   case 2677:
-
-/* Line 1806 of yacc.c  */
 #line 14416 "preproc.y"
-    { (yyval.str) = mm_strdup("<<"); }
+    { (yyval.str) = mm_strdup("<<"); ;}
     break;
 
   case 2678:
-
-/* Line 1806 of yacc.c  */
 #line 14417 "preproc.y"
-    { (yyval.str) = mm_strdup("->"); }
+    { (yyval.str) = mm_strdup("->"); ;}
     break;
 
   case 2679:
-
-/* Line 1806 of yacc.c  */
 #line 14418 "preproc.y"
-    { (yyval.str) = mm_strdup("->*"); }
+    { (yyval.str) = mm_strdup("->*"); ;}
     break;
 
   case 2680:
-
-/* Line 1806 of yacc.c  */
 #line 14419 "preproc.y"
-    { (yyval.str) = mm_strdup("%="); }
+    { (yyval.str) = mm_strdup("%="); ;}
     break;
 
   case 2681:
-
-/* Line 1806 of yacc.c  */
 #line 14420 "preproc.y"
-    { (yyval.str) = mm_strdup("*="); }
+    { (yyval.str) = mm_strdup("*="); ;}
     break;
 
   case 2682:
-
-/* Line 1806 of yacc.c  */
 #line 14421 "preproc.y"
-    { (yyval.str) = mm_strdup("!="); }
+    { (yyval.str) = mm_strdup("!="); ;}
     break;
 
   case 2683:
-
-/* Line 1806 of yacc.c  */
 #line 14422 "preproc.y"
-    { (yyval.str) = mm_strdup("||"); }
+    { (yyval.str) = mm_strdup("||"); ;}
     break;
 
   case 2684:
-
-/* Line 1806 of yacc.c  */
 #line 14423 "preproc.y"
-    { (yyval.str) = mm_strdup("register"); }
+    { (yyval.str) = mm_strdup("register"); ;}
     break;
 
   case 2685:
-
-/* Line 1806 of yacc.c  */
 #line 14424 "preproc.y"
-    { (yyval.str) = mm_strdup(">>"); }
+    { (yyval.str) = mm_strdup(">>"); ;}
     break;
 
   case 2686:
-
-/* Line 1806 of yacc.c  */
 #line 14425 "preproc.y"
-    { (yyval.str) = mm_strdup("static"); }
+    { (yyval.str) = mm_strdup("static"); ;}
     break;
 
   case 2687:
-
-/* Line 1806 of yacc.c  */
 #line 14426 "preproc.y"
-    { (yyval.str) = mm_strdup("-="); }
+    { (yyval.str) = mm_strdup("-="); ;}
     break;
 
   case 2688:
-
-/* Line 1806 of yacc.c  */
 #line 14427 "preproc.y"
-    { (yyval.str) = mm_strdup("typedef"); }
+    { (yyval.str) = mm_strdup("typedef"); ;}
     break;
 
   case 2689:
-
-/* Line 1806 of yacc.c  */
 #line 14428 "preproc.y"
-    { (yyval.str) = mm_strdup("volatile"); }
+    { (yyval.str) = mm_strdup("volatile"); ;}
     break;
 
   case 2690:
-
-/* Line 1806 of yacc.c  */
 #line 14429 "preproc.y"
-    { (yyval.str) = mm_strdup("bool"); }
+    { (yyval.str) = mm_strdup("bool"); ;}
     break;
 
   case 2691:
-
-/* Line 1806 of yacc.c  */
 #line 14430 "preproc.y"
-    { (yyval.str) = mm_strdup("enum"); }
+    { (yyval.str) = mm_strdup("enum"); ;}
     break;
 
   case 2692:
-
-/* Line 1806 of yacc.c  */
 #line 14431 "preproc.y"
-    { (yyval.str) = mm_strdup("hour"); }
+    { (yyval.str) = mm_strdup("hour"); ;}
     break;
 
   case 2693:
-
-/* Line 1806 of yacc.c  */
 #line 14432 "preproc.y"
-    { (yyval.str) = mm_strdup("int"); }
+    { (yyval.str) = mm_strdup("int"); ;}
     break;
 
   case 2694:
-
-/* Line 1806 of yacc.c  */
 #line 14433 "preproc.y"
-    { (yyval.str) = mm_strdup("long"); }
+    { (yyval.str) = mm_strdup("long"); ;}
     break;
 
   case 2695:
-
-/* Line 1806 of yacc.c  */
 #line 14434 "preproc.y"
-    { (yyval.str) = mm_strdup("minute"); }
+    { (yyval.str) = mm_strdup("minute"); ;}
     break;
 
   case 2696:
-
-/* Line 1806 of yacc.c  */
 #line 14435 "preproc.y"
-    { (yyval.str) = mm_strdup("month"); }
+    { (yyval.str) = mm_strdup("month"); ;}
     break;
 
   case 2697:
-
-/* Line 1806 of yacc.c  */
 #line 14436 "preproc.y"
-    { (yyval.str) = mm_strdup("second"); }
+    { (yyval.str) = mm_strdup("second"); ;}
     break;
 
   case 2698:
-
-/* Line 1806 of yacc.c  */
 #line 14437 "preproc.y"
-    { (yyval.str) = mm_strdup("short"); }
+    { (yyval.str) = mm_strdup("short"); ;}
     break;
 
   case 2699:
-
-/* Line 1806 of yacc.c  */
 #line 14438 "preproc.y"
-    { (yyval.str) = mm_strdup("signed"); }
+    { (yyval.str) = mm_strdup("signed"); ;}
     break;
 
   case 2700:
-
-/* Line 1806 of yacc.c  */
 #line 14439 "preproc.y"
-    { (yyval.str) = mm_strdup("struct"); }
+    { (yyval.str) = mm_strdup("struct"); ;}
     break;
 
   case 2701:
-
-/* Line 1806 of yacc.c  */
 #line 14440 "preproc.y"
-    { (yyval.str) = mm_strdup("unsigned"); }
+    { (yyval.str) = mm_strdup("unsigned"); ;}
     break;
 
   case 2702:
-
-/* Line 1806 of yacc.c  */
 #line 14441 "preproc.y"
-    { (yyval.str) = mm_strdup("year"); }
+    { (yyval.str) = mm_strdup("year"); ;}
     break;
 
   case 2703:
-
-/* Line 1806 of yacc.c  */
 #line 14442 "preproc.y"
-    { (yyval.str) = mm_strdup("char"); }
+    { (yyval.str) = mm_strdup("char"); ;}
     break;
 
   case 2704:
-
-/* Line 1806 of yacc.c  */
 #line 14443 "preproc.y"
-    { (yyval.str) = mm_strdup("float"); }
+    { (yyval.str) = mm_strdup("float"); ;}
     break;
 
   case 2705:
-
-/* Line 1806 of yacc.c  */
 #line 14444 "preproc.y"
-    { (yyval.str) = mm_strdup("to"); }
+    { (yyval.str) = mm_strdup("to"); ;}
     break;
 
   case 2706:
-
-/* Line 1806 of yacc.c  */
 #line 14445 "preproc.y"
-    { (yyval.str) = mm_strdup("union"); }
+    { (yyval.str) = mm_strdup("union"); ;}
     break;
 
   case 2707:
-
-/* Line 1806 of yacc.c  */
 #line 14446 "preproc.y"
-    { (yyval.str) = mm_strdup("varchar"); }
+    { (yyval.str) = mm_strdup("varchar"); ;}
     break;
 
   case 2708:
-
-/* Line 1806 of yacc.c  */
 #line 14447 "preproc.y"
-    { (yyval.str) = mm_strdup("["); }
+    { (yyval.str) = mm_strdup("["); ;}
     break;
 
   case 2709:
-
-/* Line 1806 of yacc.c  */
 #line 14448 "preproc.y"
-    { (yyval.str) = mm_strdup("]"); }
+    { (yyval.str) = mm_strdup("]"); ;}
     break;
 
   case 2710:
-
-/* Line 1806 of yacc.c  */
 #line 14449 "preproc.y"
-    { (yyval.str) = mm_strdup("="); }
+    { (yyval.str) = mm_strdup("="); ;}
     break;
 
   case 2711:
-
-/* Line 1806 of yacc.c  */
 #line 14450 "preproc.y"
-    { (yyval.str) = mm_strdup(":"); }
+    { (yyval.str) = mm_strdup(":"); ;}
     break;
 
   case 2712:
-
-/* Line 1806 of yacc.c  */
 #line 14453 "preproc.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 2713:
-
-/* Line 1806 of yacc.c  */
 #line 14454 "preproc.y"
-    { (yyval.str) = (yyvsp[(3) - (3)].str); }
+    { (yyval.str) = (yyvsp[(3) - (3)].str); ;}
     break;
 
   case 2714:
-
-/* Line 1806 of yacc.c  */
 #line 14455 "preproc.y"
-    { (yyval.str) = mm_strdup("all"); }
+    { (yyval.str) = mm_strdup("all"); ;}
     break;
 
   case 2715:
-
-/* Line 1806 of yacc.c  */
 #line 14456 "preproc.y"
-    { (yyval.str) = mm_strdup("all"); }
+    { (yyval.str) = mm_strdup("all"); ;}
     break;
 
   case 2716:
-
-/* Line 1806 of yacc.c  */
 #line 14459 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2717:
-
-/* Line 1806 of yacc.c  */
 #line 14460 "preproc.y"
-    { (yyval.str) = cat_str(3, mm_strdup("("), (yyvsp[(2) - (3)].str), mm_strdup(")")); }
+    { (yyval.str) = cat_str(3, mm_strdup("("), (yyvsp[(2) - (3)].str), mm_strdup(")")); ;}
     break;
 
   case 2718:
-
-/* Line 1806 of yacc.c  */
 #line 14461 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("+"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("+"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2719:
-
-/* Line 1806 of yacc.c  */
 #line 14462 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("-"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("-"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2720:
-
-/* Line 1806 of yacc.c  */
 #line 14463 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("*"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("*"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2721:
-
-/* Line 1806 of yacc.c  */
 #line 14464 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("/"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("/"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2722:
-
-/* Line 1806 of yacc.c  */
 #line 14465 "preproc.y"
-    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("%"), (yyvsp[(3) - (3)].str)); }
+    { (yyval.str) = cat_str(3, (yyvsp[(1) - (3)].str), mm_strdup("%"), (yyvsp[(3) - (3)].str)); ;}
     break;
 
   case 2723:
-
-/* Line 1806 of yacc.c  */
 #line 14466 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2724:
-
-/* Line 1806 of yacc.c  */
 #line 14467 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2725:
-
-/* Line 1806 of yacc.c  */
 #line 14470 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2726:
-
-/* Line 1806 of yacc.c  */
 #line 14471 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2727:
-
-/* Line 1806 of yacc.c  */
 #line 14472 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2728:
-
-/* Line 1806 of yacc.c  */
 #line 14473 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2729:
-
-/* Line 1806 of yacc.c  */
 #line 14474 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2730:
-
-/* Line 1806 of yacc.c  */
 #line 14477 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2731:
-
-/* Line 1806 of yacc.c  */
 #line 14478 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2732:
-
-/* Line 1806 of yacc.c  */
 #line 14481 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 2733:
-
-/* Line 1806 of yacc.c  */
 #line 14483 "preproc.y"
     {
 		struct variable *var;
@@ -51862,40 +46864,24 @@
 		remove_variable_from_list(&argsinsert, var);
 		add_variable_to_head(&argsresult, var, &no_indicator);
 		(yyval.str) = (yyvsp[(1) - (1)].str);
-	}
+	;}
     break;
 
   case 2734:
-
-/* Line 1806 of yacc.c  */
 #line 14493 "preproc.y"
-    { (yyval.str) = EMPTY; }
+    { (yyval.str) = EMPTY; ;}
     break;
 
   case 2735:
-
-/* Line 1806 of yacc.c  */
 #line 14494 "preproc.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 51886 "preproc.c"
+/* Line 1267 of yacc.c.  */
+#line 46883 "preproc.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -51924,10 +46910,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -51935,44 +46917,45 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
-  yyerror_range[1] = yylloc;
+  yyerror_range[0] = yylloc;
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -51989,7 +46972,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -52005,7 +46988,7 @@
   if (/*CONSTCOND*/ 0)
      goto yyerrorlab;
 
-  yyerror_range[1] = yylsp[1-yylen];
+  yyerror_range[0] = yylsp[1-yylen];
   /* Do not reclaim the symbols of the rule which action triggered
      this YYERROR.  */
   YYPOPSTACK (yylen);
@@ -52024,7 +47007,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -52039,7 +47022,7 @@
       if (yyssp == yyss)
 	YYABORT;
 
-      yyerror_range[1] = *yylsp;
+      yyerror_range[0] = *yylsp;
       yydestruct ("Error: popping",
 		  yystos[yystate], yyvsp, yylsp);
       YYPOPSTACK (1);
@@ -52047,12 +47030,15 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
-  yyerror_range[2] = yylloc;
+  yyerror_range[1] = yylloc;
   /* Using YYLLOC is tempting, but would change the location of
-     the lookahead.  YYLOC is available though.  */
-  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
+     the look-ahead.  YYLOC is available though.  */
+  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
   *++yylsp = yyloc;
 
   /* Shift the error token.  */
@@ -52076,7 +47062,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -52087,14 +47073,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, &yylloc);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, &yylloc);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -52118,8 +47099,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 14497 "preproc.y"
 
 
diff -Naur postgresql-9.2.13/src/interfaces/ecpg/preproc/preproc.h postgresql/src/interfaces/ecpg/preproc/preproc.h
--- postgresql-9.2.13/src/interfaces/ecpg/preproc/preproc.h	2015-06-09 12:48:20.000000000 -0700
+++ postgresql/src/interfaces/ecpg/preproc/preproc.h	2015-07-01 18:06:02.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton interface for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,11 +29,10 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -528,16 +530,504 @@
      UMINUS = 746
    };
 #endif
+/* Tokens.  */
+#define SQL_ALLOCATE 258
+#define SQL_AUTOCOMMIT 259
+#define SQL_BOOL 260
+#define SQL_BREAK 261
+#define SQL_CALL 262
+#define SQL_CARDINALITY 263
+#define SQL_CONNECT 264
+#define SQL_COUNT 265
+#define SQL_DATETIME_INTERVAL_CODE 266
+#define SQL_DATETIME_INTERVAL_PRECISION 267
+#define SQL_DESCRIBE 268
+#define SQL_DESCRIPTOR 269
+#define SQL_DISCONNECT 270
+#define SQL_FOUND 271
+#define SQL_FREE 272
+#define SQL_GET 273
+#define SQL_GO 274
+#define SQL_GOTO 275
+#define SQL_IDENTIFIED 276
+#define SQL_INDICATOR 277
+#define SQL_KEY_MEMBER 278
+#define SQL_LENGTH 279
+#define SQL_LONG 280
+#define SQL_NULLABLE 281
+#define SQL_OCTET_LENGTH 282
+#define SQL_OPEN 283
+#define SQL_OUTPUT 284
+#define SQL_REFERENCE 285
+#define SQL_RETURNED_LENGTH 286
+#define SQL_RETURNED_OCTET_LENGTH 287
+#define SQL_SCALE 288
+#define SQL_SECTION 289
+#define SQL_SHORT 290
+#define SQL_SIGNED 291
+#define SQL_SQL 292
+#define SQL_SQLERROR 293
+#define SQL_SQLPRINT 294
+#define SQL_SQLWARNING 295
+#define SQL_START 296
+#define SQL_STOP 297
+#define SQL_STRUCT 298
+#define SQL_UNSIGNED 299
+#define SQL_VAR 300
+#define SQL_WHENEVER 301
+#define S_ADD 302
+#define S_AND 303
+#define S_ANYTHING 304
+#define S_AUTO 305
+#define S_CONST 306
+#define S_DEC 307
+#define S_DIV 308
+#define S_DOTPOINT 309
+#define S_EQUAL 310
+#define S_EXTERN 311
+#define S_INC 312
+#define S_LSHIFT 313
+#define S_MEMPOINT 314
+#define S_MEMBER 315
+#define S_MOD 316
+#define S_MUL 317
+#define S_NEQUAL 318
+#define S_OR 319
+#define S_REGISTER 320
+#define S_RSHIFT 321
+#define S_STATIC 322
+#define S_SUB 323
+#define S_VOLATILE 324
+#define S_TYPEDEF 325
+#define CSTRING 326
+#define CVARIABLE 327
+#define CPP_LINE 328
+#define IP 329
+#define DOLCONST 330
+#define ECONST 331
+#define NCONST 332
+#define UCONST 333
+#define UIDENT 334
+#define IDENT 335
+#define FCONST 336
+#define SCONST 337
+#define BCONST 338
+#define XCONST 339
+#define Op 340
+#define ICONST 341
+#define PARAM 342
+#define TYPECAST 343
+#define DOT_DOT 344
+#define COLON_EQUALS 345
+#define ABORT_P 346
+#define ABSOLUTE_P 347
+#define ACCESS 348
+#define ACTION 349
+#define ADD_P 350
+#define ADMIN 351
+#define AFTER 352
+#define AGGREGATE 353
+#define ALL 354
+#define ALSO 355
+#define ALTER 356
+#define ALWAYS 357
+#define ANALYSE 358
+#define ANALYZE 359
+#define AND 360
+#define ANY 361
+#define ARRAY 362
+#define AS 363
+#define ASC 364
+#define ASSERTION 365
+#define ASSIGNMENT 366
+#define ASYMMETRIC 367
+#define AT 368
+#define ATTRIBUTE 369
+#define AUTHORIZATION 370
+#define BACKWARD 371
+#define BEFORE 372
+#define BEGIN_P 373
+#define BETWEEN 374
+#define BIGINT 375
+#define BINARY 376
+#define BIT 377
+#define BOOLEAN_P 378
+#define BOTH 379
+#define BY 380
+#define CACHE 381
+#define CALLED 382
+#define CASCADE 383
+#define CASCADED 384
+#define CASE 385
+#define CAST 386
+#define CATALOG_P 387
+#define CHAIN 388
+#define CHAR_P 389
+#define CHARACTER 390
+#define CHARACTERISTICS 391
+#define CHECK 392
+#define CHECKPOINT 393
+#define CLASS 394
+#define CLOSE 395
+#define CLUSTER 396
+#define COALESCE 397
+#define COLLATE 398
+#define COLLATION 399
+#define COLUMN 400
+#define COMMENT 401
+#define COMMENTS 402
+#define COMMIT 403
+#define COMMITTED 404
+#define CONCURRENTLY 405
+#define CONFIGURATION 406
+#define CONNECTION 407
+#define CONSTRAINT 408
+#define CONSTRAINTS 409
+#define CONTENT_P 410
+#define CONTINUE_P 411
+#define CONVERSION_P 412
+#define COPY 413
+#define COST 414
+#define CREATE 415
+#define CROSS 416
+#define CSV 417
+#define CURRENT_P 418
+#define CURRENT_CATALOG 419
+#define CURRENT_DATE 420
+#define CURRENT_ROLE 421
+#define CURRENT_SCHEMA 422
+#define CURRENT_TIME 423
+#define CURRENT_TIMESTAMP 424
+#define CURRENT_USER 425
+#define CURSOR 426
+#define CYCLE 427
+#define DATA_P 428
+#define DATABASE 429
+#define DAY_P 430
+#define DEALLOCATE 431
+#define DEC 432
+#define DECIMAL_P 433
+#define DECLARE 434
+#define DEFAULT 435
+#define DEFAULTS 436
+#define DEFERRABLE 437
+#define DEFERRED 438
+#define DEFINER 439
+#define DELETE_P 440
+#define DELIMITER 441
+#define DELIMITERS 442
+#define DESC 443
+#define DICTIONARY 444
+#define DISABLE_P 445
+#define DISCARD 446
+#define DISTINCT 447
+#define DO 448
+#define DOCUMENT_P 449
+#define DOMAIN_P 450
+#define DOUBLE_P 451
+#define DROP 452
+#define EACH 453
+#define ELSE 454
+#define ENABLE_P 455
+#define ENCODING 456
+#define ENCRYPTED 457
+#define END_P 458
+#define ENUM_P 459
+#define ESCAPE 460
+#define EXCEPT 461
+#define EXCLUDE 462
+#define EXCLUDING 463
+#define EXCLUSIVE 464
+#define EXECUTE 465
+#define EXISTS 466
+#define EXPLAIN 467
+#define EXTENSION 468
+#define EXTERNAL 469
+#define EXTRACT 470
+#define FALSE_P 471
+#define FAMILY 472
+#define FETCH 473
+#define FIRST_P 474
+#define FLOAT_P 475
+#define FOLLOWING 476
+#define FOR 477
+#define FORCE 478
+#define FOREIGN 479
+#define FORWARD 480
+#define FREEZE 481
+#define FROM 482
+#define FULL 483
+#define FUNCTION 484
+#define FUNCTIONS 485
+#define GLOBAL 486
+#define GRANT 487
+#define GRANTED 488
+#define GREATEST 489
+#define GROUP_P 490
+#define HANDLER 491
+#define HAVING 492
+#define HEADER_P 493
+#define HOLD 494
+#define HOUR_P 495
+#define IDENTITY_P 496
+#define IF_P 497
+#define ILIKE 498
+#define IMMEDIATE 499
+#define IMMUTABLE 500
+#define IMPLICIT_P 501
+#define IN_P 502
+#define INCLUDING 503
+#define INCREMENT 504
+#define INDEX 505
+#define INDEXES 506
+#define INHERIT 507
+#define INHERITS 508
+#define INITIALLY 509
+#define INLINE_P 510
+#define INNER_P 511
+#define INOUT 512
+#define INPUT_P 513
+#define INSENSITIVE 514
+#define INSERT 515
+#define INSTEAD 516
+#define INT_P 517
+#define INTEGER 518
+#define INTERSECT 519
+#define INTERVAL 520
+#define INTO 521
+#define INVOKER 522
+#define IS 523
+#define ISNULL 524
+#define ISOLATION 525
+#define JOIN 526
+#define KEY 527
+#define LABEL 528
+#define LANGUAGE 529
+#define LARGE_P 530
+#define LAST_P 531
+#define LC_COLLATE_P 532
+#define LC_CTYPE_P 533
+#define LEADING 534
+#define LEAKPROOF 535
+#define LEAST 536
+#define LEFT 537
+#define LEVEL 538
+#define LIKE 539
+#define LIMIT 540
+#define LISTEN 541
+#define LOAD 542
+#define LOCAL 543
+#define LOCALTIME 544
+#define LOCALTIMESTAMP 545
+#define LOCATION 546
+#define LOCK_P 547
+#define MAPPING 548
+#define MATCH 549
+#define MAXVALUE 550
+#define MINUTE_P 551
+#define MINVALUE 552
+#define MODE 553
+#define MONTH_P 554
+#define MOVE 555
+#define NAME_P 556
+#define NAMES 557
+#define NATIONAL 558
+#define NATURAL 559
+#define NCHAR 560
+#define NEXT 561
+#define NO 562
+#define NONE 563
+#define NOT 564
+#define NOTHING 565
+#define NOTIFY 566
+#define NOTNULL 567
+#define NOWAIT 568
+#define NULL_P 569
+#define NULLIF 570
+#define NULLS_P 571
+#define NUMERIC 572
+#define OBJECT_P 573
+#define OF 574
+#define OFF 575
+#define OFFSET 576
+#define OIDS 577
+#define ON 578
+#define ONLY 579
+#define OPERATOR 580
+#define OPTION 581
+#define OPTIONS 582
+#define OR 583
+#define ORDER 584
+#define OUT_P 585
+#define OUTER_P 586
+#define OVER 587
+#define OVERLAPS 588
+#define OVERLAY 589
+#define OWNED 590
+#define OWNER 591
+#define PARSER 592
+#define PARTIAL 593
+#define PARTITION 594
+#define PASSING 595
+#define PASSWORD 596
+#define PLACING 597
+#define PLANS 598
+#define POSITION 599
+#define PRECEDING 600
+#define PRECISION 601
+#define PRESERVE 602
+#define PREPARE 603
+#define PREPARED 604
+#define PRIMARY 605
+#define PRIOR 606
+#define PRIVILEGES 607
+#define PROCEDURAL 608
+#define PROCEDURE 609
+#define QUOTE 610
+#define RANGE 611
+#define READ 612
+#define REAL 613
+#define REASSIGN 614
+#define RECHECK 615
+#define RECURSIVE 616
+#define REF 617
+#define REFERENCES 618
+#define REINDEX 619
+#define RELATIVE_P 620
+#define RELEASE 621
+#define RENAME 622
+#define REPEATABLE 623
+#define REPLACE 624
+#define REPLICA 625
+#define RESET 626
+#define RESTART 627
+#define RESTRICT 628
+#define RETURNING 629
+#define RETURNS 630
+#define REVOKE 631
+#define RIGHT 632
+#define ROLE 633
+#define ROLLBACK 634
+#define ROW 635
+#define ROWS 636
+#define RULE 637
+#define SAVEPOINT 638
+#define SCHEMA 639
+#define SCROLL 640
+#define SEARCH 641
+#define SECOND_P 642
+#define SECURITY 643
+#define SELECT 644
+#define SEQUENCE 645
+#define SEQUENCES 646
+#define SERIALIZABLE 647
+#define SERVER 648
+#define SESSION 649
+#define SESSION_USER 650
+#define SET 651
+#define SETOF 652
+#define SHARE 653
+#define SHOW 654
+#define SIMILAR 655
+#define SIMPLE 656
+#define SMALLINT 657
+#define SNAPSHOT 658
+#define SOME 659
+#define STABLE 660
+#define STANDALONE_P 661
+#define START 662
+#define STATEMENT 663
+#define STATISTICS 664
+#define STDIN 665
+#define STDOUT 666
+#define STORAGE 667
+#define STRICT_P 668
+#define STRIP_P 669
+#define SUBSTRING 670
+#define SYMMETRIC 671
+#define SYSID 672
+#define SYSTEM_P 673
+#define TABLE 674
+#define TABLES 675
+#define TABLESPACE 676
+#define TEMP 677
+#define TEMPLATE 678
+#define TEMPORARY 679
+#define TEXT_P 680
+#define THEN 681
+#define TIME 682
+#define TIMESTAMP 683
+#define TO 684
+#define TRAILING 685
+#define TRANSACTION 686
+#define TREAT 687
+#define TRIGGER 688
+#define TRIM 689
+#define TRUE_P 690
+#define TRUNCATE 691
+#define TRUSTED 692
+#define TYPE_P 693
+#define TYPES_P 694
+#define UNBOUNDED 695
+#define UNCOMMITTED 696
+#define UNENCRYPTED 697
+#define UNION 698
+#define UNIQUE 699
+#define UNKNOWN 700
+#define UNLISTEN 701
+#define UNLOGGED 702
+#define UNTIL 703
+#define UPDATE 704
+#define USER 705
+#define USING 706
+#define VACUUM 707
+#define VALID 708
+#define VALIDATE 709
+#define VALIDATOR 710
+#define VALUE_P 711
+#define VALUES 712
+#define VARCHAR 713
+#define VARIADIC 714
+#define VARYING 715
+#define VERBOSE 716
+#define VERSION_P 717
+#define VIEW 718
+#define VOLATILE 719
+#define WHEN 720
+#define WHERE 721
+#define WHITESPACE_P 722
+#define WINDOW 723
+#define WITH 724
+#define WITHOUT 725
+#define WORK 726
+#define WRAPPER 727
+#define WRITE 728
+#define XML_P 729
+#define XMLATTRIBUTES 730
+#define XMLCONCAT 731
+#define XMLELEMENT 732
+#define XMLEXISTS 733
+#define XMLFOREST 734
+#define XMLPARSE 735
+#define XMLPI 736
+#define XMLROOT 737
+#define XMLSERIALIZE 738
+#define YEAR_P 739
+#define YES_P 740
+#define ZONE 741
+#define NULLS_FIRST 742
+#define NULLS_LAST 743
+#define WITH_TIME 744
+#define POSTFIXOP 745
+#define UMINUS 746
+
 
 
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 2068 of yacc.c  */
 #line 564 "preproc.y"
-
+{
 	double	dval;
 	char	*str;
 	int		ival;
@@ -550,15 +1040,13 @@
 	struct	fetch_desc	descriptor;
 	struct  su_symbol	struct_union;
 	struct	prep		prep;
-
-
-
-/* Line 2068 of yacc.c  */
-#line 558 "preproc.h"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 1529 of yacc.c.  */
+#line 1046 "preproc.tab.h"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 extern YYSTYPE base_yylval;
@@ -577,4 +1065,3 @@
 #endif
 
 extern YYLTYPE base_yylloc;
-
diff -Naur postgresql-9.2.13/src/pl/plpgsql/src/pl_gram.c postgresql/src/pl/plpgsql/src/pl_gram.c
--- postgresql-9.2.13/src/pl/plpgsql/src/pl_gram.c	2015-06-09 12:48:20.000000000 -0700
+++ postgresql/src/pl/plpgsql/src/pl_gram.c	2015-07-01 18:04:55.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,235 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 1
 
 /* Substitute the variable and function names.  */
-#define yyparse         plpgsql_yyparse
-#define yylex           plpgsql_yylex
-#define yyerror         plpgsql_yyerror
-#define yylval          plpgsql_yylval
-#define yychar          plpgsql_yychar
-#define yydebug         plpgsql_yydebug
-#define yynerrs         plpgsql_yynerrs
-#define yylloc          plpgsql_yylloc
+#define yyparse plpgsql_yyparse
+#define yylex   plpgsql_yylex
+#define yyerror plpgsql_yyerror
+#define yylval  plpgsql_yylval
+#define yychar  plpgsql_yychar
+#define yydebug plpgsql_yydebug
+#define yynerrs plpgsql_yynerrs
+#define yylloc plpgsql_yylloc
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     IDENT = 258,
+     FCONST = 259,
+     SCONST = 260,
+     BCONST = 261,
+     XCONST = 262,
+     Op = 263,
+     ICONST = 264,
+     PARAM = 265,
+     TYPECAST = 266,
+     DOT_DOT = 267,
+     COLON_EQUALS = 268,
+     T_WORD = 269,
+     T_CWORD = 270,
+     T_DATUM = 271,
+     LESS_LESS = 272,
+     GREATER_GREATER = 273,
+     K_ABSOLUTE = 274,
+     K_ALIAS = 275,
+     K_ALL = 276,
+     K_ARRAY = 277,
+     K_BACKWARD = 278,
+     K_BEGIN = 279,
+     K_BY = 280,
+     K_CASE = 281,
+     K_CLOSE = 282,
+     K_COLLATE = 283,
+     K_CONSTANT = 284,
+     K_CONTINUE = 285,
+     K_CURRENT = 286,
+     K_CURSOR = 287,
+     K_DEBUG = 288,
+     K_DECLARE = 289,
+     K_DEFAULT = 290,
+     K_DETAIL = 291,
+     K_DIAGNOSTICS = 292,
+     K_DUMP = 293,
+     K_ELSE = 294,
+     K_ELSIF = 295,
+     K_END = 296,
+     K_ERRCODE = 297,
+     K_ERROR = 298,
+     K_EXCEPTION = 299,
+     K_EXECUTE = 300,
+     K_EXIT = 301,
+     K_FETCH = 302,
+     K_FIRST = 303,
+     K_FOR = 304,
+     K_FOREACH = 305,
+     K_FORWARD = 306,
+     K_FROM = 307,
+     K_GET = 308,
+     K_HINT = 309,
+     K_IF = 310,
+     K_IN = 311,
+     K_INFO = 312,
+     K_INSERT = 313,
+     K_INTO = 314,
+     K_IS = 315,
+     K_LAST = 316,
+     K_LOG = 317,
+     K_LOOP = 318,
+     K_MESSAGE = 319,
+     K_MESSAGE_TEXT = 320,
+     K_MOVE = 321,
+     K_NEXT = 322,
+     K_NO = 323,
+     K_NOT = 324,
+     K_NOTICE = 325,
+     K_NULL = 326,
+     K_OPEN = 327,
+     K_OPTION = 328,
+     K_OR = 329,
+     K_PERFORM = 330,
+     K_PG_EXCEPTION_CONTEXT = 331,
+     K_PG_EXCEPTION_DETAIL = 332,
+     K_PG_EXCEPTION_HINT = 333,
+     K_PRIOR = 334,
+     K_QUERY = 335,
+     K_RAISE = 336,
+     K_RELATIVE = 337,
+     K_RESULT_OID = 338,
+     K_RETURN = 339,
+     K_RETURNED_SQLSTATE = 340,
+     K_REVERSE = 341,
+     K_ROWTYPE = 342,
+     K_ROW_COUNT = 343,
+     K_SCROLL = 344,
+     K_SLICE = 345,
+     K_SQLSTATE = 346,
+     K_STACKED = 347,
+     K_STRICT = 348,
+     K_THEN = 349,
+     K_TO = 350,
+     K_TYPE = 351,
+     K_USE_COLUMN = 352,
+     K_USE_VARIABLE = 353,
+     K_USING = 354,
+     K_VARIABLE_CONFLICT = 355,
+     K_WARNING = 356,
+     K_WHEN = 357,
+     K_WHILE = 358
+   };
+#endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define T_WORD 269
+#define T_CWORD 270
+#define T_DATUM 271
+#define LESS_LESS 272
+#define GREATER_GREATER 273
+#define K_ABSOLUTE 274
+#define K_ALIAS 275
+#define K_ALL 276
+#define K_ARRAY 277
+#define K_BACKWARD 278
+#define K_BEGIN 279
+#define K_BY 280
+#define K_CASE 281
+#define K_CLOSE 282
+#define K_COLLATE 283
+#define K_CONSTANT 284
+#define K_CONTINUE 285
+#define K_CURRENT 286
+#define K_CURSOR 287
+#define K_DEBUG 288
+#define K_DECLARE 289
+#define K_DEFAULT 290
+#define K_DETAIL 291
+#define K_DIAGNOSTICS 292
+#define K_DUMP 293
+#define K_ELSE 294
+#define K_ELSIF 295
+#define K_END 296
+#define K_ERRCODE 297
+#define K_ERROR 298
+#define K_EXCEPTION 299
+#define K_EXECUTE 300
+#define K_EXIT 301
+#define K_FETCH 302
+#define K_FIRST 303
+#define K_FOR 304
+#define K_FOREACH 305
+#define K_FORWARD 306
+#define K_FROM 307
+#define K_GET 308
+#define K_HINT 309
+#define K_IF 310
+#define K_IN 311
+#define K_INFO 312
+#define K_INSERT 313
+#define K_INTO 314
+#define K_IS 315
+#define K_LAST 316
+#define K_LOG 317
+#define K_LOOP 318
+#define K_MESSAGE 319
+#define K_MESSAGE_TEXT 320
+#define K_MOVE 321
+#define K_NEXT 322
+#define K_NO 323
+#define K_NOT 324
+#define K_NOTICE 325
+#define K_NULL 326
+#define K_OPEN 327
+#define K_OPTION 328
+#define K_OR 329
+#define K_PERFORM 330
+#define K_PG_EXCEPTION_CONTEXT 331
+#define K_PG_EXCEPTION_DETAIL 332
+#define K_PG_EXCEPTION_HINT 333
+#define K_PRIOR 334
+#define K_QUERY 335
+#define K_RAISE 336
+#define K_RELATIVE 337
+#define K_RESULT_OID 338
+#define K_RETURN 339
+#define K_RETURNED_SQLSTATE 340
+#define K_REVERSE 341
+#define K_ROWTYPE 342
+#define K_ROW_COUNT 343
+#define K_SCROLL 344
+#define K_SLICE 345
+#define K_SQLSTATE 346
+#define K_STACKED 347
+#define K_STRICT 348
+#define K_THEN 349
+#define K_TO 350
+#define K_TYPE 351
+#define K_USE_COLUMN 352
+#define K_USE_VARIABLE 353
+#define K_USING 354
+#define K_VARIABLE_CONFLICT 355
+#define K_WARNING 356
+#define K_WHEN 357
+#define K_WHILE 358
 
-/* Copy the first part of user declarations.  */
 
-/* Line 268 of yacc.c  */
+
+
+/* Copy the first part of user declarations.  */
 #line 1 "gram.y"
 
 /*-------------------------------------------------------------------------
@@ -186,9 +396,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 191 "pl_gram.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -207,126 +414,10 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     IDENT = 258,
-     FCONST = 259,
-     SCONST = 260,
-     BCONST = 261,
-     XCONST = 262,
-     Op = 263,
-     ICONST = 264,
-     PARAM = 265,
-     TYPECAST = 266,
-     DOT_DOT = 267,
-     COLON_EQUALS = 268,
-     T_WORD = 269,
-     T_CWORD = 270,
-     T_DATUM = 271,
-     LESS_LESS = 272,
-     GREATER_GREATER = 273,
-     K_ABSOLUTE = 274,
-     K_ALIAS = 275,
-     K_ALL = 276,
-     K_ARRAY = 277,
-     K_BACKWARD = 278,
-     K_BEGIN = 279,
-     K_BY = 280,
-     K_CASE = 281,
-     K_CLOSE = 282,
-     K_COLLATE = 283,
-     K_CONSTANT = 284,
-     K_CONTINUE = 285,
-     K_CURRENT = 286,
-     K_CURSOR = 287,
-     K_DEBUG = 288,
-     K_DECLARE = 289,
-     K_DEFAULT = 290,
-     K_DETAIL = 291,
-     K_DIAGNOSTICS = 292,
-     K_DUMP = 293,
-     K_ELSE = 294,
-     K_ELSIF = 295,
-     K_END = 296,
-     K_ERRCODE = 297,
-     K_ERROR = 298,
-     K_EXCEPTION = 299,
-     K_EXECUTE = 300,
-     K_EXIT = 301,
-     K_FETCH = 302,
-     K_FIRST = 303,
-     K_FOR = 304,
-     K_FOREACH = 305,
-     K_FORWARD = 306,
-     K_FROM = 307,
-     K_GET = 308,
-     K_HINT = 309,
-     K_IF = 310,
-     K_IN = 311,
-     K_INFO = 312,
-     K_INSERT = 313,
-     K_INTO = 314,
-     K_IS = 315,
-     K_LAST = 316,
-     K_LOG = 317,
-     K_LOOP = 318,
-     K_MESSAGE = 319,
-     K_MESSAGE_TEXT = 320,
-     K_MOVE = 321,
-     K_NEXT = 322,
-     K_NO = 323,
-     K_NOT = 324,
-     K_NOTICE = 325,
-     K_NULL = 326,
-     K_OPEN = 327,
-     K_OPTION = 328,
-     K_OR = 329,
-     K_PERFORM = 330,
-     K_PG_EXCEPTION_CONTEXT = 331,
-     K_PG_EXCEPTION_DETAIL = 332,
-     K_PG_EXCEPTION_HINT = 333,
-     K_PRIOR = 334,
-     K_QUERY = 335,
-     K_RAISE = 336,
-     K_RELATIVE = 337,
-     K_RESULT_OID = 338,
-     K_RETURN = 339,
-     K_RETURNED_SQLSTATE = 340,
-     K_REVERSE = 341,
-     K_ROWTYPE = 342,
-     K_ROW_COUNT = 343,
-     K_SCROLL = 344,
-     K_SLICE = 345,
-     K_SQLSTATE = 346,
-     K_STACKED = 347,
-     K_STRICT = 348,
-     K_THEN = 349,
-     K_TO = 350,
-     K_TYPE = 351,
-     K_USE_COLUMN = 352,
-     K_USE_VARIABLE = 353,
-     K_USING = 354,
-     K_VARIABLE_CONFLICT = 355,
-     K_WARNING = 356,
-     K_WHEN = 357,
-     K_WHILE = 358
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 116 "gram.y"
-
+{
 		core_YYSTYPE			core_yystype;
 		/* these fields must match core_YYSTYPE: */
 		int						ival;
@@ -376,15 +467,13 @@
 		PLpgSQL_diag_item		*diagitem;
 		PLpgSQL_stmt_fetch		*fetch;
 		PLpgSQL_case_when		*casewhen;
-
-
-
-/* Line 293 of yacc.c  */
-#line 384 "pl_gram.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 473 "gram.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 #if ! defined YYLTYPE && ! defined YYLTYPE_IS_DECLARED
@@ -404,8 +493,8 @@
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 409 "pl_gram.c"
+/* Line 216 of yacc.c.  */
+#line 498 "gram.tab.c"
 
 #ifdef short
 # undef short
@@ -480,14 +569,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -508,11 +597,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -535,24 +624,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -569,9 +658,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-  YYLTYPE yyls_alloc;
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+    YYLTYPE yyls;
 };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
@@ -583,27 +672,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE) + sizeof (YYLTYPE)) \
       + 2 * YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -621,7 +689,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  3
@@ -819,7 +904,7 @@
   "'#'", "';'", "'('", "')'", "','", "'='", "'['", "$accept",
   "pl_function", "comp_options", "comp_option", "opt_semi", "pl_block",
   "decl_sect", "decl_start", "decl_stmts", "decl_stmt", "decl_statement",
-  "$@1", "opt_scrollable", "decl_cursor_query", "decl_cursor_args",
+  "@1", "opt_scrollable", "decl_cursor_query", "decl_cursor_args",
   "decl_cursor_arglist", "decl_cursor_arg", "decl_is_for",
   "decl_aliasitem", "decl_varname", "decl_const", "decl_datatype",
   "decl_collate", "decl_notnull", "decl_defval", "decl_defkey",
@@ -911,8 +996,8 @@
        1,     1,     1,     1,     1,     1,     1,     1,     1,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -1011,7 +1096,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -56
 static const yytype_int16 yytable[] =
 {
@@ -1075,12 +1161,6 @@
        0,     0,     0,     0,    41,     0,     0,    42
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-221))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int16 yycheck[] =
 {
        4,    17,    13,   176,    13,    13,    34,    39,   181,    39,
@@ -1189,18 +1269,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -1210,6 +1281,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -1372,20 +1444,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -1420,11 +1489,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       , &(yylsp[(yyi + 1) - (yynrhs)])		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -1461,6 +1530,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -1563,142 +1633,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1732,9 +1775,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1750,17 +1794,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
-/* Location data for the lookahead symbol.  */
-YYLTYPE yylloc;
-
 /* Number of syntax errors so far.  */
 int yynerrs;
+/* Location data for the look-ahead symbol.  */
+YYLTYPE yylloc;
+
 
 
 /*----------.
@@ -1789,47 +1834,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-       `yyls': related to locations.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    /* The location stack.  */
-    YYLTYPE yylsa[YYINITDEPTH];
-    YYLTYPE *yyls;
-    YYLTYPE *yylsp;
-
-    /* The locations where the error started and ended.  */
-    YYLTYPE yyerror_range[3];
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-  YYLTYPE yyloc;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1837,37 +1849,63 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+  /* The location stack.  */
+  YYLTYPE yylsa[YYINITDEPTH];
+  YYLTYPE *yyls = yylsa;
+  YYLTYPE *yylsp;
+  /* The locations where the error started and ended.  */
+  YYLTYPE yyerror_range[2];
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N), yylsp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+  YYLTYPE yyloc;
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yyls = yylsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
   yylsp = yyls;
-
 #if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
   /* Initialize the default location before parsing starts.  */
   yylloc.first_line   = yylloc.last_line   = 1;
-  yylloc.first_column = yylloc.last_column = 1;
+  yylloc.first_column = yylloc.last_column = 0;
 #endif
 
   goto yysetstate;
@@ -1906,7 +1944,6 @@
 		    &yyvs1, yysize * sizeof (*yyvsp),
 		    &yyls1, yysize * sizeof (*yylsp),
 		    &yystacksize);
-
 	yyls = yyls1;
 	yyss = yyss1;
 	yyvs = yyvs1;
@@ -1928,9 +1965,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
-	YYSTACK_RELOCATE (yyls_alloc, yyls);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+	YYSTACK_RELOCATE (yyls);
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1951,9 +1988,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1962,16 +1996,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1997,22 +2031,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -2053,53 +2091,41 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 333 "gram.y"
     {
 						plpgsql_parse_result = (PLpgSQL_stmt_block *) (yyvsp[(2) - (3)].stmt);
-					}
+					;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 343 "gram.y"
     {
 						plpgsql_DumpExecTree = true;
-					}
+					;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 347 "gram.y"
     {
 						plpgsql_curr_compile->resolve_option = PLPGSQL_RESOLVE_ERROR;
-					}
+					;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 351 "gram.y"
     {
 						plpgsql_curr_compile->resolve_option = PLPGSQL_RESOLVE_VARIABLE;
-					}
+					;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 355 "gram.y"
     {
 						plpgsql_curr_compile->resolve_option = PLPGSQL_RESOLVE_COLUMN;
-					}
+					;}
     break;
 
   case 11:
-
-/* Line 1806 of yacc.c  */
 #line 365 "gram.y"
     {
 						PLpgSQL_stmt_block *new;
@@ -2118,12 +2144,10 @@
 						plpgsql_ns_pop();
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 12:
-
-/* Line 1806 of yacc.c  */
 #line 387 "gram.y"
     {
 						/* done with decls, so resume identifier lookup */
@@ -2131,36 +2155,30 @@
 						(yyval.declhdr).label	  = (yyvsp[(1) - (1)].str);
 						(yyval.declhdr).n_initvars = 0;
 						(yyval.declhdr).initvarnos = NULL;
-					}
+					;}
     break;
 
   case 13:
-
-/* Line 1806 of yacc.c  */
 #line 395 "gram.y"
     {
 						plpgsql_IdentifierLookup = IDENTIFIER_LOOKUP_NORMAL;
 						(yyval.declhdr).label	  = (yyvsp[(1) - (2)].str);
 						(yyval.declhdr).n_initvars = 0;
 						(yyval.declhdr).initvarnos = NULL;
-					}
+					;}
     break;
 
   case 14:
-
-/* Line 1806 of yacc.c  */
 #line 402 "gram.y"
     {
 						plpgsql_IdentifierLookup = IDENTIFIER_LOOKUP_NORMAL;
 						(yyval.declhdr).label	  = (yyvsp[(1) - (3)].str);
 						/* Remember variables declared in decl_stmts */
 						(yyval.declhdr).n_initvars = plpgsql_add_initdatums(&((yyval.declhdr).initvarnos));
-					}
+					;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 411 "gram.y"
     {
 						/* Forget any variables created before block */
@@ -2170,21 +2188,17 @@
 						 * we process the decl_stmts
 						 */
 						plpgsql_IdentifierLookup = IDENTIFIER_LOOKUP_DECLARE;
-					}
+					;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 428 "gram.y"
     {
 						/* We allow useless extra DECLAREs */
-					}
+					;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 432 "gram.y"
     {
 						/*
@@ -2195,12 +2209,10 @@
 								(errcode(ERRCODE_SYNTAX_ERROR),
 								 errmsg("block label must be placed before DECLARE, not after"),
 								 parser_errposition((yylsp[(1) - (3)]))));
-					}
+					;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 445 "gram.y"
     {
 						PLpgSQL_variable	*var;
@@ -2255,29 +2267,23 @@
 										 errmsg("default value for row or record variable is not supported"),
 										 parser_errposition((yylsp[(5) - (6)]))));
 						}
-					}
+					;}
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 500 "gram.y"
     {
 						plpgsql_ns_additem((yyvsp[(4) - (5)].nsitem)->itemtype,
 										   (yyvsp[(4) - (5)].nsitem)->itemno, (yyvsp[(1) - (5)].varname).name);
-					}
+					;}
     break;
 
   case 23:
-
-/* Line 1806 of yacc.c  */
 #line 505 "gram.y"
-    { plpgsql_ns_push((yyvsp[(1) - (3)].varname).name); }
+    { plpgsql_ns_push((yyvsp[(1) - (3)].varname).name); ;}
     break;
 
   case 24:
-
-/* Line 1806 of yacc.c  */
 #line 507 "gram.y"
     {
 						PLpgSQL_var *new;
@@ -2325,57 +2331,45 @@
 						else
 							new->cursor_explicit_argrow = (yyvsp[(5) - (7)].datum)->dno;
 						new->cursor_options = CURSOR_OPT_FAST_PLAN | (yyvsp[(2) - (7)].ival);
-					}
+					;}
     break;
 
   case 25:
-
-/* Line 1806 of yacc.c  */
 #line 557 "gram.y"
     {
 						(yyval.ival) = 0;
-					}
+					;}
     break;
 
   case 26:
-
-/* Line 1806 of yacc.c  */
 #line 561 "gram.y"
     {
 						(yyval.ival) = CURSOR_OPT_NO_SCROLL;
-					}
+					;}
     break;
 
   case 27:
-
-/* Line 1806 of yacc.c  */
 #line 565 "gram.y"
     {
 						(yyval.ival) = CURSOR_OPT_SCROLL;
-					}
+					;}
     break;
 
   case 28:
-
-/* Line 1806 of yacc.c  */
 #line 571 "gram.y"
     {
 						(yyval.expr) = read_sql_stmt("");
-					}
+					;}
     break;
 
   case 29:
-
-/* Line 1806 of yacc.c  */
 #line 577 "gram.y"
     {
 						(yyval.datum) = NULL;
-					}
+					;}
     break;
 
   case 30:
-
-/* Line 1806 of yacc.c  */
 #line 581 "gram.y"
     {
 						PLpgSQL_row *new;
@@ -2402,41 +2396,33 @@
 
 						plpgsql_adddatum((PLpgSQL_datum *) new);
 						(yyval.datum) = (PLpgSQL_datum *) new;
-					}
+					;}
     break;
 
   case 31:
-
-/* Line 1806 of yacc.c  */
 #line 610 "gram.y"
     {
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].datum));
-					}
+					;}
     break;
 
   case 32:
-
-/* Line 1806 of yacc.c  */
 #line 614 "gram.y"
     {
 						(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].datum));
-					}
+					;}
     break;
 
   case 33:
-
-/* Line 1806 of yacc.c  */
 #line 620 "gram.y"
     {
 						(yyval.datum) = (PLpgSQL_datum *)
 							plpgsql_build_variable((yyvsp[(1) - (2)].varname).name, (yyvsp[(1) - (2)].varname).lineno,
 												   (yyvsp[(2) - (2)].dtype), true);
-					}
+					;}
     break;
 
   case 36:
-
-/* Line 1806 of yacc.c  */
 #line 631 "gram.y"
     {
 						PLpgSQL_nsitem *nsi;
@@ -2451,12 +2437,10 @@
 											(yyvsp[(1) - (1)].word).ident),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.nsitem) = nsi;
-					}
+					;}
     break;
 
   case 37:
-
-/* Line 1806 of yacc.c  */
 #line 646 "gram.y"
     {
 						PLpgSQL_nsitem *nsi;
@@ -2482,12 +2466,10 @@
 											NameListToString((yyvsp[(1) - (1)].cword).idents)),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.nsitem) = nsi;
-					}
+					;}
     break;
 
   case 38:
-
-/* Line 1806 of yacc.c  */
 #line 674 "gram.y"
     {
 						(yyval.varname).name = (yyvsp[(1) - (1)].word).ident;
@@ -2500,12 +2482,10 @@
 											  (yyvsp[(1) - (1)].word).ident, NULL, NULL,
 											  NULL) != NULL)
 							yyerror("duplicate declaration");
-					}
+					;}
     break;
 
   case 39:
-
-/* Line 1806 of yacc.c  */
 #line 687 "gram.y"
     {
 						(yyval.varname).name = pstrdup((yyvsp[(1) - (1)].keyword));
@@ -2518,26 +2498,20 @@
 											  (yyvsp[(1) - (1)].keyword), NULL, NULL,
 											  NULL) != NULL)
 							yyerror("duplicate declaration");
-					}
+					;}
     break;
 
   case 40:
-
-/* Line 1806 of yacc.c  */
 #line 702 "gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 41:
-
-/* Line 1806 of yacc.c  */
 #line 704 "gram.y"
-    { (yyval.boolean) = true; }
+    { (yyval.boolean) = true; ;}
     break;
 
   case 42:
-
-/* Line 1806 of yacc.c  */
 #line 708 "gram.y"
     {
 						/*
@@ -2546,246 +2520,182 @@
 						 */
 						(yyval.dtype) = read_datatype(yychar);
 						yyclearin;
-					}
+					;}
     break;
 
   case 43:
-
-/* Line 1806 of yacc.c  */
 #line 719 "gram.y"
-    { (yyval.oid) = InvalidOid; }
+    { (yyval.oid) = InvalidOid; ;}
     break;
 
   case 44:
-
-/* Line 1806 of yacc.c  */
 #line 721 "gram.y"
     {
 						(yyval.oid) = get_collation_oid(list_make1(makeString((yyvsp[(2) - (2)].word).ident)),
 											   false);
-					}
+					;}
     break;
 
   case 45:
-
-/* Line 1806 of yacc.c  */
 #line 726 "gram.y"
     {
 						(yyval.oid) = get_collation_oid((yyvsp[(2) - (2)].cword).idents, false);
-					}
+					;}
     break;
 
   case 46:
-
-/* Line 1806 of yacc.c  */
 #line 732 "gram.y"
-    { (yyval.boolean) = false; }
+    { (yyval.boolean) = false; ;}
     break;
 
   case 47:
-
-/* Line 1806 of yacc.c  */
 #line 734 "gram.y"
-    { (yyval.boolean) = true; }
+    { (yyval.boolean) = true; ;}
     break;
 
   case 48:
-
-/* Line 1806 of yacc.c  */
 #line 738 "gram.y"
-    { (yyval.expr) = NULL; }
+    { (yyval.expr) = NULL; ;}
     break;
 
   case 49:
-
-/* Line 1806 of yacc.c  */
 #line 740 "gram.y"
     {
 						(yyval.expr) = read_sql_expression(';', ";");
-					}
+					;}
     break;
 
   case 54:
-
-/* Line 1806 of yacc.c  */
 #line 754 "gram.y"
-    { (yyval.list) = NIL; }
+    { (yyval.list) = NIL; ;}
     break;
 
   case 55:
-
-/* Line 1806 of yacc.c  */
 #line 756 "gram.y"
-    { (yyval.list) = (yyvsp[(1) - (1)].list); }
+    { (yyval.list) = (yyvsp[(1) - (1)].list); ;}
     break;
 
   case 56:
-
-/* Line 1806 of yacc.c  */
 #line 760 "gram.y"
     {
 							if ((yyvsp[(2) - (2)].stmt) == NULL)
 								(yyval.list) = (yyvsp[(1) - (2)].list);
 							else
 								(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].stmt));
-						}
+						;}
     break;
 
   case 57:
-
-/* Line 1806 of yacc.c  */
 #line 767 "gram.y"
     {
 							if ((yyvsp[(1) - (1)].stmt) == NULL)
 								(yyval.list) = NIL;
 							else
 								(yyval.list) = list_make1((yyvsp[(1) - (1)].stmt));
-						}
+						;}
     break;
 
   case 58:
-
-/* Line 1806 of yacc.c  */
 #line 776 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (2)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (2)].stmt); ;}
     break;
 
   case 59:
-
-/* Line 1806 of yacc.c  */
 #line 778 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 60:
-
-/* Line 1806 of yacc.c  */
 #line 780 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 61:
-
-/* Line 1806 of yacc.c  */
 #line 782 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 62:
-
-/* Line 1806 of yacc.c  */
 #line 784 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 63:
-
-/* Line 1806 of yacc.c  */
 #line 786 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 64:
-
-/* Line 1806 of yacc.c  */
 #line 788 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 65:
-
-/* Line 1806 of yacc.c  */
 #line 790 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 66:
-
-/* Line 1806 of yacc.c  */
 #line 792 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 67:
-
-/* Line 1806 of yacc.c  */
 #line 794 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 68:
-
-/* Line 1806 of yacc.c  */
 #line 796 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 69:
-
-/* Line 1806 of yacc.c  */
 #line 798 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 70:
-
-/* Line 1806 of yacc.c  */
 #line 800 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 71:
-
-/* Line 1806 of yacc.c  */
 #line 802 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 72:
-
-/* Line 1806 of yacc.c  */
 #line 804 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 73:
-
-/* Line 1806 of yacc.c  */
 #line 806 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 74:
-
-/* Line 1806 of yacc.c  */
 #line 808 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 75:
-
-/* Line 1806 of yacc.c  */
 #line 810 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 76:
-
-/* Line 1806 of yacc.c  */
 #line 812 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 77:
-
-/* Line 1806 of yacc.c  */
 #line 814 "gram.y"
-    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); }
+    { (yyval.stmt) = (yyvsp[(1) - (1)].stmt); ;}
     break;
 
   case 78:
-
-/* Line 1806 of yacc.c  */
 #line 818 "gram.y"
     {
 						PLpgSQL_stmt_perform *new;
@@ -2796,12 +2706,10 @@
 						new->expr  = (yyvsp[(2) - (2)].expr);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 79:
-
-/* Line 1806 of yacc.c  */
 #line 831 "gram.y"
     {
 						PLpgSQL_stmt_assign *new;
@@ -2813,12 +2721,10 @@
 						new->expr  = (yyvsp[(3) - (3)].expr);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 80:
-
-/* Line 1806 of yacc.c  */
 #line 845 "gram.y"
     {
 						PLpgSQL_stmt_getdiag	 *new;
@@ -2870,57 +2776,45 @@
 						}
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 81:
-
-/* Line 1806 of yacc.c  */
 #line 899 "gram.y"
     {
 						(yyval.boolean) = false;
-					}
+					;}
     break;
 
   case 82:
-
-/* Line 1806 of yacc.c  */
 #line 903 "gram.y"
     {
 						(yyval.boolean) = false;
-					}
+					;}
     break;
 
   case 83:
-
-/* Line 1806 of yacc.c  */
 #line 907 "gram.y"
     {
 						(yyval.boolean) = true;
-					}
+					;}
     break;
 
   case 84:
-
-/* Line 1806 of yacc.c  */
 #line 913 "gram.y"
     {
 						(yyval.list) = lappend((yyvsp[(1) - (3)].list), (yyvsp[(3) - (3)].diagitem));
-					}
+					;}
     break;
 
   case 85:
-
-/* Line 1806 of yacc.c  */
 #line 917 "gram.y"
     {
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].diagitem));
-					}
+					;}
     break;
 
   case 86:
-
-/* Line 1806 of yacc.c  */
 #line 923 "gram.y"
     {
 						PLpgSQL_diag_item *new;
@@ -2930,12 +2824,10 @@
 						new->kind = (yyvsp[(3) - (3)].ival);
 
 						(yyval.diagitem) = new;
-					}
+					;}
     break;
 
   case 87:
-
-/* Line 1806 of yacc.c  */
 #line 935 "gram.y"
     {
 						int	tok = yylex();
@@ -2963,12 +2855,10 @@
 							(yyval.ival) = PLPGSQL_GETDIAG_RETURNED_SQLSTATE;
 						else
 							yyerror("unrecognized GET DIAGNOSTICS item");
-					}
+					;}
     break;
 
   case 88:
-
-/* Line 1806 of yacc.c  */
 #line 965 "gram.y"
     {
 						check_assignable((yyvsp[(1) - (1)].wdatum).datum, (yylsp[(1) - (1)]));
@@ -2980,42 +2870,34 @@
 											NameOfDatum(&((yyvsp[(1) - (1)].wdatum)))),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.ival) = (yyvsp[(1) - (1)].wdatum).datum->dno;
-					}
+					;}
     break;
 
   case 89:
-
-/* Line 1806 of yacc.c  */
 #line 977 "gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 90:
-
-/* Line 1806 of yacc.c  */
 #line 982 "gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 91:
-
-/* Line 1806 of yacc.c  */
 #line 990 "gram.y"
     {
 						check_assignable((yyvsp[(1) - (1)].wdatum).datum, (yylsp[(1) - (1)]));
 						(yyval.ival) = (yyvsp[(1) - (1)].wdatum).datum->dno;
-					}
+					;}
     break;
 
   case 92:
-
-/* Line 1806 of yacc.c  */
 #line 995 "gram.y"
     {
 						PLpgSQL_arrayelem	*new;
@@ -3030,12 +2912,10 @@
 						plpgsql_adddatum((PLpgSQL_datum *) new);
 
 						(yyval.ival) = new->dno;
-					}
+					;}
     break;
 
   case 93:
-
-/* Line 1806 of yacc.c  */
 #line 1012 "gram.y"
     {
 						PLpgSQL_stmt_if *new;
@@ -3049,21 +2929,17 @@
 						new->else_body  = (yyvsp[(5) - (8)].list);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 94:
-
-/* Line 1806 of yacc.c  */
 #line 1028 "gram.y"
     {
 						(yyval.list) = NIL;
-					}
+					;}
     break;
 
   case 95:
-
-/* Line 1806 of yacc.c  */
 #line 1032 "gram.y"
     {
 						PLpgSQL_if_elsif *new;
@@ -3074,39 +2950,31 @@
 						new->stmts  = (yyvsp[(4) - (4)].list);
 
 						(yyval.list) = lappend((yyvsp[(1) - (4)].list), new);
-					}
+					;}
     break;
 
   case 96:
-
-/* Line 1806 of yacc.c  */
 #line 1045 "gram.y"
     {
 						(yyval.list) = NIL;
-					}
+					;}
     break;
 
   case 97:
-
-/* Line 1806 of yacc.c  */
 #line 1049 "gram.y"
     {
 						(yyval.list) = (yyvsp[(2) - (2)].list);
-					}
+					;}
     break;
 
   case 98:
-
-/* Line 1806 of yacc.c  */
 #line 1055 "gram.y"
     {
 						(yyval.stmt) = make_case((yylsp[(1) - (7)]), (yyvsp[(2) - (7)].expr), (yyvsp[(3) - (7)].list), (yyvsp[(4) - (7)].list));
-					}
+					;}
     break;
 
   case 99:
-
-/* Line 1806 of yacc.c  */
 #line 1061 "gram.y"
     {
 						PLpgSQL_expr *expr = NULL;
@@ -3119,30 +2987,24 @@
 						}
 						plpgsql_push_back_token(K_WHEN);
 						(yyval.expr) = expr;
-					}
+					;}
     break;
 
   case 100:
-
-/* Line 1806 of yacc.c  */
 #line 1076 "gram.y"
     {
 						(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].casewhen));
-					}
+					;}
     break;
 
   case 101:
-
-/* Line 1806 of yacc.c  */
 #line 1080 "gram.y"
     {
 						(yyval.list) = list_make1((yyvsp[(1) - (1)].casewhen));
-					}
+					;}
     break;
 
   case 102:
-
-/* Line 1806 of yacc.c  */
 #line 1086 "gram.y"
     {
 						PLpgSQL_case_when *new = palloc(sizeof(PLpgSQL_case_when));
@@ -3151,21 +3013,17 @@
 						new->expr	= (yyvsp[(2) - (3)].expr);
 						new->stmts	= (yyvsp[(3) - (3)].list);
 						(yyval.casewhen) = new;
-					}
+					;}
     break;
 
   case 103:
-
-/* Line 1806 of yacc.c  */
 #line 1097 "gram.y"
     {
 						(yyval.list) = NIL;
-					}
+					;}
     break;
 
   case 104:
-
-/* Line 1806 of yacc.c  */
 #line 1101 "gram.y"
     {
 						/*
@@ -3178,12 +3036,10 @@
 							(yyval.list) = (yyvsp[(2) - (2)].list);
 						else
 							(yyval.list) = list_make1(NULL);
-					}
+					;}
     break;
 
   case 105:
-
-/* Line 1806 of yacc.c  */
 #line 1116 "gram.y"
     {
 						PLpgSQL_stmt_loop *new;
@@ -3198,12 +3054,10 @@
 						plpgsql_ns_pop();
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 106:
-
-/* Line 1806 of yacc.c  */
 #line 1133 "gram.y"
     {
 						PLpgSQL_stmt_while *new;
@@ -3219,12 +3073,10 @@
 						plpgsql_ns_pop();
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 107:
-
-/* Line 1806 of yacc.c  */
 #line 1151 "gram.y"
     {
 						/* This runs after we've scanned the loop body */
@@ -3256,12 +3108,10 @@
 						check_labels((yyvsp[(1) - (4)].str), (yyvsp[(4) - (4)].loop_body).end_label, (yyvsp[(4) - (4)].loop_body).end_label_location);
 						/* close namespace started in opt_block_label */
 						plpgsql_ns_pop();
-					}
+					;}
     break;
 
   case 108:
-
-/* Line 1806 of yacc.c  */
 #line 1185 "gram.y"
     {
 						int			tok = yylex();
@@ -3503,12 +3353,10 @@
 								(yyval.stmt) = (PLpgSQL_stmt *) new;
 							}
 						}
-					}
+					;}
     break;
 
   case 109:
-
-/* Line 1806 of yacc.c  */
 #line 1447 "gram.y"
     {
 						(yyval.forvariable).name = NameOfDatum(&((yyvsp[(1) - (1)].wdatum)));
@@ -3540,12 +3388,10 @@
 															   (yyval.forvariable).scalar,
 															   (yylsp[(1) - (1)]));
 						}
-					}
+					;}
     break;
 
   case 110:
-
-/* Line 1806 of yacc.c  */
 #line 1479 "gram.y"
     {
 						int			tok;
@@ -3560,22 +3406,18 @@
 						plpgsql_push_back_token(tok);
 						if (tok == ',')
 							word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 111:
-
-/* Line 1806 of yacc.c  */
 #line 1494 "gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 112:
-
-/* Line 1806 of yacc.c  */
 #line 1501 "gram.y"
     {
 						PLpgSQL_stmt_foreach_a *new;
@@ -3615,30 +3457,24 @@
 						plpgsql_ns_pop();
 
 						(yyval.stmt) = (PLpgSQL_stmt *) new;
-					}
+					;}
     break;
 
   case 113:
-
-/* Line 1806 of yacc.c  */
 #line 1543 "gram.y"
     {
 						(yyval.ival) = 0;
-					}
+					;}
     break;
 
   case 114:
-
-/* Line 1806 of yacc.c  */
 #line 1547 "gram.y"
     {
 						(yyval.ival) = (yyvsp[(2) - (2)].ival);
-					}
+					;}
     break;
 
   case 115:
-
-/* Line 1806 of yacc.c  */
 #line 1553 "gram.y"
     {
 						PLpgSQL_stmt_exit *new;
@@ -3651,30 +3487,24 @@
 						new->cond	  = (yyvsp[(3) - (3)].expr);
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 116:
-
-/* Line 1806 of yacc.c  */
 #line 1568 "gram.y"
     {
 						(yyval.boolean) = true;
-					}
+					;}
     break;
 
   case 117:
-
-/* Line 1806 of yacc.c  */
 #line 1572 "gram.y"
     {
 						(yyval.boolean) = false;
-					}
+					;}
     break;
 
   case 118:
-
-/* Line 1806 of yacc.c  */
 #line 1578 "gram.y"
     {
 						int	tok;
@@ -3698,12 +3528,10 @@
 							plpgsql_push_back_token(tok);
 							(yyval.stmt) = make_return_stmt((yylsp[(1) - (1)]));
 						}
-					}
+					;}
     break;
 
   case 119:
-
-/* Line 1806 of yacc.c  */
 #line 1604 "gram.y"
     {
 						PLpgSQL_stmt_raise		*new;
@@ -3840,32 +3668,26 @@
 						}
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 120:
-
-/* Line 1806 of yacc.c  */
 #line 1743 "gram.y"
     {
 						(yyval.loop_body).stmts = (yyvsp[(1) - (5)].list);
 						(yyval.loop_body).end_label = (yyvsp[(4) - (5)].str);
 						(yyval.loop_body).end_label_location = (yylsp[(4) - (5)]);
-					}
+					;}
     break;
 
   case 121:
-
-/* Line 1806 of yacc.c  */
 #line 1761 "gram.y"
     {
 						(yyval.stmt) = make_execsql_stmt(K_INSERT, (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 122:
-
-/* Line 1806 of yacc.c  */
 #line 1765 "gram.y"
     {
 						int			tok;
@@ -3875,12 +3697,10 @@
 						if (tok == '=' || tok == COLON_EQUALS || tok == '[')
 							word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
 						(yyval.stmt) = make_execsql_stmt(T_WORD, (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 123:
-
-/* Line 1806 of yacc.c  */
 #line 1775 "gram.y"
     {
 						int			tok;
@@ -3890,12 +3710,10 @@
 						if (tok == '=' || tok == COLON_EQUALS || tok == '[')
 							cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
 						(yyval.stmt) = make_execsql_stmt(T_CWORD, (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 124:
-
-/* Line 1806 of yacc.c  */
 #line 1787 "gram.y"
     {
 						PLpgSQL_stmt_dynexecute *new;
@@ -3956,12 +3774,10 @@
 						}
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 125:
-
-/* Line 1806 of yacc.c  */
 #line 1851 "gram.y"
     {
 						PLpgSQL_stmt_open *new;
@@ -4036,12 +3852,10 @@
 						}
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 126:
-
-/* Line 1806 of yacc.c  */
 #line 1928 "gram.y"
     {
 						PLpgSQL_stmt_fetch *fetch = (yyvsp[(2) - (4)].fetch);
@@ -4071,12 +3885,10 @@
 						fetch->is_move	= false;
 
 						(yyval.stmt) = (PLpgSQL_stmt *)fetch;
-					}
+					;}
     break;
 
   case 127:
-
-/* Line 1806 of yacc.c  */
 #line 1960 "gram.y"
     {
 						PLpgSQL_stmt_fetch *fetch = (yyvsp[(2) - (4)].fetch);
@@ -4086,21 +3898,17 @@
 						fetch->is_move	= true;
 
 						(yyval.stmt) = (PLpgSQL_stmt *)fetch;
-					}
+					;}
     break;
 
   case 128:
-
-/* Line 1806 of yacc.c  */
 #line 1972 "gram.y"
     {
 						(yyval.fetch) = read_fetch_direction();
-					}
+					;}
     break;
 
   case 129:
-
-/* Line 1806 of yacc.c  */
 #line 1978 "gram.y"
     {
 						PLpgSQL_stmt_close *new;
@@ -4111,22 +3919,18 @@
 						new->curvar = (yyvsp[(2) - (3)].var)->dno;
 
 						(yyval.stmt) = (PLpgSQL_stmt *)new;
-					}
+					;}
     break;
 
   case 130:
-
-/* Line 1806 of yacc.c  */
 #line 1991 "gram.y"
     {
 						/* We do not bother building a node for NULL */
 						(yyval.stmt) = NULL;
-					}
+					;}
     break;
 
   case 131:
-
-/* Line 1806 of yacc.c  */
 #line 1998 "gram.y"
     {
 						if ((yyvsp[(1) - (1)].wdatum).datum->dtype != PLPGSQL_DTYPE_VAR)
@@ -4142,39 +3946,31 @@
 											((PLpgSQL_var *) (yyvsp[(1) - (1)].wdatum).datum)->refname),
 									 parser_errposition((yylsp[(1) - (1)]))));
 						(yyval.var) = (PLpgSQL_var *) (yyvsp[(1) - (1)].wdatum).datum;
-					}
+					;}
     break;
 
   case 132:
-
-/* Line 1806 of yacc.c  */
 #line 2014 "gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						word_is_not_variable(&((yyvsp[(1) - (1)].word)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 133:
-
-/* Line 1806 of yacc.c  */
 #line 2019 "gram.y"
     {
 						/* just to give a better message than "syntax error" */
 						cword_is_not_variable(&((yyvsp[(1) - (1)].cword)), (yylsp[(1) - (1)]));
-					}
+					;}
     break;
 
   case 134:
-
-/* Line 1806 of yacc.c  */
 #line 2026 "gram.y"
-    { (yyval.exception_block) = NULL; }
+    { (yyval.exception_block) = NULL; ;}
     break;
 
   case 135:
-
-/* Line 1806 of yacc.c  */
 #line 2028 "gram.y"
     {
 						/*
@@ -4205,42 +4001,34 @@
 						new->sqlerrm_varno = var->dno;
 
 						(yyval.exception_block) = new;
-					}
+					;}
     break;
 
   case 136:
-
-/* Line 1806 of yacc.c  */
 #line 2059 "gram.y"
     {
 						PLpgSQL_exception_block *new = (yyvsp[(2) - (3)].exception_block);
 						new->exc_list = (yyvsp[(3) - (3)].list);
 
 						(yyval.exception_block) = new;
-					}
+					;}
     break;
 
   case 137:
-
-/* Line 1806 of yacc.c  */
 #line 2068 "gram.y"
     {
 							(yyval.list) = lappend((yyvsp[(1) - (2)].list), (yyvsp[(2) - (2)].exception));
-						}
+						;}
     break;
 
   case 138:
-
-/* Line 1806 of yacc.c  */
 #line 2072 "gram.y"
     {
 							(yyval.list) = list_make1((yyvsp[(1) - (1)].exception));
-						}
+						;}
     break;
 
   case 139:
-
-/* Line 1806 of yacc.c  */
 #line 2078 "gram.y"
     {
 						PLpgSQL_exception *new;
@@ -4251,12 +4039,10 @@
 						new->action = (yyvsp[(4) - (4)].list);
 
 						(yyval.exception) = new;
-					}
+					;}
     break;
 
   case 140:
-
-/* Line 1806 of yacc.c  */
 #line 2091 "gram.y"
     {
 							PLpgSQL_condition	*old;
@@ -4265,21 +4051,17 @@
 								/* skip */ ;
 							old->next = (yyvsp[(3) - (3)].condition);
 							(yyval.condition) = (yyvsp[(1) - (3)].condition);
-						}
+						;}
     break;
 
   case 141:
-
-/* Line 1806 of yacc.c  */
 #line 2100 "gram.y"
     {
 							(yyval.condition) = (yyvsp[(1) - (1)].condition);
-						}
+						;}
     break;
 
   case 142:
-
-/* Line 1806 of yacc.c  */
 #line 2106 "gram.y"
     {
 							if (strcmp((yyvsp[(1) - (1)].str), "sqlstate") != 0)
@@ -4313,128 +4095,92 @@
 
 								(yyval.condition) = new;
 							}
-						}
+						;}
     break;
 
   case 143:
-
-/* Line 1806 of yacc.c  */
 #line 2142 "gram.y"
-    { (yyval.expr) = read_sql_expression(';', ";"); }
+    { (yyval.expr) = read_sql_expression(';', ";"); ;}
     break;
 
   case 144:
-
-/* Line 1806 of yacc.c  */
 #line 2146 "gram.y"
-    { (yyval.expr) = read_sql_expression(']', "]"); }
+    { (yyval.expr) = read_sql_expression(']', "]"); ;}
     break;
 
   case 145:
-
-/* Line 1806 of yacc.c  */
 #line 2150 "gram.y"
-    { (yyval.expr) = read_sql_expression(K_THEN, "THEN"); }
+    { (yyval.expr) = read_sql_expression(K_THEN, "THEN"); ;}
     break;
 
   case 146:
-
-/* Line 1806 of yacc.c  */
 #line 2154 "gram.y"
-    { (yyval.expr) = read_sql_expression(K_LOOP, "LOOP"); }
+    { (yyval.expr) = read_sql_expression(K_LOOP, "LOOP"); ;}
     break;
 
   case 147:
-
-/* Line 1806 of yacc.c  */
 #line 2158 "gram.y"
     {
 						plpgsql_ns_push(NULL);
 						(yyval.str) = NULL;
-					}
+					;}
     break;
 
   case 148:
-
-/* Line 1806 of yacc.c  */
 #line 2163 "gram.y"
     {
 						plpgsql_ns_push((yyvsp[(2) - (3)].str));
 						(yyval.str) = (yyvsp[(2) - (3)].str);
-					}
+					;}
     break;
 
   case 149:
-
-/* Line 1806 of yacc.c  */
 #line 2170 "gram.y"
     {
 						(yyval.str) = NULL;
-					}
+					;}
     break;
 
   case 150:
-
-/* Line 1806 of yacc.c  */
 #line 2174 "gram.y"
     {
 						if (plpgsql_ns_lookup_label(plpgsql_ns_top(), (yyvsp[(1) - (1)].str)) == NULL)
 							yyerror("label does not exist");
 						(yyval.str) = (yyvsp[(1) - (1)].str);
-					}
+					;}
     break;
 
   case 151:
-
-/* Line 1806 of yacc.c  */
 #line 2182 "gram.y"
-    { (yyval.expr) = NULL; }
+    { (yyval.expr) = NULL; ;}
     break;
 
   case 152:
-
-/* Line 1806 of yacc.c  */
 #line 2184 "gram.y"
-    { (yyval.expr) = (yyvsp[(2) - (2)].expr); }
+    { (yyval.expr) = (yyvsp[(2) - (2)].expr); ;}
     break;
 
   case 153:
-
-/* Line 1806 of yacc.c  */
 #line 2191 "gram.y"
     {
 						(yyval.str) = (yyvsp[(1) - (1)].word).ident;
-					}
+					;}
     break;
 
   case 154:
-
-/* Line 1806 of yacc.c  */
 #line 2195 "gram.y"
     {
 						if ((yyvsp[(1) - (1)].wdatum).ident == NULL) /* composite name not OK */
 							yyerror("syntax error");
 						(yyval.str) = (yyvsp[(1) - (1)].wdatum).ident;
-					}
+					;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 4425 "pl_gram.c"
+/* Line 1267 of yacc.c.  */
+#line 4182 "gram.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -4463,10 +4209,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -4474,44 +4216,45 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
-  yyerror_range[1] = yylloc;
+  yyerror_range[0] = yylloc;
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -4528,7 +4271,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -4544,7 +4287,7 @@
   if (/*CONSTCOND*/ 0)
      goto yyerrorlab;
 
-  yyerror_range[1] = yylsp[1-yylen];
+  yyerror_range[0] = yylsp[1-yylen];
   /* Do not reclaim the symbols of the rule which action triggered
      this YYERROR.  */
   YYPOPSTACK (yylen);
@@ -4563,7 +4306,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -4578,7 +4321,7 @@
       if (yyssp == yyss)
 	YYABORT;
 
-      yyerror_range[1] = *yylsp;
+      yyerror_range[0] = *yylsp;
       yydestruct ("Error: popping",
 		  yystos[yystate], yyvsp, yylsp);
       YYPOPSTACK (1);
@@ -4586,12 +4329,15 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
-  yyerror_range[2] = yylloc;
+  yyerror_range[1] = yylloc;
   /* Using YYLLOC is tempting, but would change the location of
-     the lookahead.  YYLOC is available though.  */
-  YYLLOC_DEFAULT (yyloc, yyerror_range, 2);
+     the look-ahead.  YYLOC is available though.  */
+  YYLLOC_DEFAULT (yyloc, (yyerror_range - 1), 2);
   *++yylsp = yyloc;
 
   /* Shift the error token.  */
@@ -4615,7 +4361,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -4626,14 +4372,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval, &yylloc);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval, &yylloc);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -4657,8 +4398,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 2250 "gram.y"
 
 
diff -Naur postgresql-9.2.13/src/pl/plpgsql/src/pl_gram.h postgresql/src/pl/plpgsql/src/pl_gram.h
--- postgresql-9.2.13/src/pl/plpgsql/src/pl_gram.h	2015-06-09 12:48:20.000000000 -0700
+++ postgresql/src/pl/plpgsql/src/pl_gram.h	2015-07-01 18:04:55.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison interface for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton interface for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,11 +29,10 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
-
 /* Tokens.  */
 #ifndef YYTOKENTYPE
 # define YYTOKENTYPE
@@ -140,16 +142,116 @@
      K_WHILE = 358
    };
 #endif
+/* Tokens.  */
+#define IDENT 258
+#define FCONST 259
+#define SCONST 260
+#define BCONST 261
+#define XCONST 262
+#define Op 263
+#define ICONST 264
+#define PARAM 265
+#define TYPECAST 266
+#define DOT_DOT 267
+#define COLON_EQUALS 268
+#define T_WORD 269
+#define T_CWORD 270
+#define T_DATUM 271
+#define LESS_LESS 272
+#define GREATER_GREATER 273
+#define K_ABSOLUTE 274
+#define K_ALIAS 275
+#define K_ALL 276
+#define K_ARRAY 277
+#define K_BACKWARD 278
+#define K_BEGIN 279
+#define K_BY 280
+#define K_CASE 281
+#define K_CLOSE 282
+#define K_COLLATE 283
+#define K_CONSTANT 284
+#define K_CONTINUE 285
+#define K_CURRENT 286
+#define K_CURSOR 287
+#define K_DEBUG 288
+#define K_DECLARE 289
+#define K_DEFAULT 290
+#define K_DETAIL 291
+#define K_DIAGNOSTICS 292
+#define K_DUMP 293
+#define K_ELSE 294
+#define K_ELSIF 295
+#define K_END 296
+#define K_ERRCODE 297
+#define K_ERROR 298
+#define K_EXCEPTION 299
+#define K_EXECUTE 300
+#define K_EXIT 301
+#define K_FETCH 302
+#define K_FIRST 303
+#define K_FOR 304
+#define K_FOREACH 305
+#define K_FORWARD 306
+#define K_FROM 307
+#define K_GET 308
+#define K_HINT 309
+#define K_IF 310
+#define K_IN 311
+#define K_INFO 312
+#define K_INSERT 313
+#define K_INTO 314
+#define K_IS 315
+#define K_LAST 316
+#define K_LOG 317
+#define K_LOOP 318
+#define K_MESSAGE 319
+#define K_MESSAGE_TEXT 320
+#define K_MOVE 321
+#define K_NEXT 322
+#define K_NO 323
+#define K_NOT 324
+#define K_NOTICE 325
+#define K_NULL 326
+#define K_OPEN 327
+#define K_OPTION 328
+#define K_OR 329
+#define K_PERFORM 330
+#define K_PG_EXCEPTION_CONTEXT 331
+#define K_PG_EXCEPTION_DETAIL 332
+#define K_PG_EXCEPTION_HINT 333
+#define K_PRIOR 334
+#define K_QUERY 335
+#define K_RAISE 336
+#define K_RELATIVE 337
+#define K_RESULT_OID 338
+#define K_RETURN 339
+#define K_RETURNED_SQLSTATE 340
+#define K_REVERSE 341
+#define K_ROWTYPE 342
+#define K_ROW_COUNT 343
+#define K_SCROLL 344
+#define K_SLICE 345
+#define K_SQLSTATE 346
+#define K_STACKED 347
+#define K_STRICT 348
+#define K_THEN 349
+#define K_TO 350
+#define K_TYPE 351
+#define K_USE_COLUMN 352
+#define K_USE_VARIABLE 353
+#define K_USING 354
+#define K_VARIABLE_CONFLICT 355
+#define K_WARNING 356
+#define K_WHEN 357
+#define K_WHILE 358
+
 
 
 
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 2068 of yacc.c  */
 #line 116 "gram.y"
-
+{
 		core_YYSTYPE			core_yystype;
 		/* these fields must match core_YYSTYPE: */
 		int						ival;
@@ -199,15 +301,13 @@
 		PLpgSQL_diag_item		*diagitem;
 		PLpgSQL_stmt_fetch		*fetch;
 		PLpgSQL_case_when		*casewhen;
-
-
-
-/* Line 2068 of yacc.c  */
-#line 207 "pl_gram.h"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 1529 of yacc.c.  */
+#line 307 "gram.tab.h"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 extern YYSTYPE plpgsql_yylval;
@@ -226,4 +326,3 @@
 #endif
 
 extern YYLTYPE plpgsql_yylloc;
-
diff -Naur postgresql-9.2.13/src/test/isolation/specparse.c postgresql/src/test/isolation/specparse.c
--- postgresql-9.2.13/src/test/isolation/specparse.c	2015-06-09 12:48:20.000000000 -0700
+++ postgresql/src/test/isolation/specparse.c	2015-07-01 18:05:32.000000000 -0700
@@ -1,21 +1,24 @@
-/* A Bison parser, made by GNU Bison 2.5.  */
+/* A Bison parser, made by GNU Bison 2.3.  */
 
-/* Bison implementation for Yacc-like parsers in C
-   
-      Copyright (C) 1984, 1989-1990, 2000-2011 Free Software Foundation, Inc.
-   
-   This program is free software: you can redistribute it and/or modify
+/* Skeleton implementation for Bison's Yacc-like parsers in C
+
+   Copyright (C) 1984, 1989, 1990, 2000, 2001, 2002, 2003, 2004, 2005, 2006
+   Free Software Foundation, Inc.
+
+   This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
-   the Free Software Foundation, either version 3 of the License, or
-   (at your option) any later version.
-   
+   the Free Software Foundation; either version 2, or (at your option)
+   any later version.
+
    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.
-   
+
    You should have received a copy of the GNU General Public License
-   along with this program.  If not, see <http://www.gnu.org/licenses/>.  */
+   along with this program; if not, write to the Free Software
+   Foundation, Inc., 51 Franklin Street, Fifth Floor,
+   Boston, MA 02110-1301, USA.  */
 
 /* As a special exception, you may create a larger work that contains
    part or all of the Bison parser skeleton and distribute that work
@@ -26,7 +29,7 @@
    special exception, which will cause the skeleton and the resulting
    Bison output files to be licensed under the GNU General Public
    License without this special exception.
-   
+
    This special exception was added by the Free Software Foundation in
    version 2.2 of Bison.  */
 
@@ -44,7 +47,7 @@
 #define YYBISON 1
 
 /* Bison version.  */
-#define YYBISON_VERSION "2.5"
+#define YYBISON_VERSION "2.3"
 
 /* Skeleton name.  */
 #define YYSKELETON_NAME "yacc.c"
@@ -52,28 +55,49 @@
 /* Pure parsers.  */
 #define YYPURE 0
 
-/* Push parsers.  */
-#define YYPUSH 0
-
-/* Pull parsers.  */
-#define YYPULL 1
-
 /* Using locations.  */
 #define YYLSP_NEEDED 0
 
 /* Substitute the variable and function names.  */
-#define yyparse         spec_yyparse
-#define yylex           spec_yylex
-#define yyerror         spec_yyerror
-#define yylval          spec_yylval
-#define yychar          spec_yychar
-#define yydebug         spec_yydebug
-#define yynerrs         spec_yynerrs
+#define yyparse spec_yyparse
+#define yylex   spec_yylex
+#define yyerror spec_yyerror
+#define yylval  spec_yylval
+#define yychar  spec_yychar
+#define yydebug spec_yydebug
+#define yynerrs spec_yynerrs
+
+
+/* Tokens.  */
+#ifndef YYTOKENTYPE
+# define YYTOKENTYPE
+   /* Put the tokens into the symbol table, so that GDB and other debuggers
+      know about them.  */
+   enum yytokentype {
+     sqlblock = 258,
+     string_literal = 259,
+     PERMUTATION = 260,
+     SESSION = 261,
+     SETUP = 262,
+     STEP = 263,
+     TEARDOWN = 264,
+     TEST = 265
+   };
+#endif
+/* Tokens.  */
+#define sqlblock 258
+#define string_literal 259
+#define PERMUTATION 260
+#define SESSION 261
+#define SETUP 262
+#define STEP 263
+#define TEARDOWN 264
+#define TEST 265
 
 
-/* Copy the first part of user declarations.  */
 
-/* Line 268 of yacc.c  */
+
+/* Copy the first part of user declarations.  */
 #line 1 "specparse.y"
 
 /*-------------------------------------------------------------------------
@@ -96,9 +120,6 @@
 
 
 
-/* Line 268 of yacc.c  */
-#line 101 "specparse.c"
-
 /* Enabling traces.  */
 #ifndef YYDEBUG
 # define YYDEBUG 0
@@ -117,33 +138,10 @@
 # define YYTOKEN_TABLE 0
 #endif
 
-
-/* Tokens.  */
-#ifndef YYTOKENTYPE
-# define YYTOKENTYPE
-   /* Put the tokens into the symbol table, so that GDB and other debuggers
-      know about them.  */
-   enum yytokentype {
-     sqlblock = 258,
-     string_literal = 259,
-     PERMUTATION = 260,
-     SESSION = 261,
-     SETUP = 262,
-     STEP = 263,
-     TEARDOWN = 264,
-     TEST = 265
-   };
-#endif
-
-
-
 #if ! defined YYSTYPE && ! defined YYSTYPE_IS_DECLARED
 typedef union YYSTYPE
-{
-
-/* Line 293 of yacc.c  */
 #line 26 "specparse.y"
-
+{
 	char	   *str;
 	Session	   *session;
 	Step	   *step;
@@ -153,23 +151,22 @@
 		void  **elements;
 		int		nelements;
 	}			ptr_list;
-
-
-
-/* Line 293 of yacc.c  */
-#line 161 "specparse.c"
-} YYSTYPE;
-# define YYSTYPE_IS_TRIVIAL 1
+}
+/* Line 193 of yacc.c.  */
+#line 157 "specparse.tab.c"
+	YYSTYPE;
 # define yystype YYSTYPE /* obsolescent; will be withdrawn */
 # define YYSTYPE_IS_DECLARED 1
+# define YYSTYPE_IS_TRIVIAL 1
 #endif
 
 
+
 /* Copy the second part of user declarations.  */
 
 
-/* Line 343 of yacc.c  */
-#line 173 "specparse.c"
+/* Line 216 of yacc.c.  */
+#line 170 "specparse.tab.c"
 
 #ifdef short
 # undef short
@@ -244,14 +241,14 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static int
-YYID (int yyi)
+YYID (int i)
 #else
 static int
-YYID (yyi)
-    int yyi;
+YYID (i)
+    int i;
 #endif
 {
-  return yyi;
+  return i;
 }
 #endif
 
@@ -272,11 +269,11 @@
 #    define alloca _alloca
 #   else
 #    define YYSTACK_ALLOC alloca
-#    if ! defined _ALLOCA_H && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#    if ! defined _ALLOCA_H && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 #     include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#     ifndef EXIT_SUCCESS
-#      define EXIT_SUCCESS 0
+#     ifndef _STDLIB_H
+#      define _STDLIB_H 1
 #     endif
 #    endif
 #   endif
@@ -299,24 +296,24 @@
 #  ifndef YYSTACK_ALLOC_MAXIMUM
 #   define YYSTACK_ALLOC_MAXIMUM YYSIZE_MAXIMUM
 #  endif
-#  if (defined __cplusplus && ! defined EXIT_SUCCESS \
+#  if (defined __cplusplus && ! defined _STDLIB_H \
        && ! ((defined YYMALLOC || defined malloc) \
 	     && (defined YYFREE || defined free)))
 #   include <stdlib.h> /* INFRINGES ON USER NAME SPACE */
-#   ifndef EXIT_SUCCESS
-#    define EXIT_SUCCESS 0
+#   ifndef _STDLIB_H
+#    define _STDLIB_H 1
 #   endif
 #  endif
 #  ifndef YYMALLOC
 #   define YYMALLOC malloc
-#   if ! defined malloc && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined malloc && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void *malloc (YYSIZE_T); /* INFRINGES ON USER NAME SPACE */
 #   endif
 #  endif
 #  ifndef YYFREE
 #   define YYFREE free
-#   if ! defined free && ! defined EXIT_SUCCESS && (defined __STDC__ || defined __C99__FUNC__ \
+#   if ! defined free && ! defined _STDLIB_H && (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 void free (void *); /* INFRINGES ON USER NAME SPACE */
 #   endif
@@ -332,9 +329,9 @@
 /* A type that is properly aligned for any stack member.  */
 union yyalloc
 {
-  yytype_int16 yyss_alloc;
-  YYSTYPE yyvs_alloc;
-};
+  yytype_int16 yyss;
+  YYSTYPE yyvs;
+  };
 
 /* The size of the maximum gap between one aligned stack and the next.  */
 # define YYSTACK_GAP_MAXIMUM (sizeof (union yyalloc) - 1)
@@ -345,27 +342,6 @@
      ((N) * (sizeof (yytype_int16) + sizeof (YYSTYPE)) \
       + YYSTACK_GAP_MAXIMUM)
 
-# define YYCOPY_NEEDED 1
-
-/* Relocate STACK from its old location to the new one.  The
-   local variables YYSIZE and YYSTACKSIZE give the old and new number of
-   elements in the stack, and YYPTR gives the new location of the
-   stack.  Advance YYPTR to a properly aligned location for the next
-   stack.  */
-# define YYSTACK_RELOCATE(Stack_alloc, Stack)				\
-    do									\
-      {									\
-	YYSIZE_T yynewbytes;						\
-	YYCOPY (&yyptr->Stack_alloc, Stack, yysize);			\
-	Stack = &yyptr->Stack_alloc;					\
-	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
-	yyptr += yynewbytes / sizeof (*yyptr);				\
-      }									\
-    while (YYID (0))
-
-#endif
-
-#if defined YYCOPY_NEEDED && YYCOPY_NEEDED
 /* Copy COUNT objects from FROM to TO.  The source and destination do
    not overlap.  */
 # ifndef YYCOPY
@@ -383,7 +359,24 @@
       while (YYID (0))
 #  endif
 # endif
-#endif /* !YYCOPY_NEEDED */
+
+/* Relocate STACK from its old location to the new one.  The
+   local variables YYSIZE and YYSTACKSIZE give the old and new number of
+   elements in the stack, and YYPTR gives the new location of the
+   stack.  Advance YYPTR to a properly aligned location for the next
+   stack.  */
+# define YYSTACK_RELOCATE(Stack)					\
+    do									\
+      {									\
+	YYSIZE_T yynewbytes;						\
+	YYCOPY (&yyptr->Stack, Stack, yysize);				\
+	Stack = &yyptr->Stack;						\
+	yynewbytes = yystacksize * sizeof (*Stack) + YYSTACK_GAP_MAXIMUM; \
+	yyptr += yynewbytes / sizeof (*yyptr);				\
+      }									\
+    while (YYID (0))
+
+#endif
 
 /* YYFINAL -- State number of the termination state.  */
 #define YYFINAL  3
@@ -507,8 +500,8 @@
        2,     2,     1
 };
 
-/* YYDEFACT[STATE-NAME] -- Default reduction number in state STATE-NUM.
-   Performed when YYTABLE doesn't specify something else to do.  Zero
+/* YYDEFACT[STATE-NAME] -- Default rule to reduce with in state
+   STATE-NUM when YYTABLE doesn't specify something else to do.  Zero
    means the default is an error.  */
 static const yytype_uint8 yydefact[] =
 {
@@ -545,7 +538,8 @@
 
 /* YYTABLE[YYPACT[STATE-NUM]].  What to do in state STATE-NUM.  If
    positive, shift that token.  If negative, reduce the rule which
-   number is the opposite.  If YYTABLE_NINF, syntax error.  */
+   number is the opposite.  If zero, do what YYDEFACT says.
+   If YYTABLE_NINF, syntax error.  */
 #define YYTABLE_NINF -1
 static const yytype_uint8 yytable[] =
 {
@@ -555,12 +549,6 @@
       23
 };
 
-#define yypact_value_is_default(yystate) \
-  ((yystate) == (-15))
-
-#define yytable_value_is_error(yytable_value) \
-  YYID (0)
-
 static const yytype_int8 yycheck[] =
 {
        7,     0,     9,     5,     6,     8,     9,     3,     3,     6,
@@ -591,18 +579,9 @@
 
 /* Like YYERROR except do call yyerror.  This remains here temporarily
    to ease the transition to the new meaning of YYERROR, for GCC.
-   Once GCC version 2 has supplanted version 1, this can go.  However,
-   YYFAIL appears to be in use.  Nevertheless, it is formally deprecated
-   in Bison 2.4.2's NEWS entry, where a plan to phase it out is
-   discussed.  */
+   Once GCC version 2 has supplanted version 1, this can go.  */
 
 #define YYFAIL		goto yyerrlab
-#if defined YYFAIL
-  /* This is here to suppress warnings from the GCC cpp's
-     -Wunused-macros.  Normally we don't worry about that warning, but
-     some users do, and we want to make it easy for users to remove
-     YYFAIL uses, which will produce warnings from Bison 2.5.  */
-#endif
 
 #define YYRECOVERING()  (!!yyerrstatus)
 
@@ -612,6 +591,7 @@
     {								\
       yychar = (Token);						\
       yylval = (Value);						\
+      yytoken = YYTRANSLATE (yychar);				\
       YYPOPSTACK (1);						\
       goto yybackup;						\
     }								\
@@ -653,10 +633,19 @@
 #endif
 
 
-/* This macro is provided for backward compatibility. */
+/* YY_LOCATION_PRINT -- Print the location on the stream.
+   This macro was not mandated originally: define only if we know
+   we won't break user code: when these are the locations we know.  */
 
 #ifndef YY_LOCATION_PRINT
-# define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# if defined YYLTYPE_IS_TRIVIAL && YYLTYPE_IS_TRIVIAL
+#  define YY_LOCATION_PRINT(File, Loc)			\
+     fprintf (File, "%d.%d-%d.%d",			\
+	      (Loc).first_line, (Loc).first_column,	\
+	      (Loc).last_line,  (Loc).last_column)
+# else
+#  define YY_LOCATION_PRINT(File, Loc) ((void) 0)
+# endif
 #endif
 
 
@@ -760,20 +749,17 @@
 #if (defined __STDC__ || defined __C99__FUNC__ \
      || defined __cplusplus || defined _MSC_VER)
 static void
-yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)
+yy_stack_print (yytype_int16 *bottom, yytype_int16 *top)
 #else
 static void
-yy_stack_print (yybottom, yytop)
-    yytype_int16 *yybottom;
-    yytype_int16 *yytop;
+yy_stack_print (bottom, top)
+    yytype_int16 *bottom;
+    yytype_int16 *top;
 #endif
 {
   YYFPRINTF (stderr, "Stack now");
-  for (; yybottom <= yytop; yybottom++)
-    {
-      int yybot = *yybottom;
-      YYFPRINTF (stderr, " %d", yybot);
-    }
+  for (; bottom <= top; ++bottom)
+    YYFPRINTF (stderr, " %d", *bottom);
   YYFPRINTF (stderr, "\n");
 }
 
@@ -807,11 +793,11 @@
   /* The symbols being reduced.  */
   for (yyi = 0; yyi < yynrhs; yyi++)
     {
-      YYFPRINTF (stderr, "   $%d = ", yyi + 1);
+      fprintf (stderr, "   $%d = ", yyi + 1);
       yy_symbol_print (stderr, yyrhs[yyprhs[yyrule] + yyi],
 		       &(yyvsp[(yyi + 1) - (yynrhs)])
 		       		       );
-      YYFPRINTF (stderr, "\n");
+      fprintf (stderr, "\n");
     }
 }
 
@@ -848,6 +834,7 @@
 # define YYMAXDEPTH 10000
 #endif
 
+
 
 #if YYERROR_VERBOSE
 
@@ -950,142 +937,115 @@
 }
 # endif
 
-/* Copy into *YYMSG, which is of size *YYMSG_ALLOC, an error message
-   about the unexpected token YYTOKEN for the state stack whose top is
-   YYSSP.
-
-   Return 0 if *YYMSG was successfully written.  Return 1 if *YYMSG is
-   not large enough to hold the message.  In that case, also set
-   *YYMSG_ALLOC to the required number of bytes.  Return 2 if the
-   required number of bytes is too large to store.  */
-static int
-yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,
-                yytype_int16 *yyssp, int yytoken)
+/* Copy into YYRESULT an error message about the unexpected token
+   YYCHAR while in state YYSTATE.  Return the number of bytes copied,
+   including the terminating null byte.  If YYRESULT is null, do not
+   copy anything; just return the number of bytes that would be
+   copied.  As a special case, return 0 if an ordinary "syntax error"
+   message will do.  Return YYSIZE_MAXIMUM if overflow occurs during
+   size calculation.  */
+static YYSIZE_T
+yysyntax_error (char *yyresult, int yystate, int yychar)
 {
-  YYSIZE_T yysize0 = yytnamerr (0, yytname[yytoken]);
-  YYSIZE_T yysize = yysize0;
-  YYSIZE_T yysize1;
-  enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
-  /* Internationalized format string. */
-  const char *yyformat = 0;
-  /* Arguments of yyformat. */
-  char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
-  /* Number of reported tokens (one for the "unexpected", one per
-     "expected"). */
-  int yycount = 0;
-
-  /* There are many possibilities here to consider:
-     - Assume YYFAIL is not used.  It's too flawed to consider.  See
-       <http://lists.gnu.org/archive/html/bison-patches/2009-12/msg00024.html>
-       for details.  YYERROR is fine as it does not invoke this
-       function.
-     - If this state is a consistent state with a default action, then
-       the only way this function was invoked is if the default action
-       is an error action.  In that case, don't check for expected
-       tokens because there are none.
-     - The only way there can be no lookahead present (in yychar) is if
-       this state is a consistent state with a default action.  Thus,
-       detecting the absence of a lookahead is sufficient to determine
-       that there is no unexpected or expected token to report.  In that
-       case, just report a simple "syntax error".
-     - Don't assume there isn't a lookahead just because this state is a
-       consistent state with a default action.  There might have been a
-       previous inconsistent state, consistent state with a non-default
-       action, or user semantic action that manipulated yychar.
-     - Of course, the expected token list depends on states to have
-       correct lookahead information, and it depends on the parser not
-       to perform extra reductions after fetching a lookahead from the
-       scanner and before detecting a syntax error.  Thus, state merging
-       (from LALR or IELR) and default reductions corrupt the expected
-       token list.  However, the list is correct for canonical LR with
-       one exception: it will still contain any token that will not be
-       accepted due to an error action in a later state.
-  */
-  if (yytoken != YYEMPTY)
-    {
-      int yyn = yypact[*yyssp];
-      yyarg[yycount++] = yytname[yytoken];
-      if (!yypact_value_is_default (yyn))
-        {
-          /* Start YYX at -YYN if negative to avoid negative indexes in
-             YYCHECK.  In other words, skip the first -YYN actions for
-             this state because they are default actions.  */
-          int yyxbegin = yyn < 0 ? -yyn : 0;
-          /* Stay within bounds of both yycheck and yytname.  */
-          int yychecklim = YYLAST - yyn + 1;
-          int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
-          int yyx;
-
-          for (yyx = yyxbegin; yyx < yyxend; ++yyx)
-            if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR
-                && !yytable_value_is_error (yytable[yyx + yyn]))
-              {
-                if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
-                  {
-                    yycount = 1;
-                    yysize = yysize0;
-                    break;
-                  }
-                yyarg[yycount++] = yytname[yyx];
-                yysize1 = yysize + yytnamerr (0, yytname[yyx]);
-                if (! (yysize <= yysize1
-                       && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-                  return 2;
-                yysize = yysize1;
-              }
-        }
-    }
+  int yyn = yypact[yystate];
 
-  switch (yycount)
+  if (! (YYPACT_NINF < yyn && yyn <= YYLAST))
+    return 0;
+  else
     {
-# define YYCASE_(N, S)                      \
-      case N:                               \
-        yyformat = S;                       \
-      break
-      YYCASE_(0, YY_("syntax error"));
-      YYCASE_(1, YY_("syntax error, unexpected %s"));
-      YYCASE_(2, YY_("syntax error, unexpected %s, expecting %s"));
-      YYCASE_(3, YY_("syntax error, unexpected %s, expecting %s or %s"));
-      YYCASE_(4, YY_("syntax error, unexpected %s, expecting %s or %s or %s"));
-      YYCASE_(5, YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s"));
-# undef YYCASE_
-    }
+      int yytype = YYTRANSLATE (yychar);
+      YYSIZE_T yysize0 = yytnamerr (0, yytname[yytype]);
+      YYSIZE_T yysize = yysize0;
+      YYSIZE_T yysize1;
+      int yysize_overflow = 0;
+      enum { YYERROR_VERBOSE_ARGS_MAXIMUM = 5 };
+      char const *yyarg[YYERROR_VERBOSE_ARGS_MAXIMUM];
+      int yyx;
+
+# if 0
+      /* This is so xgettext sees the translatable formats that are
+	 constructed on the fly.  */
+      YY_("syntax error, unexpected %s");
+      YY_("syntax error, unexpected %s, expecting %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s");
+      YY_("syntax error, unexpected %s, expecting %s or %s or %s or %s");
+# endif
+      char *yyfmt;
+      char const *yyf;
+      static char const yyunexpected[] = "syntax error, unexpected %s";
+      static char const yyexpecting[] = ", expecting %s";
+      static char const yyor[] = " or %s";
+      char yyformat[sizeof yyunexpected
+		    + sizeof yyexpecting - 1
+		    + ((YYERROR_VERBOSE_ARGS_MAXIMUM - 2)
+		       * (sizeof yyor - 1))];
+      char const *yyprefix = yyexpecting;
+
+      /* Start YYX at -YYN if negative to avoid negative indexes in
+	 YYCHECK.  */
+      int yyxbegin = yyn < 0 ? -yyn : 0;
+
+      /* Stay within bounds of both yycheck and yytname.  */
+      int yychecklim = YYLAST - yyn + 1;
+      int yyxend = yychecklim < YYNTOKENS ? yychecklim : YYNTOKENS;
+      int yycount = 1;
 
-  yysize1 = yysize + yystrlen (yyformat);
-  if (! (yysize <= yysize1 && yysize1 <= YYSTACK_ALLOC_MAXIMUM))
-    return 2;
-  yysize = yysize1;
-
-  if (*yymsg_alloc < yysize)
-    {
-      *yymsg_alloc = 2 * yysize;
-      if (! (yysize <= *yymsg_alloc
-             && *yymsg_alloc <= YYSTACK_ALLOC_MAXIMUM))
-        *yymsg_alloc = YYSTACK_ALLOC_MAXIMUM;
-      return 1;
-    }
+      yyarg[0] = yytname[yytype];
+      yyfmt = yystpcpy (yyformat, yyunexpected);
 
-  /* Avoid sprintf, as that infringes on the user's name space.
-     Don't have undefined behavior even if the translation
-     produced a string with the wrong number of "%s"s.  */
-  {
-    char *yyp = *yymsg;
-    int yyi = 0;
-    while ((*yyp = *yyformat) != '\0')
-      if (*yyp == '%' && yyformat[1] == 's' && yyi < yycount)
-        {
-          yyp += yytnamerr (yyp, yyarg[yyi++]);
-          yyformat += 2;
-        }
-      else
-        {
-          yyp++;
-          yyformat++;
-        }
-  }
-  return 0;
+      for (yyx = yyxbegin; yyx < yyxend; ++yyx)
+	if (yycheck[yyx + yyn] == yyx && yyx != YYTERROR)
+	  {
+	    if (yycount == YYERROR_VERBOSE_ARGS_MAXIMUM)
+	      {
+		yycount = 1;
+		yysize = yysize0;
+		yyformat[sizeof yyunexpected - 1] = '\0';
+		break;
+	      }
+	    yyarg[yycount++] = yytname[yyx];
+	    yysize1 = yysize + yytnamerr (0, yytname[yyx]);
+	    yysize_overflow |= (yysize1 < yysize);
+	    yysize = yysize1;
+	    yyfmt = yystpcpy (yyfmt, yyprefix);
+	    yyprefix = yyor;
+	  }
+
+      yyf = YY_(yyformat);
+      yysize1 = yysize + yystrlen (yyf);
+      yysize_overflow |= (yysize1 < yysize);
+      yysize = yysize1;
+
+      if (yysize_overflow)
+	return YYSIZE_MAXIMUM;
+
+      if (yyresult)
+	{
+	  /* Avoid sprintf, as that infringes on the user's name space.
+	     Don't have undefined behavior even if the translation
+	     produced a string with the wrong number of "%s"s.  */
+	  char *yyp = yyresult;
+	  int yyi = 0;
+	  while ((*yyp = *yyf) != '\0')
+	    {
+	      if (*yyp == '%' && yyf[1] == 's' && yyi < yycount)
+		{
+		  yyp += yytnamerr (yyp, yyarg[yyi++]);
+		  yyf += 2;
+		}
+	      else
+		{
+		  yyp++;
+		  yyf++;
+		}
+	    }
+	}
+      return yysize;
+    }
 }
 #endif /* YYERROR_VERBOSE */
+
 
 /*-----------------------------------------------.
 | Release the memory associated to this symbol.  |
@@ -1117,9 +1077,10 @@
 	break;
     }
 }
-
+
 
 /* Prevent warnings from -Wmissing-prototypes.  */
+
 #ifdef YYPARSE_PARAM
 #if defined __STDC__ || defined __cplusplus
 int yyparse (void *YYPARSE_PARAM);
@@ -1135,16 +1096,18 @@
 #endif /* ! YYPARSE_PARAM */
 
 
-/* The lookahead symbol.  */
+
+/* The look-ahead symbol.  */
 int yychar;
 
-/* The semantic value of the lookahead symbol.  */
+/* The semantic value of the look-ahead symbol.  */
 YYSTYPE yylval;
 
 /* Number of syntax errors so far.  */
 int yynerrs;
 
 
+
 /*----------.
 | yyparse.  |
 `----------*/
@@ -1171,37 +1134,14 @@
 #endif
 #endif
 {
-    int yystate;
-    /* Number of tokens to shift before error messages enabled.  */
-    int yyerrstatus;
-
-    /* The stacks and their tools:
-       `yyss': related to states.
-       `yyvs': related to semantic values.
-
-       Refer to the stacks thru separate pointers, to allow yyoverflow
-       to reallocate them elsewhere.  */
-
-    /* The state stack.  */
-    yytype_int16 yyssa[YYINITDEPTH];
-    yytype_int16 *yyss;
-    yytype_int16 *yyssp;
-
-    /* The semantic value stack.  */
-    YYSTYPE yyvsa[YYINITDEPTH];
-    YYSTYPE *yyvs;
-    YYSTYPE *yyvsp;
-
-    YYSIZE_T yystacksize;
-
+  
+  int yystate;
   int yyn;
   int yyresult;
-  /* Lookahead token as an internal (translated) token number.  */
-  int yytoken;
-  /* The variables used to return semantic value and location from the
-     action routines.  */
-  YYSTYPE yyval;
-
+  /* Number of tokens to shift before error messages enabled.  */
+  int yyerrstatus;
+  /* Look-ahead token as an internal (translated) token number.  */
+  int yytoken = 0;
 #if YYERROR_VERBOSE
   /* Buffer for error messages, and its allocated size.  */
   char yymsgbuf[128];
@@ -1209,28 +1149,51 @@
   YYSIZE_T yymsg_alloc = sizeof yymsgbuf;
 #endif
 
+  /* Three stacks and their tools:
+     `yyss': related to states,
+     `yyvs': related to semantic values,
+     `yyls': related to locations.
+
+     Refer to the stacks thru separate pointers, to allow yyoverflow
+     to reallocate them elsewhere.  */
+
+  /* The state stack.  */
+  yytype_int16 yyssa[YYINITDEPTH];
+  yytype_int16 *yyss = yyssa;
+  yytype_int16 *yyssp;
+
+  /* The semantic value stack.  */
+  YYSTYPE yyvsa[YYINITDEPTH];
+  YYSTYPE *yyvs = yyvsa;
+  YYSTYPE *yyvsp;
+
+
+
 #define YYPOPSTACK(N)   (yyvsp -= (N), yyssp -= (N))
 
+  YYSIZE_T yystacksize = YYINITDEPTH;
+
+  /* The variables used to return semantic value and location from the
+     action routines.  */
+  YYSTYPE yyval;
+
+
   /* The number of symbols on the RHS of the reduced rule.
      Keep to zero when no symbol should be popped.  */
   int yylen = 0;
 
-  yytoken = 0;
-  yyss = yyssa;
-  yyvs = yyvsa;
-  yystacksize = YYINITDEPTH;
-
   YYDPRINTF ((stderr, "Starting parse\n"));
 
   yystate = 0;
   yyerrstatus = 0;
   yynerrs = 0;
-  yychar = YYEMPTY; /* Cause a token to be read.  */
+  yychar = YYEMPTY;		/* Cause a token to be read.  */
 
   /* Initialize stack pointers.
      Waste one element of value and location stack
      so that they stay on the same level as the state stack.
      The wasted elements are never initialized.  */
+
   yyssp = yyss;
   yyvsp = yyvs;
 
@@ -1260,6 +1223,7 @@
 	YYSTYPE *yyvs1 = yyvs;
 	yytype_int16 *yyss1 = yyss;
 
+
 	/* Each stack pointer address is followed by the size of the
 	   data in use in that stack, in bytes.  This used to be a
 	   conditional around just the two extra args, but that might
@@ -1267,6 +1231,7 @@
 	yyoverflow (YY_("memory exhausted"),
 		    &yyss1, yysize * sizeof (*yyssp),
 		    &yyvs1, yysize * sizeof (*yyvsp),
+
 		    &yystacksize);
 
 	yyss = yyss1;
@@ -1289,8 +1254,9 @@
 	  (union yyalloc *) YYSTACK_ALLOC (YYSTACK_BYTES (yystacksize));
 	if (! yyptr)
 	  goto yyexhaustedlab;
-	YYSTACK_RELOCATE (yyss_alloc, yyss);
-	YYSTACK_RELOCATE (yyvs_alloc, yyvs);
+	YYSTACK_RELOCATE (yyss);
+	YYSTACK_RELOCATE (yyvs);
+
 #  undef YYSTACK_RELOCATE
 	if (yyss1 != yyssa)
 	  YYSTACK_FREE (yyss1);
@@ -1301,6 +1267,7 @@
       yyssp = yyss + yysize - 1;
       yyvsp = yyvs + yysize - 1;
 
+
       YYDPRINTF ((stderr, "Stack size increased to %lu\n",
 		  (unsigned long int) yystacksize));
 
@@ -1310,9 +1277,6 @@
 
   YYDPRINTF ((stderr, "Entering state %d\n", yystate));
 
-  if (yystate == YYFINAL)
-    YYACCEPT;
-
   goto yybackup;
 
 /*-----------.
@@ -1321,16 +1285,16 @@
 yybackup:
 
   /* Do appropriate processing given the current state.  Read a
-     lookahead token if we need one and don't already have one.  */
+     look-ahead token if we need one and don't already have one.  */
 
-  /* First try to decide what to do without reference to lookahead token.  */
+  /* First try to decide what to do without reference to look-ahead token.  */
   yyn = yypact[yystate];
-  if (yypact_value_is_default (yyn))
+  if (yyn == YYPACT_NINF)
     goto yydefault;
 
-  /* Not known => get a lookahead token if don't already have one.  */
+  /* Not known => get a look-ahead token if don't already have one.  */
 
-  /* YYCHAR is either YYEMPTY or YYEOF or a valid lookahead symbol.  */
+  /* YYCHAR is either YYEMPTY or YYEOF or a valid look-ahead symbol.  */
   if (yychar == YYEMPTY)
     {
       YYDPRINTF ((stderr, "Reading a token: "));
@@ -1356,22 +1320,26 @@
   yyn = yytable[yyn];
   if (yyn <= 0)
     {
-      if (yytable_value_is_error (yyn))
-        goto yyerrlab;
+      if (yyn == 0 || yyn == YYTABLE_NINF)
+	goto yyerrlab;
       yyn = -yyn;
       goto yyreduce;
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   /* Count tokens shifted since error; after three, turn off error
      status.  */
   if (yyerrstatus)
     yyerrstatus--;
 
-  /* Shift the lookahead token.  */
+  /* Shift the look-ahead token.  */
   YY_SYMBOL_PRINT ("Shifting", yytoken, &yylval, &yylloc);
 
-  /* Discard the shifted token.  */
-  yychar = YYEMPTY;
+  /* Discard the shifted token unless it is eof.  */
+  if (yychar != YYEOF)
+    yychar = YYEMPTY;
 
   yystate = yyn;
   *++yyvsp = yylval;
@@ -1411,8 +1379,6 @@
   switch (yyn)
     {
         case 2:
-
-/* Line 1806 of yacc.c  */
 #line 57 "specparse.y"
     {
 				parseresult.setupsqls = (char **) (yyvsp[(1) - (4)].ptr_list).elements;
@@ -1422,92 +1388,72 @@
 				parseresult.nsessions = (yyvsp[(3) - (4)].ptr_list).nelements;
 				parseresult.permutations = (Permutation **) (yyvsp[(4) - (4)].ptr_list).elements;
 				parseresult.npermutations = (yyvsp[(4) - (4)].ptr_list).nelements;
-			}
+			;}
     break;
 
   case 3:
-
-/* Line 1806 of yacc.c  */
 #line 70 "specparse.y"
     {
 				(yyval.ptr_list).elements = NULL;
 				(yyval.ptr_list).nelements = 0;
-			}
+			;}
     break;
 
   case 4:
-
-/* Line 1806 of yacc.c  */
 #line 75 "specparse.y"
     {
 				(yyval.ptr_list).elements = realloc((yyvsp[(1) - (2)].ptr_list).elements,
 									  ((yyvsp[(1) - (2)].ptr_list).nelements + 1) * sizeof(void *));
 				(yyval.ptr_list).elements[(yyvsp[(1) - (2)].ptr_list).nelements] = (yyvsp[(2) - (2)].str);
 				(yyval.ptr_list).nelements = (yyvsp[(1) - (2)].ptr_list).nelements + 1;
-			}
+			;}
     break;
 
   case 5:
-
-/* Line 1806 of yacc.c  */
 #line 84 "specparse.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 6:
-
-/* Line 1806 of yacc.c  */
 #line 85 "specparse.y"
-    { (yyval.str) = (yyvsp[(1) - (1)].str); }
+    { (yyval.str) = (yyvsp[(1) - (1)].str); ;}
     break;
 
   case 7:
-
-/* Line 1806 of yacc.c  */
 #line 89 "specparse.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 8:
-
-/* Line 1806 of yacc.c  */
 #line 93 "specparse.y"
-    { (yyval.str) = NULL; }
+    { (yyval.str) = NULL; ;}
     break;
 
   case 9:
-
-/* Line 1806 of yacc.c  */
 #line 94 "specparse.y"
-    { (yyval.str) = (yyvsp[(2) - (2)].str); }
+    { (yyval.str) = (yyvsp[(2) - (2)].str); ;}
     break;
 
   case 10:
-
-/* Line 1806 of yacc.c  */
 #line 99 "specparse.y"
     {
 				(yyval.ptr_list).elements = realloc((yyvsp[(1) - (2)].ptr_list).elements,
 									  ((yyvsp[(1) - (2)].ptr_list).nelements + 1) * sizeof(void *));
 				(yyval.ptr_list).elements[(yyvsp[(1) - (2)].ptr_list).nelements] = (yyvsp[(2) - (2)].session);
 				(yyval.ptr_list).nelements = (yyvsp[(1) - (2)].ptr_list).nelements + 1;
-			}
+			;}
     break;
 
   case 11:
-
-/* Line 1806 of yacc.c  */
 #line 106 "specparse.y"
     {
 				(yyval.ptr_list).nelements = 1;
 				(yyval.ptr_list).elements = malloc(sizeof(void *));
 				(yyval.ptr_list).elements[0] = (yyvsp[(1) - (1)].session);
-			}
+			;}
     break;
 
   case 12:
-
-/* Line 1806 of yacc.c  */
 #line 115 "specparse.y"
     {
 				(yyval.session) = malloc(sizeof(Session));
@@ -1516,137 +1462,105 @@
 				(yyval.session)->steps = (Step **) (yyvsp[(4) - (5)].ptr_list).elements;
 				(yyval.session)->nsteps = (yyvsp[(4) - (5)].ptr_list).nelements;
 				(yyval.session)->teardownsql = (yyvsp[(5) - (5)].str);
-			}
+			;}
     break;
 
   case 13:
-
-/* Line 1806 of yacc.c  */
 #line 127 "specparse.y"
     {
 				(yyval.ptr_list).elements = realloc((yyvsp[(1) - (2)].ptr_list).elements,
 									  ((yyvsp[(1) - (2)].ptr_list).nelements + 1) * sizeof(void *));
 				(yyval.ptr_list).elements[(yyvsp[(1) - (2)].ptr_list).nelements] = (yyvsp[(2) - (2)].step);
 				(yyval.ptr_list).nelements = (yyvsp[(1) - (2)].ptr_list).nelements + 1;
-			}
+			;}
     break;
 
   case 14:
-
-/* Line 1806 of yacc.c  */
 #line 134 "specparse.y"
     {
 				(yyval.ptr_list).nelements = 1;
 				(yyval.ptr_list).elements = malloc(sizeof(void *));
 				(yyval.ptr_list).elements[0] = (yyvsp[(1) - (1)].step);
-			}
+			;}
     break;
 
   case 15:
-
-/* Line 1806 of yacc.c  */
 #line 144 "specparse.y"
     {
 				(yyval.step) = malloc(sizeof(Step));
 				(yyval.step)->name = (yyvsp[(2) - (3)].str);
 				(yyval.step)->sql = (yyvsp[(3) - (3)].str);
 				(yyval.step)->errormsg = NULL;
-			}
+			;}
     break;
 
   case 16:
-
-/* Line 1806 of yacc.c  */
 #line 155 "specparse.y"
     {
 				(yyval.ptr_list) = (yyvsp[(1) - (1)].ptr_list);
-			}
+			;}
     break;
 
   case 17:
-
-/* Line 1806 of yacc.c  */
 #line 159 "specparse.y"
     {
 				(yyval.ptr_list).elements = NULL;
 				(yyval.ptr_list).nelements = 0;
-			}
+			;}
     break;
 
   case 18:
-
-/* Line 1806 of yacc.c  */
 #line 166 "specparse.y"
     {
 				(yyval.ptr_list).elements = realloc((yyvsp[(1) - (2)].ptr_list).elements,
 									  ((yyvsp[(1) - (2)].ptr_list).nelements + 1) * sizeof(void *));
 				(yyval.ptr_list).elements[(yyvsp[(1) - (2)].ptr_list).nelements] = (yyvsp[(2) - (2)].permutation);
 				(yyval.ptr_list).nelements = (yyvsp[(1) - (2)].ptr_list).nelements + 1;
-			}
+			;}
     break;
 
   case 19:
-
-/* Line 1806 of yacc.c  */
 #line 173 "specparse.y"
     {
 				(yyval.ptr_list).nelements = 1;
 				(yyval.ptr_list).elements = malloc(sizeof(void *));
 				(yyval.ptr_list).elements[0] = (yyvsp[(1) - (1)].permutation);
-			}
+			;}
     break;
 
   case 20:
-
-/* Line 1806 of yacc.c  */
 #line 183 "specparse.y"
     {
 				(yyval.permutation) = malloc(sizeof(Permutation));
 				(yyval.permutation)->stepnames = (char **) (yyvsp[(2) - (2)].ptr_list).elements;
 				(yyval.permutation)->nsteps = (yyvsp[(2) - (2)].ptr_list).nelements;
-			}
+			;}
     break;
 
   case 21:
-
-/* Line 1806 of yacc.c  */
 #line 192 "specparse.y"
     {
 				(yyval.ptr_list).elements = realloc((yyvsp[(1) - (2)].ptr_list).elements,
 									  ((yyvsp[(1) - (2)].ptr_list).nelements + 1) * sizeof(void *));
 				(yyval.ptr_list).elements[(yyvsp[(1) - (2)].ptr_list).nelements] = (yyvsp[(2) - (2)].str);
 				(yyval.ptr_list).nelements = (yyvsp[(1) - (2)].ptr_list).nelements + 1;
-			}
+			;}
     break;
 
   case 22:
-
-/* Line 1806 of yacc.c  */
 #line 199 "specparse.y"
     {
 				(yyval.ptr_list).nelements = 1;
 				(yyval.ptr_list).elements = malloc(sizeof(void *));
 				(yyval.ptr_list).elements[0] = (yyvsp[(1) - (1)].str);
-			}
+			;}
     break;
 
 
-
-/* Line 1806 of yacc.c  */
-#line 1637 "specparse.c"
+/* Line 1267 of yacc.c.  */
+#line 1562 "specparse.tab.c"
       default: break;
     }
-  /* User semantic actions sometimes alter yychar, and that requires
-     that yytoken be updated with the new translation.  We take the
-     approach of translating immediately before every use of yytoken.
-     One alternative is translating here after every semantic action,
-     but that translation would be missed if the semantic action invokes
-     YYABORT, YYACCEPT, or YYERROR immediately after altering yychar or
-     if it invokes YYBACKUP.  In the case of YYABORT or YYACCEPT, an
-     incorrect destructor might then be invoked immediately.  In the
-     case of YYERROR or YYBACKUP, subsequent parser actions might lead
-     to an incorrect destructor call or verbose syntax error message
-     before the lookahead is translated.  */
   YY_SYMBOL_PRINT ("-> $$ =", yyr1[yyn], &yyval, &yyloc);
 
   YYPOPSTACK (yylen);
@@ -1655,6 +1569,7 @@
 
   *++yyvsp = yyval;
 
+
   /* Now `shift' the result of the reduction.  Determine what state
      that goes to, based on the state we popped back to and the rule
      number reduced by.  */
@@ -1674,10 +1589,6 @@
 | yyerrlab -- here on detecting error |
 `------------------------------------*/
 yyerrlab:
-  /* Make sure we have latest lookahead translation.  See comments at
-     user semantic actions for why this is necessary.  */
-  yytoken = yychar == YYEMPTY ? YYEMPTY : YYTRANSLATE (yychar);
-
   /* If not already recovering from an error, report this error.  */
   if (!yyerrstatus)
     {
@@ -1685,36 +1596,37 @@
 #if ! YYERROR_VERBOSE
       yyerror (YY_("syntax error"));
 #else
-# define YYSYNTAX_ERROR yysyntax_error (&yymsg_alloc, &yymsg, \
-                                        yyssp, yytoken)
       {
-        char const *yymsgp = YY_("syntax error");
-        int yysyntax_error_status;
-        yysyntax_error_status = YYSYNTAX_ERROR;
-        if (yysyntax_error_status == 0)
-          yymsgp = yymsg;
-        else if (yysyntax_error_status == 1)
-          {
-            if (yymsg != yymsgbuf)
-              YYSTACK_FREE (yymsg);
-            yymsg = (char *) YYSTACK_ALLOC (yymsg_alloc);
-            if (!yymsg)
-              {
-                yymsg = yymsgbuf;
-                yymsg_alloc = sizeof yymsgbuf;
-                yysyntax_error_status = 2;
-              }
-            else
-              {
-                yysyntax_error_status = YYSYNTAX_ERROR;
-                yymsgp = yymsg;
-              }
-          }
-        yyerror (yymsgp);
-        if (yysyntax_error_status == 2)
-          goto yyexhaustedlab;
+	YYSIZE_T yysize = yysyntax_error (0, yystate, yychar);
+	if (yymsg_alloc < yysize && yymsg_alloc < YYSTACK_ALLOC_MAXIMUM)
+	  {
+	    YYSIZE_T yyalloc = 2 * yysize;
+	    if (! (yysize <= yyalloc && yyalloc <= YYSTACK_ALLOC_MAXIMUM))
+	      yyalloc = YYSTACK_ALLOC_MAXIMUM;
+	    if (yymsg != yymsgbuf)
+	      YYSTACK_FREE (yymsg);
+	    yymsg = (char *) YYSTACK_ALLOC (yyalloc);
+	    if (yymsg)
+	      yymsg_alloc = yyalloc;
+	    else
+	      {
+		yymsg = yymsgbuf;
+		yymsg_alloc = sizeof yymsgbuf;
+	      }
+	  }
+
+	if (0 < yysize && yysize <= yymsg_alloc)
+	  {
+	    (void) yysyntax_error (yymsg, yystate, yychar);
+	    yyerror (yymsg);
+	  }
+	else
+	  {
+	    yyerror (YY_("syntax error"));
+	    if (yysize != 0)
+	      goto yyexhaustedlab;
+	  }
       }
-# undef YYSYNTAX_ERROR
 #endif
     }
 
@@ -1722,7 +1634,7 @@
 
   if (yyerrstatus == 3)
     {
-      /* If just tried and failed to reuse lookahead token after an
+      /* If just tried and failed to reuse look-ahead token after an
 	 error, discard it.  */
 
       if (yychar <= YYEOF)
@@ -1739,7 +1651,7 @@
 	}
     }
 
-  /* Else will try to reuse lookahead token after shifting the error
+  /* Else will try to reuse look-ahead token after shifting the error
      token.  */
   goto yyerrlab1;
 
@@ -1773,7 +1685,7 @@
   for (;;)
     {
       yyn = yypact[yystate];
-      if (!yypact_value_is_default (yyn))
+      if (yyn != YYPACT_NINF)
 	{
 	  yyn += YYTERROR;
 	  if (0 <= yyn && yyn <= YYLAST && yycheck[yyn] == YYTERROR)
@@ -1796,6 +1708,9 @@
       YY_STACK_PRINT (yyss, yyssp);
     }
 
+  if (yyn == YYFINAL)
+    YYACCEPT;
+
   *++yyvsp = yylval;
 
 
@@ -1820,7 +1735,7 @@
   yyresult = 1;
   goto yyreturn;
 
-#if !defined(yyoverflow) || YYERROR_VERBOSE
+#ifndef yyoverflow
 /*-------------------------------------------------.
 | yyexhaustedlab -- memory exhaustion comes here.  |
 `-------------------------------------------------*/
@@ -1831,14 +1746,9 @@
 #endif
 
 yyreturn:
-  if (yychar != YYEMPTY)
-    {
-      /* Make sure we have latest lookahead translation.  See comments at
-         user semantic actions for why this is necessary.  */
-      yytoken = YYTRANSLATE (yychar);
-      yydestruct ("Cleanup: discarding lookahead",
-                  yytoken, &yylval);
-    }
+  if (yychar != YYEOF && yychar != YYEMPTY)
+     yydestruct ("Cleanup: discarding lookahead",
+		 yytoken, &yylval);
   /* Do not reclaim the symbols of the rule which action triggered
      this YYABORT or YYACCEPT.  */
   YYPOPSTACK (yylen);
@@ -1862,8 +1772,6 @@
 }
 
 
-
-/* Line 2067 of yacc.c  */
 #line 206 "specparse.y"
 
 
